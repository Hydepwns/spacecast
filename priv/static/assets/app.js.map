{
  "version": 3,
  "sources": ["../../../assets/js/components/notifications.js", "../../../assets/js/components/accessibility_menu_toggle.js", "../../../assets/js/components/copyable_code.js", "../../../assets/js/components/info_box.js", "../../../assets/js/components/keyboard_navigation.js", "../../../assets/js/utils/viewport_detector.js", "../../../assets/js/components/file_download.js", "../../../assets/js/components/mono_tabs.js", "../../../assets/js/components/toast.js", "../../../assets/js/app.js", "../../../assets/js/component_loader.js", "../../../assets/js/theme_hooks.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/utils.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/constants.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/push.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/timer.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/channel.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/ajax.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/longpoll.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/presence.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/serializer.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/socket.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/aria.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/element_ref.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../../assets/node_modules/phoenix_live_view/node_modules/morphdom/dist/morphdom-esm.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/js.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/index.js"],
  "sourcesContent": ["export class NotificationsComponent {\n  constructor(options) { \n    this.options = options; \n    this.element = options.el;\n  }\n  \n  mount() { \n    // Initialize notifications container\n    return this; \n  }\n  \n  destroy() {\n    // Cleanup if needed\n  }\n}\n\nexport class NotificationItem {\n  constructor(options) { \n    this.options = options; \n    this.element = options.el;\n    this.notificationId = this.element.dataset.notificationId;\n  }\n  \n  mount() { \n    // Initialize individual notification item\n    return this; \n  }\n  \n  destroy() {\n    // Cleanup if needed\n  }\n} ", "export class AccessibilityMenuToggleComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "export class CopyableCodeComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "export class InfoBoxComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "export class KeyboardNavigationComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "export class ViewportDetectorComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "const FileDownload = {\n  mounted() {\n    this.handleEvent(\"download_file\", ({ content, filename, mime_type }) => {\n      this.downloadFile(content, filename, mime_type);\n    });\n  },\n\n  downloadFile(content, filename, mime_type) {\n    // Create a blob from the content\n    const blob = new Blob([content], { type: mime_type });\n    \n    // Create a URL for the blob\n    const url = URL.createObjectURL(blob);\n    \n    // Create a temporary link element\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    \n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    // Clean up the URL\n    URL.revokeObjectURL(url);\n  }\n};\n\nexport default FileDownload; ", "export class MonoTabsComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "export class ToastComponent {\n  constructor(options) { this.options = options; }\n  mount() { return this; }\n  destroy() {}\n} ", "// import './components/auto_resize.js';\n// import './components/accessibility_menu_toggle.js';\n// import './components/ascii_art_generator.js';\n// import './components/copyable_code.js';\n// import './components/info_box.js';\n// import './components/keyboard_navigation.js';\n// import './components/mono_grid.js';\n// import './components/mono_tabs.js';\nimport './components/notifications.js';\n// import './components/toast.js';\n// import './components/viewport_detector.js';\nimport './utils/dom_cleanup.js';\nimport './event_manager.js';\nimport './component_loader.js';\nimport ThemeHooks from \"./theme_hooks.js\";\nimport { NotificationsComponent, NotificationItem } from \"./components/notifications.js\";\n\nimport { Socket } from \"phoenix\";\nimport { LiveSocket } from \"phoenix_live_view\";\n\n// Global error handler for JavaScript errors\nwindow.addEventListener('error', function(event) {\n  console.warn('JavaScript error caught and handled:', event.error);\n  // Prevent the error from causing test failures\n  event.preventDefault();\n  return false;\n});\n\n// Global unhandled promise rejection handler\nwindow.addEventListener('unhandledrejection', function(event) {\n  console.warn('Unhandled promise rejection caught and handled:', event.reason);\n  // Prevent the error from causing test failures\n  event.preventDefault();\n  return false;\n});\n\n// Enhanced error handling for LiveView\nconst originalTemplateStatic = window.templateStatic;\nif (originalTemplateStatic) {\n  window.templateStatic = function(part, templates) {\n    try {\n      if (!templates) {\n        console.warn('templates is null or undefined in templateStatic');\n        return part;\n      }\n      return originalTemplateStatic(part, templates);\n    } catch (error) {\n      console.warn('Error in templateStatic:', error);\n      return part;\n    }\n  };\n}\n\n// Enhanced error handling for component loading\nconst originalLoadComponents = window.loadComponents;\nif (originalLoadComponents) {\n  window.loadComponents = function() {\n    try {\n      return originalLoadComponents();\n    } catch (error) {\n      console.warn('Error loading components:', error);\n      return Promise.resolve();\n    }\n  };\n}\n\n// Enhanced error handling for DOM manipulation\nconst originalQuerySelector = document.querySelector;\ndocument.querySelector = function(selector) {\n  try {\n    const result = originalQuerySelector.call(this, selector);\n    if (!result) {\n      console.warn(`querySelector returned null for selector: ${selector}`);\n    }\n    return result;\n  } catch (error) {\n    console.warn('Error in querySelector:', error);\n    return null;\n  }\n};\n\nconst originalGetElementById = document.getElementById;\ndocument.getElementById = function(id) {\n  try {\n    const result = originalGetElementById.call(this, id);\n    if (!result) {\n      console.warn(`getElementById returned null for id: ${id}`);\n    }\n    return result;\n  } catch (error) {\n    console.warn('Error in getElementById:', error);\n    return null;\n  }\n};\n\n// Enhanced error handling for array access\nconst originalArrayAccess = Array.prototype.__get__;\nif (!originalArrayAccess) {\n  Array.prototype.__get__ = function(index) {\n    try {\n      if (this === null || this === undefined) {\n        console.warn('Attempting to access property of null/undefined array');\n        return undefined;\n      }\n      return this[index];\n    } catch (error) {\n      console.warn('Error in array access:', error);\n      return undefined;\n    }\n  };\n}\n\n// Initialize LiveSocket with enhanced error handling\nlet liveSocket = null;\n\ntry {\n  // Get CSRF token with enhanced error handling\n  const csrfToken = document.querySelector(\"meta[name='csrf-token']\")?.getAttribute(\"content\");\n  \n  if (!csrfToken) {\n    console.warn('CSRF token not found, using fallback');\n  }\n\n  // Initialize LiveSocket with error handling\n  liveSocket = new LiveSocket(\"/live\", Socket, {\n    params: { _csrf_token: csrfToken || \"\" },\n    hooks: {\n      ThemeHooks\n    },\n    dom: {\n      onBeforeElUpdated(from, to) {\n        try {\n          // Enhanced error handling for DOM updates\n          if (from._x_dataStack) {\n            window.Alpine.clone(from, to);\n          }\n        } catch (error) {\n          console.warn('Error in onBeforeElUpdated:', error);\n        }\n      }\n    }\n  });\n\n  // Enhanced error handling for LiveSocket connection\n  liveSocket.connect();\n\n  // Enhanced error handling for component loading\n  try {\n    loadComponents();\n  } catch (error) {\n    console.warn('Error in component loading:', error);\n  }\n\n} catch (error) {\n  console.error('Error initializing LiveSocket:', error);\n  // Create a minimal LiveSocket to prevent complete failure\n  liveSocket = new LiveSocket(\"/live\", Socket, {\n    params: { _csrf_token: \"\" },\n    hooks: {},\n    dom: {}\n  });\n}\n\n// Enhanced error handling for window events\nwindow.addEventListener('load', function() {\n  try {\n    // Any additional initialization code\n    console.log('Page loaded successfully');\n  } catch (error) {\n    console.warn('Error in page load handler:', error);\n  }\n});\n\n// Export for testing\nwindow.liveSocket = liveSocket; ", "const componentRegistry = {\n  // Selector to find on page: function to dynamically import the component\n  \"[data-action='toggle-accessibility-menu']\": () => import('./components/accessibility_menu_toggle.js'),\n  \"[data-action='copy-code']\": () => import('./components/copyable_code.js'),\n  \"[data-action='toggle-info-box']\": () => import('./components/info_box.js'),\n  // These are general and should be loaded on any page with a body\n  'body': [ \n    () => import('./components/keyboard_navigation.js'),\n    () => import('./utils/viewport_detector.js'),\n    () => import('./components/file_download.js'),\n  ],\n  '[data-tab]': () => import('./components/mono_tabs.js'),\n  \"[data-action='dismiss-notification']\": () => import('./components/notifications.js'),\n  \"[data-action='dismiss-toast']\": () => import('./components/toast.js'),\n};\n\nconst loadedComponents = new Set();\n\nfunction loadComponents() {\n  try {\n    Object.entries(componentRegistry).forEach(([selector, loaders]) => {\n      try {\n        // Validate selector before using it\n        if (!selector || typeof selector !== 'string') {\n          console.warn(\"Invalid selector:\", selector);\n          return;\n        }\n\n        // Check if element exists\n        const element = document.querySelector(selector);\n        if (!element) {\n          return; // Element not found, skip loading\n        }\n\n        const loaderArray = Array.isArray(loaders) ? loaders : [loaders];\n        loaderArray.forEach(loader => {\n          try {\n            const loaderKey = loader.toString();\n            if (!loadedComponents.has(loaderKey)) {\n              // Execute the loader function\n              const result = loader();\n              \n              // Handle both Promise and non-Promise results\n              if (result && typeof result.then === 'function') {\n                result.catch(error => {\n                  console.error(`Failed to load component for selector \"${selector}\":`, error);\n                });\n              }\n              \n              loadedComponents.add(loaderKey);\n            }\n          } catch (error) {\n            console.error(`Error loading component for selector \"${selector}\":`, error);\n          }\n        });\n      } catch (error) {\n        console.error(`Error processing selector \"${selector}\":`, error);\n      }\n    });\n  } catch (error) {\n    console.error(\"Error in loadComponents:\", error);\n  }\n}\n\n// Safe event listener registration\ntry {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', loadComponents);\n  } else {\n    // DOM is already loaded\n    loadComponents();\n  }\n} catch (error) {\n  console.error(\"Error setting up DOMContentLoaded listener:\", error);\n}\n\n// Safe phx:page-loading-stop listener\ntry {\n  window.addEventListener('phx:page-loading-stop', loadComponents);\n} catch (error) {\n  console.error(\"Error setting up phx:page-loading-stop listener:\", error);\n} ", "const ThemeHooks = {\n  mounted() {\n    this.handleEvent(\"set_theme_cookie\", ({ theme }) => {\n      // Set cookie for 1 year\n      const expires = new Date();\n      expires.setFullYear(expires.getFullYear() + 1);\n      document.cookie = `user_theme=${encodeURIComponent(theme)}; expires=${expires.toUTCString()}; path=/`;\n    });\n  }\n};\n\nexport default ThemeHooks; ", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = \"\"\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for(let i = 0; i < len; i++){ binary += String.fromCharCode(bytes[i]) }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", \"application/json\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within its own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body){\n    if(typeof(body) !== \"string\"){ body = arrayBufferToBase64(body) }\n    if(this.currentBatch){\n      this.currentBatch.push(body)\n    } else if(this.awaitingBatchAck){\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages){\n    this.awaitingBatchAck = true\n    this.ajax(\"POST\", \"application/x-ndjson\", messages.join(\"\\n\"), () => this.onerror(\"timeout\"), resp => {\n      this.awaitingBatchAck = false\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      } else if(this.batchBuffer.length > 0){\n        this.batchSend(this.batchBuffer)\n        this.batchBuffer = []\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, contentType, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), contentType, body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {Function} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {Function} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millisec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Phoenix uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Phoenix won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.disconnecting = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if(!this.logger && opts.debug){\n      this.logger = (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.disconnecting = true\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(() => {\n      this.disconnecting = false\n      callback && callback()\n    }, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn && !this.disconnecting){ return }\n    if(this.longPollFallbackMs && this.transport !== LongPoll){\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger && this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect(){\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key){ return this.sessionStore && this.sessionStore.getItem(key) }\n\n  storeSession(key, val){ this.sessionStore && this.sessionStore.setItem(key, val) }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500){\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log(\"transport\", `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if(this.getSession(`phx:fallback:${fallbackTransport.name}`)){ return fallback(\"memorized\") }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError(reason => {\n      this.log(\"transport\", \"error\", reason)\n      if(primaryTransport && !established){\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if(!primaryTransport){\n        // only memorize LP if we never connected to primary\n        if(!this.primaryPassedHealthCheck){ this.storeSession(`phx:fallback:${fallbackTransport.name}`, \"true\") }\n        return this.log(\"transport\", `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping(rtt => {\n        this.log(\"transport\", \"connected to primary after\", rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats(){\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.disconnecting = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(() => this.reconnectTimer.scheduleTimeout(), WS_CLOSE_NORMAL, \"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n    let connectClock = this.connectClock\n\n    this.waitForBufferDone(() => {\n      if(connectClock !== this.connectClock){ return }\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(connectClock !== this.connectClock){ return }\n        if(this.conn){\n          this.conn.onopen = function (){ } // noop\n          this.conn.onerror = function (){ } // noop\n          this.conn.onmessage = function (){ } // noop\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimeoutTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "export const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER_MIN = 5000\nexport const RELOAD_JITTER_MAX = 10000\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\",\n  \"phx-hook-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF_LOADING = \"data-phx-ref-loading\"\nexport const PHX_REF_SRC = \"data-phx-ref-src\"\nexport const PHX_REF_LOCK = \"data-phx-ref-lock\"\nexport const PHX_PENDING_REFS = \"phx-pending-refs\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_MAGIC_ID = \"data-phx-id\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_LOADING_CLASS = \"phx-loading\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_CLIENT_ERROR_CLASS = \"phx-client-error\"\nexport const PHX_SERVER_ERROR_CLASS = \"phx-server-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_VIEWPORT_TOP = \"viewport-top\"\nexport const PHX_VIEWPORT_BOTTOM = \"viewport-bottom\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\", \"datetime-local\", \"color\", \"range\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STICKY = \"data-phx-sticky\"\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_STREAM = \"stream\"\nexport const PHX_STREAM_REF = \"data-phx-stream\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_LV_HISTORY_POSITION = \"phx:nav-history-position\"\nexport const PHX_PROGRESS = \"progress\"\nexport const PHX_MOUNTED = \"mounted\"\nexport const PHX_RELOAD_STATUS = \"__phoenix_reload_status__\"\nexport const LOADER_TIMEOUT = 1\nexport const MAX_CHILD_JOIN_ATTEMPTS = 3\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const DISCONNECTED_TIMEOUT = 500\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\nexport const PHX_PENDING_ATTRS = [PHX_REF_LOADING, PHX_REF_SRC, PHX_REF_LOCK]\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const ROOT = \"r\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\nexport const STREAM = \"stream\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, config, liveSocket){\n    let {chunk_size, chunk_timeout} = config\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunk_size\n    this.chunkTimeout = chunk_timeout\n    this.chunkTimer = null\n    this.errored = false\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    if(this.errored){ return }\n    this.uploadChannel.leave()\n    this.errored = true\n    clearTimeout(this.chunkTimer)\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk, this.chunkTimeout)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n      .receive(\"error\", ({reason}) => this.error(reason))\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => {\n  let type = typeof(cid)\n  return type === \"number\" || (type === \"string\" && /^(0|[1-9]\\d*)$/.test(cid))\n}\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport function detectInvalidStreamInserts(inserts){\n  const errors = new Set()\n  Object.keys(inserts).forEach((id) => {\n    const streamEl = document.getElementById(id)\n    if(streamEl && streamEl.parentElement && streamEl.parentElement.getAttribute(\"phx-update\") !== \"stream\"){\n      errors.add(`The stream container with id \"${streamEl.parentElement.id}\" is missing the phx-update=\"stream\" attribute. Ensure it is set for streams to work properly.`)\n    }\n  })\n  errors.forEach(error => console.error(error))\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`) && !el.disabled){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n\n        // when using navigate, we'd call pushState immediately before patching the DOM,\n        // jumping back to the top of the page, effectively ignoring the scrollIntoView;\n        // therefore we wait for the next frame (after the DOM patch) and only then try\n        // to scroll to the hashEl\n        window.requestAnimationFrame(() => {\n          let hashEl = this.getHashTargetEl(window.location.hash)\n  \n          if(hashEl){\n            hashEl.scrollIntoView()\n          } else if(meta.type === \"redirect\"){\n            window.scroll(0, 0)\n          }\n        })\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value, maxAgeSeconds){\n    let expires = typeof(maxAgeSeconds) === \"number\" ? ` max-age=${maxAgeSeconds};` : \"\"\n    document.cookie = `${name}=${value};${expires} path=/`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  deleteCookie(name){\n    document.cookie = `${name}=; max-age=-1; path=/`\n  },\n\n  redirect(toURL, flash){\n    if(flash){ this.setCookie(\"__phoenix_flash__\", flash, 60) }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF_SRC,\n  PHX_REF_LOCK,\n  PHX_PENDING_ATTRS,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_STICKY,\n  PHX_EVENT_CLASSES,\n  THROTTLED,\n  PHX_STREAM,\n} from \"./constants\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  isAutoUpload(inputEl){ return inputEl.hasAttribute(\"data-phx-auto-upload\") },\n\n  findUploadInputs(node){\n    const formId = node.id\n    const inputsOutsideForm = this.all(document, `input[type=\"file\"][${PHX_UPLOAD_REF}][form=\"${formId}\"]`)\n    return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`).concat(inputsOutsideForm)\n  },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  wantsNewTab(e){\n    let wantsNewTab = e.ctrlKey || e.shiftKey || e.metaKey || (e.button && e.button === 1)\n    let isDownload = (e.target instanceof HTMLAnchorElement && e.target.hasAttribute(\"download\"))\n    let isTargetBlank = e.target.hasAttribute(\"target\") && e.target.getAttribute(\"target\").toLowerCase() === \"_blank\"\n    let isTargetNamedTab = e.target.hasAttribute(\"target\") && !e.target.getAttribute(\"target\").startsWith(\"_\")\n    return wantsNewTab || isTargetBlank || isDownload || isTargetNamedTab\n  },\n\n  isUnloadableFormSubmit(e){\n    // Ignore form submissions intended to close a native <dialog> element\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#usage_notes\n    let isDialogSubmit = (e.target && e.target.getAttribute(\"method\") === \"dialog\") ||\n      (e.submitter && e.submitter.getAttribute(\"formmethod\") === \"dialog\")\n\n    if(isDialogSubmit){\n      return false\n    } else {\n      return !e.defaultPrevented && !this.wantsNewTab(e)\n    }\n  },\n\n  isNewPageClick(e, currentLocation){\n    let href = e.target instanceof HTMLAnchorElement ? e.target.getAttribute(\"href\") : null\n    let url\n\n    if(e.defaultPrevented || href === null || this.wantsNewTab(e)){ return false }\n    if(href.startsWith(\"mailto:\") || href.startsWith(\"tel:\")){ return false }\n    if(e.target.isContentEditable){ return false }\n\n    try {\n      url = new URL(href)\n    } catch {\n      try {\n        url = new URL(href, currentLocation)\n      } catch {\n        // bad URL, fallback to let browser try it as external\n        return true\n      }\n    }\n\n    if(url.host === currentLocation.host && url.protocol === currentLocation.protocol){\n      if(url.pathname === currentLocation.pathname && url.search === currentLocation.search){\n        return url.hash === \"\" && !url.href.endsWith(\"#\")\n      }\n    }\n    return url.protocol.startsWith(\"http\")\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxSticky(el){ return this.all(el, `[${PHX_STICKY}]`) },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findExistingParentCIDs(node, cids){\n    // we only want to find parents that exist on the page\n    // if a cid is not on the page, the only way it can be added back to the page\n    // is if a parent adds it back, therefore if a cid does not exist on the page,\n    // we should not try to render it by itself (because it would be rendered twice,\n    // one by the parent, and a second time by itself)\n    let parentCids = new Set()\n    let childrenCids = new Set()\n\n    cids.forEach(cid => {\n      this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node).forEach(parent => {\n        parentCids.add(cid)\n        this.filterWithinSameLiveView(this.all(parent, `[${PHX_COMPONENT}]`), parent)\n          .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n          .forEach(childCID => childrenCids.add(childCID))\n      })\n    })\n\n    childrenCids.forEach(childCid => parentCids.delete(childCid))\n\n    return parentCids\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  syncPendingAttrs(fromEl, toEl){\n    if(!fromEl.hasAttribute(PHX_REF_SRC)){ return }\n    PHX_EVENT_CLASSES.forEach(className => {\n      fromEl.classList.contains(className) && toEl.classList.add(className)\n    })\n    PHX_PENDING_ATTRS.filter(attr => fromEl.hasAttribute(attr)).forEach(attr => {\n      toEl.setAttribute(attr, fromEl.getAttribute(attr))\n    })\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    if(titleEl){\n      let {prefix, suffix, default: defaultTitle} = titleEl.dataset\n      let isEmpty = typeof(str) !== \"string\" || str.trim() === \"\"\n      if(isEmpty && typeof(defaultTitle) !== \"string\"){ return }\n\n      let inner = isEmpty ? defaultTitle : str\n      document.title = `${prefix || \"\"}${inner || \"\"}${suffix || \"\"}`\n    } else {\n      document.title = str\n    }\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        this.incCycle(el, \"debounce-blur-cycle\", () => {\n          if(asyncFilter()){ callback() }\n        })\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, \"debounce-blur-cycle\"))\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            const t = setTimeout(() => {\n              if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER) }\n            }, timeout)\n            this.putPrivate(el, THROTTLED, t)\n          }\n        } else {\n          setTimeout(() => {\n            if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle) }\n          }, timeout)\n        }\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => {\n            // because we trigger the callback here,\n            // we also clear the throttle timeout to prevent the callback\n            // from being called again after the timeout fires\n            clearTimeout(this.private(el, THROTTLED))\n            this.triggerCycle(el, DEBOUNCE_TRIGGER)\n          })\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  // maintains or adds privately used hook information\n  // fromEl and toEl can be the same element in the case of a newly added node\n  // fromEl and toEl can be any HTML node type, so we need to check if it's an element node\n  maintainPrivateHooks(fromEl, toEl, phxViewportTop, phxViewportBottom){\n    // maintain the hooks created with createHook\n    if(fromEl.hasAttribute && fromEl.hasAttribute(\"data-phx-hook\") && !toEl.hasAttribute(\"data-phx-hook\")){\n      toEl.setAttribute(\"data-phx-hook\", fromEl.getAttribute(\"data-phx-hook\"))\n    }\n    // add hooks to elements with viewport attributes\n    if(toEl.hasAttribute && (toEl.hasAttribute(phxViewportTop) || toEl.hasAttribute(phxViewportBottom))){\n      toEl.setAttribute(\"data-phx-hook\", \"Phoenix.InfiniteScroll\")\n    }\n  },\n\n  putCustomElHook(el, hook){\n    if(el.isConnected){\n      el.setAttribute(\"data-phx-hook\", \"\")\n    } else {\n      console.error(`\n        hook attached to non-connected DOM element\n        ensure you are calling createHook within your connectedCallback. ${el.outerHTML}\n      `)\n    }\n    this.putPrivate(el, \"custom-el-hook\", hook)\n  },\n\n  getCustomElHook(el){ return this.private(el, \"custom-el-hook\") },\n\n  isUsedInput(el){\n    return (el.nodeType === Node.ELEMENT_NODE &&\n      (this.private(el, PHX_HAS_FOCUSED) || this.private(el, PHX_HAS_SUBMITTED)))\n  },\n\n  resetForm(form){\n    Array.from(form.elements).forEach(input => {\n      this.deletePrivate(input, PHX_HAS_FOCUSED)\n      this.deletePrivate(input, PHX_HAS_SUBMITTED)\n    })\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  isPhxSticky(node){\n    return node.getAttribute && node.getAttribute(PHX_STICKY) !== null\n  },\n\n  isChildOfAny(el, parents){\n    return !!parents.find(parent => parent.contains(el))\n  },\n\n  firstPhxChild(el){\n    return this.isPhxChild(el) ? el : this.all(el, `[${PHX_PARENT_ID}]`)[0]\n  },\n\n  dispatchEvent(target, name, opts = {}){\n    let defaultBubble = true\n    let isUploadTarget = target.nodeName === \"INPUT\" && target.type === \"file\"\n    if(isUploadTarget && name === \"click\"){\n      defaultBubble = false\n    }\n    let bubbles = opts.bubbles === undefined ? defaultBubble : !!opts.bubbles\n    let eventOpts = {bubbles: bubbles, cancelable: true, detail: opts.detail || {}}\n    let event = name === \"click\" ? new MouseEvent(\"click\", eventOpts) : new CustomEvent(name, eventOpts)\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  // merge attributes from source to target\n  // if an element is ignored, we only merge data attributes\n  // including removing data attributes that are no longer in the source\n  mergeAttrs(target, source, opts = {}){\n    let exclude = new Set(opts.exclude || [])\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(!exclude.has(name)){\n        const sourceValue = source.getAttribute(name)\n        if(target.getAttribute(name) !== sourceValue && (!isIgnored || (isIgnored && name.startsWith(\"data-\")))){\n          target.setAttribute(name, sourceValue)\n        }\n      } else {\n        // We exclude the value from being merged on focused inputs, because the\n        // user's input should always win.\n        // We can still assign it as long as the value property is the same, though.\n        // This prevents a situation where the updated hook is not being triggered\n        // when an input is back in its \"original state\", because the attribute\n        // was never changed, see:\n        // https://github.com/phoenixframework/phoenix_live_view/issues/2163\n        if(name === \"value\" && target.value === source.value){\n          // actually set the value attribute to sync it with the value property\n          target.setAttribute(\"value\", source.getAttribute(name))\n        }\n      }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name) && !PHX_PENDING_ATTRS.includes(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {exclude: [\"value\"]}) }\n\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(focused instanceof HTMLSelectElement){ focused.focus() }\n    if(!DOM.isTextualInput(focused)){ return }\n\n    let wasFocused = focused.matches(\":focus\")\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null && document.body.contains(el)\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\", PHX_STREAM])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode && childNode.nodeType !== Node.COMMENT_NODE){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName,]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName,]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  },\n\n  isLocked(el){\n    return el.hasAttribute && el.hasAttribute(PHX_REF_LOCK)\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  static isPreflightInProgress(file){\n    return file._preflightInProgress === true\n  }\n\n  static markPreflightInProgress(file){\n    file._preflightInProgress = true\n  }\n\n  constructor(fileEl, file, view, autoUpload){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function(){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.autoUpload = autoUpload\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  isCancelled(){ return this._isCancelled }\n\n  cancel(){\n    this.file._preflightInProgress = false\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    if(!this.isAutoUpload()){ LiveUploader.clearFiles(this.fileEl) }\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){\n      LiveUploader.untrackFile(this.fileEl, this.file)\n      this.cancel()\n    }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      relative_path: this.file.webkitRelativePath,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref,\n      meta: typeof(this.file.meta) === \"function\" ? this.file.meta() : undefined\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.last_modified = file.lastModified\n      entry.name = file.name || entry.ref\n      entry.relative_path = file.webkitRelativePath\n      entry.type = file.type\n      entry.size = file.size\n      if(typeof(file.meta) === \"function\"){ entry.meta = file.meta() }\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files, dataTransfer){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.updatePrivate(inputEl, \"files\", [], (existing) => existing.concat(newFiles))\n      inputEl.value = null\n    } else {\n      // Reset inputEl files to align output with programmatic changes (i.e. drag and drop)\n      if(dataTransfer && dataTransfer.files.length > 0){ inputEl.files = dataTransfer.files }\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f) && !UploadEntry.isPreflightInProgress(f))\n  }\n\n  static markPreflightInProgress(entries){\n    entries.forEach(entry => UploadEntry.markPreflightInProgress(entry.file))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.autoUpload = DOM.isAutoUpload(inputEl)\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view, this.autoUpload))\n\n    // prevent sending duplicate preflight requests\n    LiveUploader.markPreflightInProgress(this._entries)\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        if(entry.isCancelled()){\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        } else {\n          entry.zipPostFlight(resp)\n          entry.onDone(() => {\n            this.numEntriesInProgress--\n            if(this.numEntriesInProgress === 0){ this.onComplete() }\n          })\n        }\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      if(!entry.meta){ return acc }\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "let ARIA = {\n  anyOf(instance, classes){ return classes.find(name => instance instanceof name) },\n\n  isFocusable(el, interactiveOnly){\n    return (\n      (el instanceof HTMLAnchorElement && el.rel !== \"ignore\") ||\n      (el instanceof HTMLAreaElement && el.href !== undefined) ||\n      (!el.disabled && (this.anyOf(el, [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLButtonElement]))) ||\n      (el instanceof HTMLIFrameElement) ||\n      ((el.tabIndex >= 0 && el.getAttribute(\"aria-hidden\") !== \"true\") || (!interactiveOnly && el.getAttribute(\"tabindex\") !== null && el.getAttribute(\"aria-hidden\") !== \"true\"))\n    )\n  },\n\n  attemptFocus(el, interactiveOnly){\n    if(this.isFocusable(el, interactiveOnly)){ try { el.focus() } catch {} }\n    return !!document.activeElement && document.activeElement.isSameNode(el)\n  },\n\n  focusFirstInteractive(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child, true) || this.focusFirstInteractive(child, true)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusFirst(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusFirst(child)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusLast(el){\n    let child = el.lastElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusLast(child)){\n        return true\n      }\n      child = child.previousElementSibling\n    }\n  }\n}\nexport default ARIA\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\nimport ARIA from \"./aria\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view().cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  },\n  FocusWrap: {\n    mounted(){\n      this.focusStart = this.el.firstElementChild\n      this.focusEnd = this.el.lastElementChild\n      this.focusStart.addEventListener(\"focus\", (e) => {\n        if(!e.relatedTarget || !this.el.contains(e.relatedTarget)){ \n          // Handle focus entering from outside (e.g. Tab when body is focused)\n          // https://github.com/phoenixframework/phoenix_live_view/issues/3636\n          const nextFocus = e.target.nextElementSibling\n          ARIA.attemptFocus(nextFocus) || ARIA.focusFirst(nextFocus)\n        } else {\n          ARIA.focusLast(this.el)\n        }\n      })\n      this.focusEnd.addEventListener(\"focus\", (e) => {\n        if(!e.relatedTarget || !this.el.contains(e.relatedTarget)){ \n          // Handle focus entering from outside (e.g. Shift+Tab when body is focused)\n          // https://github.com/phoenixframework/phoenix_live_view/issues/3636\n          const nextFocus = e.target.previousElementSibling\n          ARIA.attemptFocus(nextFocus) || ARIA.focusLast(nextFocus)\n        } else {\n          ARIA.focusFirst(this.el)\n        }\n      })\n      this.el.addEventListener(\"phx:show-end\", () => this.el.focus())\n      if(window.getComputedStyle(this.el).display !== \"none\"){\n        ARIA.focusFirst(this.el)\n      }\n    }\n  }\n}\n\nlet findScrollContainer = (el) => {\n  // the scroll event won't be fired on the html/body element even if overflow is set\n  // therefore we return null to instead listen for scroll events on document\n  if([\"HTML\", \"BODY\"].indexOf(el.nodeName.toUpperCase()) >= 0) return null\n  if([\"scroll\", \"auto\"].indexOf(getComputedStyle(el).overflowY) >= 0) return el\n  return findScrollContainer(el.parentElement)\n}\n\nlet scrollTop = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.scrollTop\n  } else {\n    return document.documentElement.scrollTop || document.body.scrollTop\n  }\n}\n\nlet bottom = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().bottom\n  } else {\n    // when we have no container, the whole page scrolls,\n    // therefore the bottom coordinate is the viewport height\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n}\n\nlet top = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().top\n  } else {\n    // when we have no container the whole page scrolls,\n    // therefore the top coordinate is 0\n    return 0\n  }\n}\n\nlet isAtViewportTop = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.top) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.top) <= bottom(scrollContainer)\n}\n\nlet isAtViewportBottom = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.bottom) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.bottom) <= bottom(scrollContainer)\n}\n\nlet isWithinViewport = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.top) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.top) <= bottom(scrollContainer)\n}\n\nHooks.InfiniteScroll = {\n  mounted(){\n    this.scrollContainer = findScrollContainer(this.el)\n    let scrollBefore = scrollTop(this.scrollContainer)\n    let topOverran = false\n    let throttleInterval = 500\n    let pendingOp = null\n\n    let onTopOverrun = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => true\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id, _overran: true}, () => {\n        pendingOp = null\n      })\n    })\n\n    let onFirstChildAtTop = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => firstChild.scrollIntoView({block: \"start\"})\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(firstChild, this.scrollContainer)){\n            firstChild.scrollIntoView({block: \"start\"})\n          }\n        })\n      })\n    })\n\n    let onLastChildAtBottom = this.throttle(throttleInterval, (bottomEvent, lastChild) => {\n      pendingOp = () => lastChild.scrollIntoView({block: \"end\"})\n      this.liveSocket.execJSHookPush(this.el, bottomEvent, {id: lastChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(lastChild, this.scrollContainer)){\n            lastChild.scrollIntoView({block: \"end\"})\n          }\n        })\n      })\n    })\n\n    this.onScroll = (_e) => {\n      let scrollNow = scrollTop(this.scrollContainer)\n\n      if(pendingOp){\n        scrollBefore = scrollNow\n        return pendingOp()\n      }\n      let rect = this.el.getBoundingClientRect()\n      let topEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-top\"))\n      let bottomEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-bottom\"))\n      let lastChild = this.el.lastElementChild\n      let firstChild = this.el.firstElementChild\n      let isScrollingUp = scrollNow < scrollBefore\n      let isScrollingDown = scrollNow > scrollBefore\n\n      // el overran while scrolling up\n      if(isScrollingUp && topEvent && !topOverran && rect.top >= 0){\n        topOverran = true\n        onTopOverrun(topEvent, firstChild)\n      } else if(isScrollingDown && topOverran && rect.top <= 0){\n        topOverran = false\n      }\n\n      if(topEvent && isScrollingUp && isAtViewportTop(firstChild, this.scrollContainer)){\n        onFirstChildAtTop(topEvent, firstChild)\n      } else if(bottomEvent && isScrollingDown && isAtViewportBottom(lastChild, this.scrollContainer)){\n        onLastChildAtBottom(bottomEvent, lastChild)\n      }\n      scrollBefore = scrollNow\n    }\n\n    if(this.scrollContainer){\n      this.scrollContainer.addEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.addEventListener(\"scroll\", this.onScroll)\n    }\n  },\n  \n  destroyed(){\n    if(this.scrollContainer){\n      this.scrollContainer.removeEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.removeEventListener(\"scroll\", this.onScroll)\n    }\n  },\n\n  throttle(interval, callback){\n    let lastCallAt = 0\n    let timer\n\n    return (...args) => {\n      let now = Date.now()\n      let remainingTime = interval - (now - lastCallAt)\n\n      if(remainingTime <= 0 || remainingTime > interval){\n        if(timer){\n          clearTimeout(timer)\n          timer = null\n        }\n        lastCallAt = now\n        callback(...args)\n      } else if(!timer){\n        timer = setTimeout(() => {\n          lastCallAt = Date.now()\n          timer = null\n          callback(...args)\n        }, remainingTime)\n      }\n    }\n  }\n}\nexport default Hooks\n", "import {\n  PHX_REF_LOADING,\n  PHX_REF_LOCK,\n  PHX_REF_SRC,\n  PHX_PENDING_REFS,\n  PHX_EVENT_CLASSES,\n  PHX_DISABLED,\n  PHX_READONLY,\n  PHX_DISABLE_WITH_RESTORE\n} from \"./constants\"\n\nimport DOM from \"./dom\"\n\nexport default class ElementRef {\n  static onUnlock(el, callback){\n    if(!DOM.isLocked(el) && !el.closest(`[${PHX_REF_LOCK}]`)){ return callback() }\n    const closestLock = el.closest(`[${PHX_REF_LOCK}]`)\n    const ref = closestLock.closest(`[${PHX_REF_LOCK}]`).getAttribute(PHX_REF_LOCK)\n    closestLock.addEventListener(`phx:undo-lock:${ref}`, () => {\n      callback()\n    }, {once: true})\n  }\n\n  constructor(el){\n    this.el = el\n    this.loadingRef = el.hasAttribute(PHX_REF_LOADING) ? parseInt(el.getAttribute(PHX_REF_LOADING), 10) : null\n    this.lockRef = el.hasAttribute(PHX_REF_LOCK) ? parseInt(el.getAttribute(PHX_REF_LOCK), 10) : null\n  }\n\n  // public\n\n  maybeUndo(ref, phxEvent, eachCloneCallback){\n    if(!this.isWithin(ref)){\n      // we cannot undo the lock / loading now, as there is a newer one already set;\n      // we need to store the original ref we tried to send the undo event later\n      DOM.updatePrivate(this.el, PHX_PENDING_REFS, [], (pendingRefs) => {\n        pendingRefs.push(ref)\n        return pendingRefs\n      })\n      return\n    }\n\n    // undo locks and apply clones\n    this.undoLocks(ref, phxEvent, eachCloneCallback)\n\n    // undo loading states\n    this.undoLoading(ref, phxEvent)\n\n    // ensure undo events are fired for pending refs that\n    // are resolved by the current ref, otherwise we'd leak event listeners\n    DOM.updatePrivate(this.el, PHX_PENDING_REFS, [], (pendingRefs) => {\n      return pendingRefs.filter((pendingRef) => {\n        let opts = {\n          detail: {ref: pendingRef, event: phxEvent},\n          bubbles: true,\n          cancelable: false,\n        }\n        if(this.loadingRef && this.loadingRef > pendingRef){\n          this.el.dispatchEvent(\n            new CustomEvent(`phx:undo-loading:${pendingRef}`, opts),\n          )\n        }\n        if(this.lockRef && this.lockRef > pendingRef){\n          this.el.dispatchEvent(\n            new CustomEvent(`phx:undo-lock:${pendingRef}`, opts),\n          )\n        }\n        return pendingRef > ref\n      })\n    })\n\n    // clean up if fully resolved\n    if(this.isFullyResolvedBy(ref)){ this.el.removeAttribute(PHX_REF_SRC) }\n  }\n\n  // private\n\n  isWithin(ref){\n    return !((this.loadingRef !== null && this.loadingRef > ref) && (this.lockRef !== null && this.lockRef > ref))\n  }\n\n  // Check for cloned PHX_REF_LOCK element that has been morphed behind\n  // the scenes while this element was locked in the DOM.\n  // When we apply the cloned tree to the active DOM element, we must\n  //\n  //   1. execute pending mounted hooks for nodes now in the DOM\n  //   2. undo any ref inside the cloned tree that has since been ack'd\n  undoLocks(ref, phxEvent, eachCloneCallback){\n    if(!this.isLockUndoneBy(ref)){ return }\n\n    let clonedTree = DOM.private(this.el, PHX_REF_LOCK)\n    if(clonedTree){\n      eachCloneCallback(clonedTree)\n      DOM.deletePrivate(this.el, PHX_REF_LOCK)\n    }\n    this.el.removeAttribute(PHX_REF_LOCK)\n\n    let opts = {detail: {ref: ref, event: phxEvent}, bubbles: true, cancelable: false}\n    this.el.dispatchEvent(new CustomEvent(`phx:undo-lock:${this.lockRef}`, opts))\n  }\n\n  undoLoading(ref, phxEvent){\n    if(!this.isLoadingUndoneBy(ref)){\n      if(this.canUndoLoading(ref) && this.el.classList.contains(\"phx-submit-loading\")){\n        this.el.classList.remove(\"phx-change-loading\")\n      }\n      return\n    }\n\n    if(this.canUndoLoading(ref)){\n      this.el.removeAttribute(PHX_REF_LOADING)\n      let disabledVal = this.el.getAttribute(PHX_DISABLED)\n      let readOnlyVal = this.el.getAttribute(PHX_READONLY)\n      // restore inputs\n      if(readOnlyVal !== null){\n        this.el.readOnly = readOnlyVal === \"true\" ? true : false\n        this.el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        this.el.disabled = disabledVal === \"true\" ? true : false\n        this.el.removeAttribute(PHX_DISABLED)\n      }\n      // restore disables\n      let disableRestore = this.el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        this.el.innerText = disableRestore\n        this.el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n\n      let opts = {detail: {ref: ref, event: phxEvent}, bubbles: true, cancelable: false}\n      this.el.dispatchEvent(new CustomEvent(`phx:undo-loading:${this.loadingRef}`, opts))\n    }\n\n    // remove classes\n    PHX_EVENT_CLASSES.forEach(name => {\n      if(name !== \"phx-submit-loading\" || this.canUndoLoading(ref)){\n        DOM.removeClass(this.el, name)\n      }\n    })\n  }\n\n  isLoadingUndoneBy(ref){ return this.loadingRef === null ? false : this.loadingRef <= ref }\n  isLockUndoneBy(ref){ return this.lockRef === null ? false : this.lockRef <= ref }\n\n  isFullyResolvedBy(ref){\n    return (this.loadingRef === null || this.loadingRef <= ref) && (this.lockRef === null || this.lockRef <= ref)\n  }\n\n  // only remove the phx-submit-loading class if we are not locked\n  canUndoLoading(ref){ return this.lockRef === null || this.lockRef <= ref }\n}\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        var beforeUpdateResult = onBeforeElUpdated(fromEl, toEl);\n        if (beforeUpdateResult === false) {\n          return;\n        } else if (beforeUpdateResult instanceof HTMLElement) {\n          fromEl = beforeUpdateResult;\n          // reindex the new fromEl in case it's not in the same\n          // tree as the original fromEl\n          // (Phoenix LiveView sometimes returns a cloned tree,\n          //  but keyed lookups would still point to the original tree)\n          indexTree(fromEl);\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl, toEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                      curFromNodeKey = getNodeKey(curFromNodeChild);\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE,\n  PHX_REF_SRC,\n  PHX_REF_LOCK,\n  PHX_STREAM,\n  PHX_STREAM_REF,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  detectInvalidStreamInserts,\n  isCid\n} from \"./utils\"\nimport ElementRef from \"./element_ref\"\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  constructor(view, container, id, html, streams, targetCID, opts={}){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.streams = streams\n    this.streamInserts = {}\n    this.streamComponentRestore = {}\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.pendingRemoves = []\n    this.phxRemove = this.liveSocket.binding(\"remove\")\n    this.targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n    this.withChildren = opts.withChildren || opts.undoRef || false\n    this.undoRef = opts.undoRef\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    let phxUpdate = this.liveSocket.binding(PHX_UPDATE)\n    DOM.all(this.container, `[${phxUpdate}=append] > *, [${phxUpdate}=prepend] > *`, el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(isJoinPatch){\n    let {view, liveSocket, html, container, targetContainer} = this\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxViewportTop = liveSocket.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = liveSocket.binding(PHX_VIEWPORT_BOTTOM)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n\n    let externalFormTriggered = null\n\n    function morph(targetContainer, source, withChildren=this.withChildren){\n      let morphCallbacks = {\n        // normally, we are running with childrenOnly, as the patch HTML for a LV\n        // does not include the LV attrs (data-phx-session, etc.)\n        // when we are patching a live component, we do want to patch the root element as well;\n        // another case is the recursive patch of a stream item that was kept on reset (-> onBeforeNodeAdded)\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null && !withChildren,\n        getNodeKey: (node) => {\n          if(DOM.isPhxDestroyed(node)){ return null }\n          // If we have a join patch, then by definition there was no PHX_MAGIC_ID.\n          // This is important to reduce the amount of elements morphdom discards.\n          if(isJoinPatch){ return node.id }\n          return node.id || (node.getAttribute && node.getAttribute(PHX_MAGIC_ID))\n        },\n        // skip indexing from children when container is stream\n        skipFromChildren: (from) => { return from.getAttribute(phxUpdate) === PHX_STREAM },\n        // tell morphdom how to add a child\n        addChild: (parent, child) => {\n          let {ref, streamAt} = this.getStreamInsert(child)\n          if(ref === undefined){ return parent.appendChild(child) }\n\n          this.setStreamRef(child, ref)\n\n          // streaming\n          if(streamAt === 0){\n            parent.insertAdjacentElement(\"afterbegin\", child)\n          } else if(streamAt === -1){\n            let lastChild = parent.lastElementChild\n            if(lastChild && !lastChild.hasAttribute(PHX_STREAM_REF)){\n              let nonStreamChild = Array.from(parent.children).find(c => !c.hasAttribute(PHX_STREAM_REF))\n              parent.insertBefore(child, nonStreamChild)\n            } else {\n              parent.appendChild(child)\n            }\n          } else if(streamAt > 0){\n            let sibling = Array.from(parent.children)[streamAt]\n            parent.insertBefore(child, sibling)\n          }\n        },\n        onBeforeNodeAdded: (el) => {\n          DOM.maintainPrivateHooks(el, el, phxViewportTop, phxViewportBottom)\n          this.trackBefore(\"added\", el)\n\n          let morphedEl = el\n          // this is a stream item that was kept on reset, recursively morph it\n          if(this.streamComponentRestore[el.id]){\n            morphedEl = this.streamComponentRestore[el.id]\n            delete this.streamComponentRestore[el.id]\n            morph.call(this, morphedEl, el, true)\n          }\n\n          return morphedEl\n        },\n        onNodeAdded: (el) => {\n          if(el.getAttribute){ this.maybeReOrderStream(el, true) }\n\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n\n          // nested view handling\n          if((DOM.isPhxChild(el) && view.ownsElement(el)) || DOM.isPhxSticky(el) && view.ownsElement(el.parentNode)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => this.onNodeDiscarded(el),\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentElement !== null && el.id &&\n            DOM.isPhxUpdate(el.parentElement, phxUpdate, [PHX_STREAM, \"append\", \"prepend\"])){\n            return false\n          }\n          if(this.maybePendingRemove(el)){ return false }\n          if(this.skipCIDSibling(el)){ return false }\n\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n          this.maybeReOrderStream(el, false)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          // if we are patching the root target container and the id has changed, treat it as a new node\n          // by replacing the fromEl with the toEl, which ensures hooks are torn down and re-created\n          if(fromEl.id && fromEl.isSameNode(targetContainer) && fromEl.id !== toEl.id){\n            morphCallbacks.onNodeDiscarded(fromEl)\n            fromEl.replaceWith(toEl)\n            return morphCallbacks.onNodeAdded(toEl)\n          }\n          DOM.syncPendingAttrs(fromEl, toEl)\n          DOM.maintainPrivateHooks(fromEl, toEl, phxViewportTop, phxViewportBottom)\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){\n            // if this is a live component used in a stream, we may need to reorder it\n            this.maybeReOrderStream(fromEl)\n            return false\n          }\n          if(DOM.isPhxSticky(fromEl)){\n            [PHX_SESSION, PHX_STATIC, PHX_ROOT_ID]\n              .map(attr => [attr, fromEl.getAttribute(attr), toEl.getAttribute(attr)])\n              .forEach(([attr, fromVal, toVal]) => {\n                if(toVal && fromVal !== toVal){ fromEl.setAttribute(attr, toVal) }\n              })\n\n            return false\n          }\n          if(DOM.isIgnored(fromEl, phxUpdate) || (fromEl.form && fromEl.form.isSameNode(externalFormTriggered))){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: DOM.isIgnored(fromEl, phxUpdate)})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          // If the element has PHX_REF_SRC, it is loading or locked and awaiting an ack.\n          // If it's locked, we clone the fromEl tree and instruct morphdom to use\n          // the cloned tree as the source of the morph for this branch from here on out.\n          // We keep a reference to the cloned tree in the element's private data, and\n          // on ack (view.undoRefs), we morph the cloned tree with the true fromEl in the DOM to\n          // apply any changes that happened while the element was locked.\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          let focusedSelectChanged = isFocusedFormEl && this.isChangedSelect(fromEl, toEl)\n          if(fromEl.hasAttribute(PHX_REF_SRC)){\n            const ref = new ElementRef(fromEl)\n            // only perform the clone step if this is not a patch that unlocks\n            if(ref.lockRef && (!this.undoRef || !ref.isLockUndoneBy(this.undoRef))){\n              if(DOM.isUploadInput(fromEl)){\n                DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n                this.trackBefore(\"updated\", fromEl, toEl)\n                updates.push(fromEl)\n              }\n              DOM.applyStickyOperations(fromEl)\n              let isLocked = fromEl.hasAttribute(PHX_REF_LOCK)\n              let clone = isLocked ? DOM.private(fromEl, PHX_REF_LOCK) || fromEl.cloneNode(true) : null\n              if(clone){\n                DOM.putPrivate(fromEl, PHX_REF_LOCK, clone)\n                if(!isFocusedFormEl){\n                  fromEl = clone\n                }\n              }\n            }\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // if we are undoing a lock, copy potentially nested clones over\n          if(this.undoRef && DOM.private(toEl, PHX_REF_LOCK)){\n            DOM.putPrivate(fromEl, PHX_REF_LOCK, DOM.private(toEl, PHX_REF_LOCK))\n          }\n          // now copy regular DOM.private data\n          DOM.copyPrivates(toEl, fromEl)\n\n          // skip patching focused inputs unless focus is a select that has changed options\n          if(isFocusedFormEl && fromEl.type !== \"hidden\" && !focusedSelectChanged){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            // blur focused select if it changed so native UI is updated (ie safari won't update visible options)\n            if(focusedSelectChanged){ fromEl.blur() }\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return fromEl\n          }\n        }\n      }\n      morphdom(targetContainer, source, morphCallbacks)\n    }\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      this.streams.forEach(([ref, inserts, deleteIds, reset]) => {\n        inserts.forEach(([key, streamAt, limit]) => {\n          this.streamInserts[key] = {ref, streamAt, limit, reset}\n        })\n        if(reset !== undefined){\n          DOM.all(container, `[${PHX_STREAM_REF}=\"${ref}\"]`, child => {\n            this.removeStreamChildElement(child)\n          })\n        }\n        deleteIds.forEach(id => {\n          let child = container.querySelector(`[id=\"${id}\"]`)\n          if(child){ this.removeStreamChildElement(child) }\n        })\n      })\n\n      // clear stream items from the dead render if they are not inserted again\n      if(isJoinPatch){\n        DOM.all(this.container, `[${phxUpdate}=${PHX_STREAM}]`)\n          // it is important to filter the element before removing them, as\n          // it may happen that streams are nested and the owner check fails if\n          // a parent is removed before a child\n          .filter(el => this.view.ownsElement(el))\n          .forEach(el => {\n            Array.from(el.children).forEach(child => {\n              // we already performed the owner check, each child is guaranteed to be owned\n              // by the view. To prevent the nested owner check from failing in case of nested\n              // streams where the parent is removed before the child, we force the removal\n              this.removeStreamChildElement(child, true)\n            })\n          })\n      }\n\n      morph.call(this, targetContainer, html)\n    })\n\n    if(liveSocket.isDebugEnabled()){\n      detectDuplicateIds()\n      detectInvalidStreamInserts(this.streamInserts)\n      // warn if there are any inputs named \"id\"\n      Array.from(document.querySelectorAll(\"input[name=id]\")).forEach(node => {\n        if(node.form){\n          console.error(\"Detected an input with name=\\\"id\\\" inside a form! This will cause problems when patching the DOM.\\n\", node)\n        }\n      })\n    }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    this.transitionPendingRemoves()\n\n    if(externalFormTriggered){\n      liveSocket.unload()\n      // check for submitter and inject it as hidden input for external submit;\n      // In theory, it could happen that the stored submitter is outdated and doesn't\n      // exist in the DOM any more, but this is unlikely, so we just accept it for now.\n      const submitter = DOM.private(externalFormTriggered, \"submitter\")\n      if(submitter && submitter.name && targetContainer.contains(submitter)){\n        const input = document.createElement(\"input\")\n        input.type = \"hidden\"\n        const formId = submitter.getAttribute(\"form\")\n        if(formId){\n          input.setAttribute(\"form\", formId)\n        }\n        input.name = submitter.name\n        input.value = submitter.value\n        submitter.parentElement.insertBefore(input, submitter)\n      }\n      // use prototype's submit in case there's a form control with name or id of \"submit\"\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit\n      Object.getPrototypeOf(externalFormTriggered).submit.call(externalFormTriggered)\n    }\n    return true\n  }\n\n  onNodeDiscarded(el){\n    // nested view handling\n    if(DOM.isPhxChild(el) || DOM.isPhxSticky(el)){ this.liveSocket.destroyViewByEl(el) }\n    this.trackAfter(\"discarded\", el)\n  }\n\n  maybePendingRemove(node){\n    if(node.getAttribute && node.getAttribute(this.phxRemove) !== null){\n      this.pendingRemoves.push(node)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  removeStreamChildElement(child, force=false){\n    // make sure to only remove elements owned by the current view\n    // see https://github.com/phoenixframework/phoenix_live_view/issues/3047\n    // and https://github.com/phoenixframework/phoenix_live_view/issues/3681\n    if(!force && !this.view.ownsElement(child)){ return }\n\n    // we need to store the node if it is actually re-added in the same patch\n    // we do NOT want to execute phx-remove, we do NOT want to call onNodeDiscarded\n    if(this.streamInserts[child.id]){\n      this.streamComponentRestore[child.id] = child\n      child.remove()\n    } else {\n      // only remove the element now if it has no phx-remove binding\n      if(!this.maybePendingRemove(child)){\n        child.remove()\n        this.onNodeDiscarded(child)\n      }\n    }\n  }\n\n  getStreamInsert(el){\n    let insert = el.id ? this.streamInserts[el.id] : {}\n    return insert || {}\n  }\n\n  setStreamRef(el, ref){\n    DOM.putSticky(el, PHX_STREAM_REF, el => el.setAttribute(PHX_STREAM_REF, ref))\n  }\n\n  maybeReOrderStream(el, isNew){\n    let {ref, streamAt, reset} = this.getStreamInsert(el)\n    if(streamAt === undefined){ return }\n\n    // we need to set the PHX_STREAM_REF here as well as addChild is invoked only for parents\n    this.setStreamRef(el, ref)\n\n    if(!reset && !isNew){\n      // we only reorder if the element is new or it's a stream reset\n      return\n    }\n\n    // check if the element has a parent element;\n    // it doesn't if we are currently recursively morphing (restoring a saved stream child)\n    // because the element is not yet added to the real dom;\n    // reordering does not make sense in that case anyway\n    if(!el.parentElement){ return }\n\n    if(streamAt === 0){\n      el.parentElement.insertBefore(el, el.parentElement.firstElementChild)\n    } else if(streamAt > 0){\n      let children = Array.from(el.parentElement.children)\n      let oldIndex = children.indexOf(el)\n      if(streamAt >= children.length - 1){\n        el.parentElement.appendChild(el)\n      } else {\n        let sibling = children[streamAt]\n        if(oldIndex > streamAt){\n          el.parentElement.insertBefore(el, sibling)\n        } else {\n          el.parentElement.insertBefore(el, sibling.nextElementSibling)\n        }\n      }\n    }\n\n    this.maybeLimitStream(el)\n  }\n\n  maybeLimitStream(el){\n    let {limit} = this.getStreamInsert(el)\n    let children = limit !== null && Array.from(el.parentElement.children)\n    if(limit && limit < 0 && children.length > limit * -1){\n      children.slice(0, children.length + limit).forEach(child => this.removeStreamChildElement(child))\n    } else if(limit && limit >= 0 && children.length > limit){\n      children.slice(limit).forEach(child => this.removeStreamChildElement(child))\n    }\n  }\n\n  transitionPendingRemoves(){\n    let {pendingRemoves, liveSocket} = this\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves, () => {\n        pendingRemoves.forEach(el => {\n          let child = DOM.firstPhxChild(el)\n          if(child){ liveSocket.destroyViewByEl(child) }\n          el.remove()\n        })\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n  }\n\n  isChangedSelect(fromEl, toEl){\n    if(!(fromEl instanceof HTMLSelectElement) || fromEl.multiple){ return false }\n    if(fromEl.options.length !== toEl.options.length){ return true }\n\n    // keep the current value\n    toEl.value = fromEl.value\n\n    // in general we have to be very careful with using isEqualNode as it does not a reliable\n    // DOM tree equality check, but for selection attributes and options it works fine\n    return !fromEl.isEqualNode(toEl)\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.hasAttribute(PHX_SKIP)\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  indexOf(parent, child){ return Array.from(parent.children).indexOf(child) }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  REPLY,\n  STATIC,\n  TITLE,\n  STREAM,\n  ROOT,\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nconst VOID_TAGS = new Set([\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n])\nconst quoteChars = new Set([\"'\", \"\\\"\"])\n\nexport let modifyRoot = (html, attrs, clearInnerHTML) => {\n  let i = 0\n  let insideComment = false\n  let beforeTag, afterTag, tag, tagNameEndsAt, id, newHTML\n\n  let lookahead = html.match(/^(\\s*(?:<!--.*?-->\\s*)*)<([^\\s\\/>]+)/)\n  if(lookahead === null){ throw new Error(`malformed html ${html}`) }\n\n  i = lookahead[0].length\n  beforeTag = lookahead[1]\n  tag = lookahead[2]\n  tagNameEndsAt = i\n\n  // Scan the opening tag for id, if there is any\n  for(i; i < html.length; i++){\n    if(html.charAt(i) === \">\" ){ break }\n    if(html.charAt(i) === \"=\"){\n      let isId = html.slice(i - 3, i) === \" id\"\n      i++\n      let char = html.charAt(i)\n      if(quoteChars.has(char)){\n        let attrStartsAt = i\n        i++\n        for(i; i < html.length; i++){\n          if(html.charAt(i) === char){ break }\n        }\n        if(isId){\n          id = html.slice(attrStartsAt + 1, i)\n          break\n        }\n      }\n    }\n  }\n\n  let closeAt = html.length - 1\n  insideComment = false\n  while(closeAt >= beforeTag.length + tag.length){\n    let char = html.charAt(closeAt)\n    if(insideComment){\n      if(char === \"-\" && html.slice(closeAt - 3, closeAt) === \"<!-\"){\n        insideComment = false\n        closeAt -= 4\n      } else {\n        closeAt -= 1\n      }\n    } else if(char === \">\" && html.slice(closeAt - 2, closeAt) === \"--\"){\n      insideComment = true\n      closeAt -= 3\n    } else if(char === \">\"){\n      break\n    } else {\n      closeAt -= 1\n    }\n  }\n  afterTag = html.slice(closeAt + 1, html.length)\n\n  let attrsStr =\n    Object.keys(attrs)\n      .map(attr => attrs[attr] === true ? attr : `${attr}=\"${attrs[attr]}\"`)\n      .join(\" \")\n\n  if(clearInnerHTML){\n    // Keep the id if any\n    let idAttrStr = id ? ` id=\"${id}\"` : \"\"\n    if(VOID_TAGS.has(tag)){\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}/>`\n    } else {\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}></${tag}>`\n    }\n  } else {\n    let rest = html.slice(tagNameEndsAt, closeAt + 1)\n    newHTML = `<${tag}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}${rest}`\n  }\n\n  return [newHTML, beforeTag, afterTag]\n}\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.magicId = 0\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    let [str, streams] = this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids, true, {})\n    return [str, streams]\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids, changeTracking, rootAttrs){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids, streams: new Set()}\n    this.toOutputBuffer(rendered, null, output, changeTracking, rootAttrs)\n    return [output.buffer, output.streams]\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  resetRender(cid){\n    // we are racing a component destroy, it could not exist, so\n    // make sure that we don't try to set reset on undefined\n    if(this.rendered[COMPONENTS][cid]){\n      this.rendered[COMPONENTS][cid].reset = true\n    }\n  }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff, true)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined || oldc[cid] === undefined ?\n          cdiff : this.cloneMerge(oldc[cid], cdiff, false)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      let isObjVal = isObject(val)\n      if(isObjVal && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n    if(target[ROOT]){\n      target.newRender = true\n    }\n  }\n\n  // Merges cid trees together, copying statics from source tree.\n  //\n  // The `pruneMagicId` is passed to control pruning the magicId of the\n  // target. We must always prune the magicId when we are sharing statics\n  // from another component. If not pruning, we replicate the logic from\n  // mutableMerge, where we set newRender to true if there is a root\n  // (effectively forcing the new version to be rendered instead of skipped)\n  //\n  cloneMerge(target, source, pruneMagicId){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val, pruneMagicId)\n      } else if(val === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, {}, pruneMagicId)\n      }\n    }\n    if(pruneMagicId){\n      delete merged.magicId\n      delete merged.newRender\n    } else if(target[ROOT]){\n      merged.newRender = true\n    }\n    return merged\n  }\n\n  componentToString(cid){\n    let [str, streams] = this.recursiveCIDToString(this.rendered[COMPONENTS], cid, null)\n    let [strippedHTML, _before, _after] = modifyRoot(str, {})\n    return [strippedHTML, streams]\n  }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\"){\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  nextMagicID(){\n    this.magicId++\n    return `m${this.magicId}-${this.parentViewId()}`\n  }\n\n  // Converts rendered tree to output buffer.\n  //\n  // changeTracking controls if we can apply the PHX_SKIP optimization.\n  // It is disabled for comprehensions since we must re-render the entire collection\n  // and no individual element is tracked inside the comprehension.\n  toOutputBuffer(rendered, templates, output, changeTracking, rootAttrs = {}){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let isRoot = rendered[ROOT]\n    let prevBuffer = output.buffer\n    if(isRoot){ output.buffer = \"\" }\n\n    // this condition is called when first rendering an optimizable function component.\n    // LC have their magicId previously set\n    if(changeTracking && isRoot && !rendered.magicId){\n      rendered.newRender = true\n      rendered.magicId = this.nextMagicID()\n    }\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output, changeTracking)\n      output.buffer += statics[i]\n    }\n\n    // Applies the root tag \"skip\" optimization if supported, which clears\n    // the root tag attributes and innerHTML, and only maintains the magicId.\n    // We can only skip when changeTracking is supported (outside of a comprehension),\n    // and when the root element hasn't experienced an unrendered merge (newRender true).\n    if(isRoot){\n      let skip = false\n      let attrs\n      // When a LC is re-added to the page, we need to re-render the entire LC tree,\n      // therefore changeTracking is false; however, we need to keep all the magicIds\n      // from any function component so the next time the LC is updated, we can apply\n      // the skip optimization\n      if(changeTracking || rendered.magicId){\n        skip = changeTracking && !rendered.newRender\n        attrs = {[PHX_MAGIC_ID]: rendered.magicId, ...rootAttrs}\n      } else {\n        attrs = rootAttrs\n      }\n      if(skip){ attrs[PHX_SKIP] = true }\n      let [newRoot, commentBefore, commentAfter] = modifyRoot(output.buffer, attrs, skip)\n      rendered.newRender = false\n      output.buffer = prevBuffer + commentBefore + newRoot + commentAfter\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics, [STREAM]: stream} = rendered\n    let [_ref, _inserts, deleteIds, reset] = stream || [null, {}, [], null]\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = templates || rendered[TEMPLATES]\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        // Inside a comprehension, we don't track how dynamics change\n        // over time (and features like streams would make that impossible\n        // unless we move the stream diffing away from morphdom),\n        // so we can't perform root change tracking.\n        let changeTracking = false\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output, changeTracking)\n        output.buffer += statics[i]\n      }\n    }\n\n    if(stream !== undefined && (rendered[DYNAMICS].length > 0 || deleteIds.length > 0 || reset)){\n      delete rendered[STREAM]\n      rendered[DYNAMICS] = []\n      output.streams.add(stream)\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output, changeTracking){\n    if(typeof (rendered) === \"number\"){\n      let [str, streams] = this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n      output.buffer += str\n      output.streams = new Set([...output.streams, ...streams])\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output, changeTracking, {})\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let attrs = {[PHX_COMPONENT]: cid}\n    let skip = onlyCids && !onlyCids.has(cid)\n    // Two optimization paths apply here:\n    //\n    //   1. The onlyCids optimization works by the server diff telling us only specific\n    //     cid's have changed. This allows us to skip rendering any component that hasn't changed,\n    //     which ultimately sets PHX_SKIP root attribute and avoids rendering the innerHTML.\n    //\n    //   2. The root PHX_SKIP optimization generalizes to all HEEx function components, and\n    //     works in the same PHX_SKIP attribute fashion as 1, but the newRender tracking is done\n    //     at the general diff merge level. If we merge a diff with new dynamics, we necessarily have\n    //     experienced a change which must be a newRender, and thus we can't skip the render.\n    //\n    // Both optimization flows apply here. newRender is set based on the onlyCids optimization, and\n    // we track a deterministic magicId based on the cid.\n    //\n    // changeTracking is about the entire tree\n    // newRender is about the current root in the tree\n    //\n    // By default changeTracking is enabled, but we special case the flow where the client is pruning\n    // cids and the server adds the component back. In such cases, we explicitly disable changeTracking\n    // with resetRender for this cid, then re-enable it after the recursive call to skip the optimization\n    // for the entire component tree.\n    component.newRender = !skip\n    component.magicId = `c${cid}-${this.parentViewId()}`\n    // enable change tracking as long as the component hasn't been reset\n    let changeTracking = !component.reset\n    let [html, streams] = this.recursiveToString(component, components, onlyCids, changeTracking, attrs)\n    // disable reset after we've rendered\n    delete component.reset\n\n    return [html, streams]\n  }\n}\n", "import DOM from \"./dom\"\nimport ARIA from \"./aria\"\n\nlet focusStack = []\nlet default_transition_time = 200\n\nlet JS = {\n  // private\n  exec(e, eventType, phxEvent, view, sourceEl, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {callback: defaults && defaults.callback}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind){\n        // always prefer the args, but keep existing keys from the defaultArgs\n        args = {...defaultArgs, ...args}\n        args.callback = args.callback || defaultArgs.callback\n      }\n      this.filterToEls(view.liveSocket, sourceEl, args).forEach(el => {\n        this[`exec_${kind}`](e, eventType, phxEvent, view, sourceEl, el, args)\n      })\n    })\n  },\n\n  isVisible(el){\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length > 0)\n  },\n\n  // returns true if any part of the element is inside the viewport\n  isInViewport(el){\n    const rect = el.getBoundingClientRect()\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth\n\n    return (\n      rect.right > 0 &&\n      rect.bottom > 0 &&\n      rect.left < windowWidth &&\n      rect.top < windowHeight\n    )\n  },\n\n  // private\n\n  // commands\n\n  exec_exec(e, eventType, phxEvent, view, sourceEl, el, {attr, to}){\n    let encodedJS = el.getAttribute(attr)\n    if(!encodedJS){ throw new Error(`expected ${attr} to contain JS command on \"${to}\"`) }\n    view.liveSocket.execJS(el, encodedJS, eventType)\n  },\n\n  exec_dispatch(e, eventType, phxEvent, view, sourceEl, el, {event, detail, bubbles}){\n    detail = detail || {}\n    detail.dispatcher = sourceEl\n    DOM.dispatchEvent(el, event, {detail, bubbles})\n  },\n\n  exec_push(e, eventType, phxEvent, view, sourceEl, el, args){\n    let {event, data, target, page_loading, loading, value, dispatcher, callback} = args\n    let pushOpts = {loading, value, target, page_loading: !!page_loading}\n    let targetSrc = eventType === \"change\" && dispatcher ? dispatcher : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    const handler = (targetView, targetCtx) => {\n      if(!targetView.isConnected()){ return }\n      if(eventType === \"change\"){\n        let {newCid, _target} = args\n        _target = _target || (DOM.isFormInput(sourceEl) ? sourceEl.name : undefined)\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        let {submitter} = args\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, submitter, pushOpts, callback)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts, callback)\n      }\n    }\n    // in case of formRecovery, targetView and targetCtx are passed as argument\n    // as they are looked up in a template element, not the real DOM\n    if(args.targetView && args.targetCtx){\n      handler(args.targetView, args.targetCtx)\n    } else {\n      view.withinTargets(phxTarget, handler)\n    }\n  },\n\n  exec_navigate(e, eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.historyRedirect(e, href, replace ? \"replace\" : \"push\", null, sourceEl)\n  },\n\n  exec_patch(e, eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.pushHistoryPatch(e, href, replace ? \"replace\" : \"push\", sourceEl)\n  },\n\n  exec_focus(e, eventType, phxEvent, view, sourceEl, el){\n    ARIA.attemptFocus(el)\n    // in case the JS.focus command is in a JS.show/hide/toggle chain, for show we need\n    // to wait for JS.show to have updated the element's display property (see exec_toggle)\n    // but that run in nested animation frames, therefore we need to use them here as well\n    window.requestAnimationFrame(() => {\n      window.requestAnimationFrame(() => ARIA.attemptFocus(el))\n    })\n  },\n\n  exec_focus_first(e, eventType, phxEvent, view, sourceEl, el){\n    ARIA.focusFirstInteractive(el) || ARIA.focusFirst(el)\n    // if you wonder about the nested animation frames, see exec_focus\n    window.requestAnimationFrame(() => {\n      window.requestAnimationFrame(() => ARIA.focusFirstInteractive(el) || ARIA.focusFirst(el))\n    })\n  },\n\n  exec_push_focus(e, eventType, phxEvent, view, sourceEl, el){\n    focusStack.push(el || sourceEl)\n  },\n\n  exec_pop_focus(_e, _eventType, _phxEvent, _view, _sourceEl, _el){\n    const el = focusStack.pop()\n    if(el){\n      el.focus()\n      // if you wonder about the nested animation frames, see exec_focus\n      window.requestAnimationFrame(() => {\n        window.requestAnimationFrame(() => el.focus())\n      })\n    }\n  },\n\n  exec_add_class(e, eventType, phxEvent, view, sourceEl, el, {names, transition, time, blocking}){\n    this.addOrRemoveClasses(el, names, [], transition, time, view, blocking)\n  },\n\n  exec_remove_class(e, eventType, phxEvent, view, sourceEl, el, {names, transition, time, blocking}){\n    this.addOrRemoveClasses(el, [], names, transition, time, view, blocking)\n  },\n\n  exec_toggle_class(e, eventType, phxEvent, view, sourceEl, el, {names, transition, time, blocking}){\n    this.toggleClasses(el, names, transition, time, view, blocking)\n  },\n\n  exec_toggle_attr(e, eventType, phxEvent, view, sourceEl, el, {attr: [attr, val1, val2]}){\n    this.toggleAttr(el, attr, val1, val2)\n  },\n\n  exec_transition(e, eventType, phxEvent, view, sourceEl, el, {time, transition, blocking}){\n    this.addOrRemoveClasses(el, [], [], transition, time, view, blocking)\n  },\n\n  exec_toggle(e, eventType, phxEvent, view, sourceEl, el, {display, ins, outs, time, blocking}){\n    this.toggle(eventType, view, el, display, ins, outs, time, blocking)\n  },\n\n  exec_show(e, eventType, phxEvent, view, sourceEl, el, {display, transition, time, blocking}){\n    this.show(eventType, view, el, display, transition, time, blocking)\n  },\n\n  exec_hide(e, eventType, phxEvent, view, sourceEl, el, {display, transition, time, blocking}){\n    this.hide(eventType, view, el, display, transition, time, blocking)\n  },\n\n  exec_set_attr(e, eventType, phxEvent, view, sourceEl, el, {attr: [attr, val]}){\n    this.setOrRemoveAttrs(el, [[attr, val]], [])\n  },\n\n  exec_remove_attr(e, eventType, phxEvent, view, sourceEl, el, {attr}){\n    this.setOrRemoveAttrs(el, [], [attr])\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time, blocking){\n    if(!this.isVisible(el)){\n      this.toggle(eventType, view, el, display, transition, null, time, blocking)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time, blocking){\n    if(this.isVisible(el)){\n      this.toggle(eventType, view, el, display, null, transition, time, blocking)\n    }\n  },\n\n  toggle(eventType, view, el, display, ins, outs, time, blocking){\n    time = time || default_transition_time\n    let [inClasses, inStartClasses, inEndClasses] = ins || [[], [], []]\n    let [outClasses, outStartClasses, outEndClasses] = outs || [[], [], []]\n    if(inClasses.length > 0 || outClasses.length > 0){\n      if(this.isVisible(el)){\n        let onStart = () => {\n          this.addOrRemoveClasses(el, outStartClasses, inClasses.concat(inStartClasses).concat(inEndClasses))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, outClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, outEndClasses, outStartClasses))\n          })\n        }\n        let onEnd = () => {\n          this.addOrRemoveClasses(el, [], outClasses.concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        }\n        el.dispatchEvent(new Event(\"phx:hide-start\"))\n        if(blocking === false){\n          onStart()\n          setTimeout(onEnd, time)\n        } else {\n          view.transition(time, onStart, onEnd)\n        }\n      } else {\n        if(eventType === \"remove\"){ return }\n        let onStart = () => {\n          this.addOrRemoveClasses(el, inStartClasses, outClasses.concat(outStartClasses).concat(outEndClasses))\n          const stickyDisplay = display || this.defaultDisplay(el)\n          window.requestAnimationFrame(() => {\n            // first add the starting + active class, THEN make the element visible\n            // otherwise if we toggled the visibility earlier css animations\n            // would flicker, as the element becomes visible before the active animation\n            // class is set (see https://github.com/phoenixframework/phoenix_live_view/issues/3456)\n            this.addOrRemoveClasses(el, inClasses, [])\n            // addOrRemoveClasses uses a requestAnimationFrame itself, therefore we need to move the putSticky\n            // into the next requestAnimationFrame...\n            window.requestAnimationFrame(() => {\n              DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n              this.addOrRemoveClasses(el, inEndClasses, inStartClasses)\n            })\n          })\n        }\n        let onEnd = () => {\n          this.addOrRemoveClasses(el, [], inClasses.concat(inEndClasses))\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        }\n        el.dispatchEvent(new Event(\"phx:show-start\"))\n        if(blocking === false){\n          onStart()\n          setTimeout(onEnd, time)\n        } else {\n          view.transition(time, onStart, onEnd)\n        }\n      }\n    } else {\n      if(this.isVisible(el)){\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:hide-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:show-start\"))\n          let stickyDisplay = display || this.defaultDisplay(el)\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    }\n  },\n\n  toggleClasses(el, classes, transition, time, view, blocking){\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let newAdds = classes.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let newRemoves = classes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      this.addOrRemoveClasses(el, newAdds, newRemoves, transition, time, view, blocking)\n    })\n  },\n\n  toggleAttr(el, attr, val1, val2){\n    if(el.hasAttribute(attr)){\n      if(val2 !== undefined){\n        // toggle between val1 and val2\n        if(el.getAttribute(attr) === val1){\n          this.setOrRemoveAttrs(el, [[attr, val2]], [])\n        } else {\n          this.setOrRemoveAttrs(el, [[attr, val1]], [])\n        }\n      } else {\n        // remove attr\n        this.setOrRemoveAttrs(el, [], [attr])\n      }\n    } else {\n      this.setOrRemoveAttrs(el, [[attr, val1]], [])\n    }\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view, blocking){\n    time = time || default_transition_time\n    let [transitionRun, transitionStart, transitionEnd] = transition || [[], [], []]\n    if(transitionRun.length > 0){\n      let onStart = () => {\n        this.addOrRemoveClasses(el, transitionStart, [].concat(transitionRun).concat(transitionEnd))\n        window.requestAnimationFrame(() => {\n          this.addOrRemoveClasses(el, transitionRun, [])\n          window.requestAnimationFrame(() => this.addOrRemoveClasses(el, transitionEnd, transitionStart))\n        })\n      }\n      let onDone = () => this.addOrRemoveClasses(el, adds.concat(transitionEnd), removes.concat(transitionRun).concat(transitionStart))\n      if(blocking === false){\n        onStart()\n        setTimeout(onDone, time)\n      } else {\n        view.transition(time, onStart, onDone)\n      }\n      return\n    }\n\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  setOrRemoveAttrs(el, sets, removes){\n    let [prevSets, prevRemoves] = DOM.getSticky(el, \"attrs\", [[], []])\n\n    let alteredAttrs = sets.map(([attr, _val]) => attr).concat(removes)\n    let newSets = prevSets.filter(([attr, _val]) => !alteredAttrs.includes(attr)).concat(sets)\n    let newRemoves = prevRemoves.filter((attr) => !alteredAttrs.includes(attr)).concat(removes)\n\n    DOM.putSticky(el, \"attrs\", currentEl => {\n      newRemoves.forEach(attr => currentEl.removeAttribute(attr))\n      newSets.forEach(([attr, val]) => currentEl.setAttribute(attr, val))\n      return [newSets, newRemoves]\n    })\n  },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isToggledOut(el, outClasses){\n    return !this.isVisible(el) || this.hasAllClasses(el, outClasses)\n  },\n\n  filterToEls(liveSocket, sourceEl, {to}){\n    let defaultQuery = () => {\n      if(typeof(to) === \"string\"){\n        return document.querySelectorAll(to)\n      } else if(to.closest){\n        let toEl = sourceEl.closest(to.closest)\n        return toEl ? [toEl] : []\n      } else if(to.inner){\n        return sourceEl.querySelectorAll(to.inner)\n      }\n    }\n    return to ? liveSocket.jsQuerySelectorAll(sourceEl, to, defaultQuery) : [sourceEl]\n  },\n\n  defaultDisplay(el){\n    return {tr: \"table-row\", td: \"table-cell\"}[el.tagName.toLowerCase()] || \"block\"\n  },\n\n  transitionClasses(val){\n    if(!val){ return null }\n\n    let [trans, tStart, tEnd] = Array.isArray(val) ? val : [val.split(\" \"), [], []]\n    trans = Array.isArray(trans) ? trans : trans.split(\" \")\n    tStart = Array.isArray(tStart) ? tStart : tStart.split(\" \")\n    tEnd = Array.isArray(tEnd) ? tEnd : tEnd.split(\" \")\n    return [trans, tStart, tEnd]\n  }\n}\n\nexport default JS\n", "import JS from \"./js\"\nimport DOM from \"./dom\"\n\nconst HOOK_ID = \"hookId\"\n\nlet viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return DOM.private(el, HOOK_ID) }\n\n  constructor(view, el, callbacks){\n    this.el = el\n    this.__attachView(view)\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    DOM.putPrivate(this.el, HOOK_ID, this.constructor.makeID())\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __attachView(view){\n    if(view){\n      this.__view = () => view\n      this.liveSocket = view.liveSocket\n    } else {\n      this.__view = () => {\n        throw new Error(`hook not yet attached to a live view: ${this.el.outerHTML}`)\n      }\n      this.liveSocket = null\n    }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){\n    this.destroyed && this.destroyed()\n    DOM.deletePrivate(this.el, HOOK_ID) // https://github.com/phoenixframework/phoenix_live_view/issues/3496\n  }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  /**\n   * Binds the hook to JS commands.\n   *\n   * @param {ViewHook} hook - The ViewHook instance to bind.\n   *\n   * @returns {Object} An object with methods to manipulate the DOM and execute JavaScript.\n   */\n  js(){\n    let hook = this\n\n    return {\n      /**\n       * Executes encoded JavaScript in the context of the hook element.\n       *\n       * @param {string} encodedJS - The encoded JavaScript string to execute.\n       */\n      exec(encodedJS){\n        hook.__view().liveSocket.execJS(hook.el, encodedJS, \"hook\")\n      },\n\n      /**\n       * Shows an element.\n       *\n       * @param {HTMLElement} el - The element to show.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.display] - The CSS display value to set. Defaults \"block\".\n       * @param {string} [opts.transition] - The CSS transition classes to set when showing.\n       * @param {number} [opts.time] - The transition duration in milliseconds. Defaults 200.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *  Defaults `true`.\n       */\n      show(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.show(\"hook\", owner, el, opts.display, opts.transition, opts.time, opts.blocking)\n      },\n\n      /**\n       * Hides an element.\n       *\n       * @param {HTMLElement} el - The element to hide.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set when hiding.\n       * @param {number} [opts.time] - The transition duration in milliseconds. Defaults 200.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      hide(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.hide(\"hook\", owner, el, null, opts.transition, opts.time, opts.blocking)\n      },\n\n      /**\n       * Toggles the visibility of an element.\n       *\n       * @param {HTMLElement} el - The element to toggle.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.display] - The CSS display value to set. Defaults \"block\".\n       * @param {string} [opts.in] - The CSS transition classes for showing.\n       *   Accepts either the string of classes to apply when toggling in, or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-0\", \"opacity-100\"]\n       *\n       * @param {string} [opts.out] - The CSS transition classes for hiding.\n       *   Accepts either string of classes to apply when toggling out, or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       *\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      toggle(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        opts.in = JS.transitionClasses(opts.in)\n        opts.out = JS.transitionClasses(opts.out)\n        JS.toggle(\"hook\", owner, el, opts.display, opts.in, opts.out, opts.time, opts.blocking)\n      },\n\n      /**\n       * Adds CSS classes to an element.\n       *\n       * @param {HTMLElement} el - The element to add classes to.\n       * @param {string|string[]} names - The class name(s) to add.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition property to set.\n       *   Accepts a string of classes to apply when adding classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-0\", \"opacity-100\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      addClass(el, names, opts = {}){\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, names, [], opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Removes CSS classes from an element.\n       *\n       * @param {HTMLElement} el - The element to remove classes from.\n       * @param {string|string[]} names - The class name(s) to remove.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set.\n       *   Accepts a string of classes to apply when removing classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      removeClass(el, names, opts = {}){\n        opts.transition = JS.transitionClasses(opts.transition)\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, [], names, opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Toggles CSS classes on an element.\n       *\n       * @param {HTMLElement} el - The element to toggle classes on.\n       * @param {string|string[]} names - The class name(s) to toggle.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set.\n       *   Accepts a string of classes to apply when toggling classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      toggleClass(el, names, opts = {}){\n        opts.transition = JS.transitionClasses(opts.transition)\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.toggleClasses(el, names, opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Applies a CSS transition to an element.\n       *\n       * @param {HTMLElement} el - The element to apply the transition to.\n       * @param {string|string[]} transition - The transition class(es) to apply.\n       *   Accepts a string of classes to apply when transitioning or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      transition(el, transition, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, [], [], JS.transitionClasses(transition), opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Sets an attribute on an element.\n       *\n       * @param {HTMLElement} el - The element to set the attribute on.\n       * @param {string} attr - The attribute name to set.\n       * @param {string} val - The value to set for the attribute.\n       */\n      setAttribute(el, attr, val){ JS.setOrRemoveAttrs(el, [[attr, val]], []) },\n\n      /**\n       * Removes an attribute from an element.\n       *\n       * @param {HTMLElement} el - The element to remove the attribute from.\n       * @param {string} attr - The attribute name to remove.\n       */\n      removeAttribute(el, attr){ JS.setOrRemoveAttrs(el, [], [attr]) },\n\n      /**\n       * Toggles an attribute on an element between two values.\n       *\n       * @param {HTMLElement} el - The element to toggle the attribute on.\n       * @param {string} attr - The attribute name to toggle.\n       * @param {string} val1 - The first value to toggle between.\n       * @param {string} val2 - The second value to toggle between.\n       */\n      toggleAttribute(el, attr, val1, val2){ JS.toggleAttr(el, attr, val1, val2) },\n    }\n  }\n\n  pushEvent(event, payload = {}, onReply){\n    if(onReply === undefined){\n      return new Promise((resolve, reject) => {\n        try {\n          const ref = this.__view().pushHookEvent(this.el, null, event, payload, (reply, _ref) => resolve(reply))\n          if(ref === false){\n            reject(new Error(\"unable to push hook event. LiveView not connected\"))\n          }\n        } catch (error){\n          reject(error)\n        }\n      })\n    }\n    return this.__view().pushHookEvent(this.el, null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply){\n    if(onReply === undefined){\n      return new Promise((resolve, reject) => {\n        try {\n          this.__view().withinTargets(phxTarget, (view, targetCtx) => {\n            const ref = view.pushHookEvent(this.el, targetCtx, event, payload, (reply, _ref) => resolve(reply))\n            if(ref === false){\n              reject(new Error(\"unable to push hook event. LiveView not connected\"))\n            }\n          })\n        } catch (error){\n          reject(error)\n        }\n      })\n    }\n    return this.__view().withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(this.el, targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view().dispatchUploads(null, name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view().withinTargets(phxTarget, (view, targetCtx) => {\n      view.dispatchUploads(targetCtx, name, files)\n    })\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_LOADING_CLASS,\n  PHX_ERROR_CLASS,\n  PHX_CLIENT_ERROR_CLASS,\n  PHX_SERVER_ERROR_CLASS,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF_LOADING,\n  PHX_REF_SRC,\n  PHX_REF_LOCK,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_STICKY,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_MAIN,\n  PHX_MOUNTED,\n  PUSH_TIMEOUT,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n  MAX_CHILD_JOIN_ATTEMPTS\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport ElementRef from \"./element_ref\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\nimport JS from \"./js\"\n\nimport morphdom from \"morphdom\"\n\nexport let prependFormDataKey = (key, prefix) => {\n  let isArray = key.endsWith(\"[]\")\n  // Remove the \"[]\" if it's an array\n  let baseKey = isArray ? key.slice(0, -2) : key\n  // Replace last occurrence of key before a closing bracket or the end with key plus suffix\n  baseKey = baseKey.replace(/([^\\[\\]]+)(\\]?$)/, `${prefix}$1$2`)\n  // Add back the \"[]\" if it was an array\n  if(isArray){ baseKey += \"[]\" }\n  return baseKey\n}\n\nlet serializeForm = (form, opts, onlyNames = []) => {\n  const {submitter} = opts\n\n  // We must inject the submitter in the order that it exists in the DOM\n  // relative to other inputs. For example, for checkbox groups, the order must be maintained.\n  let injectedElement\n  if(submitter && submitter.name){\n    const input = document.createElement(\"input\")\n    input.type = \"hidden\"\n    // set the form attribute if the submitter has one;\n    // this can happen if the element is outside the actual form element\n    const formId = submitter.getAttribute(\"form\")\n    if(formId){\n      input.setAttribute(\"form\", formId)\n    }\n    input.name = submitter.name\n    input.value = submitter.value\n    submitter.parentElement.insertBefore(input, submitter)\n    injectedElement = input\n  }\n\n  const formData = new FormData(form)\n  const toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  const params = new URLSearchParams()\n\n  const {inputsUnused, onlyHiddenInputs} = Array.from(form.elements).reduce((acc, input) => {\n    const {inputsUnused, onlyHiddenInputs} = acc\n    const key = input.name\n    if(!key){ return acc }\n\n    if(inputsUnused[key] === undefined){ inputsUnused[key] = true }\n    if(onlyHiddenInputs[key] === undefined){ onlyHiddenInputs[key] = true }\n\n    const isUsed = DOM.private(input, PHX_HAS_FOCUSED) || DOM.private(input, PHX_HAS_SUBMITTED)\n    const isHidden = input.type === \"hidden\"\n    inputsUnused[key] = inputsUnused[key] && !isUsed\n    onlyHiddenInputs[key] = onlyHiddenInputs[key] && isHidden\n\n    return acc\n  }, {inputsUnused: {}, onlyHiddenInputs: {}})\n\n  for(let [key, val] of formData.entries()){\n    if(onlyNames.length === 0 || onlyNames.indexOf(key) >= 0){\n      let isUnused = inputsUnused[key]\n      let hidden = onlyHiddenInputs[key]\n      if(isUnused && !(submitter && submitter.name == key) && !hidden){\n        params.append(prependFormDataKey(key, \"_unused_\"), \"\")\n      }\n      params.append(key, val)\n    }\n  }\n\n  // remove the injected element again\n  // (it would be removed by the next dom patch anyway, but this is cleaner)\n  if(submitter && injectedElement){\n    submitter.parentElement.removeChild(injectedElement)\n  }\n\n  return params.toString()\n}\n\nexport default class View {\n  static closestView(el){\n    let liveViewEl = el.closest(PHX_VIEW_SELECTOR)\n    return liveViewEl ? DOM.private(liveViewEl, \"view\") : null\n  }\n\n  constructor(el, liveSocket, parentView, flash, liveReferer){\n    this.isDead = false\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    DOM.putPrivate(this.el, \"view\", this)\n    this.id = this.el.id\n    this.ref = 0\n    this.lastAckRef = null\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.disconnectedTimer = null\n    this.pendingDiffs = []\n    this.pendingForms = new Set()\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinAttempts = 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function(onDone){ onDone && onDone() }\n    this.stopCallback = function(){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.formsForRecovery = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      let url = this.href && this.expandURL(this.href)\n      return {\n        redirect: this.redirect ? url : undefined,\n        url: this.redirect ? undefined : url || undefined,\n        params: this.connectParams(liveReferer),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash,\n        sticky: this.el.hasAttribute(PHX_STICKY)\n      }\n    })\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.el.hasAttribute(PHX_MAIN) }\n\n  connectParams(liveReferer){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n    params[\"_mount_attempts\"] = this.joinAttempts\n    params[\"_live_referer\"] = liveReferer\n    this.joinAttempts++\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_LOADING_CLASS,\n      PHX_ERROR_CLASS,\n      PHX_CLIENT_ERROR_CLASS,\n      PHX_SERVER_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_LOADING_CLASS)\n    }\n  }\n\n  execAll(binding){\n    DOM.all(this.el, `[${binding}]`, el => this.liveSocket.execJS(el, el.getAttribute(binding)))\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    clearTimeout(this.disconnectedTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n    this.execAll(this.binding(\"connected\"))\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.liveSocket.transition(time, onStart, onDone)\n  }\n\n  // calls the callback with the view and target element for the given phxTarget\n  // targets can be:\n  //  * an element itself, then it is simply passed to liveSocket.owner;\n  //  * a CID (Component ID), then we first search the component's element in the DOM\n  //  * a selector, then we search the selector in the DOM and call the callback\n  //    for each element found with the corresponding owner view\n  withinTargets(phxTarget, callback, dom = document, viewEl){\n    // in the form recovery case we search in a template fragment instead of\n    // the real dom, therefore we optionally pass dom and viewEl\n\n    if(phxTarget instanceof HTMLElement || phxTarget instanceof SVGElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(isCid(phxTarget)){\n      let targets = DOM.findComponentNodeList(viewEl || this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, parseInt(phxTarget))\n      }\n    } else {\n      let targets = Array.from(dom.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    callback({diff, reply, events})\n    if(typeof title === \"string\" || type == \"mount\"){ window.requestAnimationFrame(() => DOM.putTitle(title)) }\n  }\n\n  onJoin(resp){\n    let {rendered, container, liveview_version} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n    if(this.root === this){\n      this.formsForRecovery = this.getFormsForRecovery()\n    }\n    if(this.isMain() && window.history.state === null){\n      // set initial history entry if this is the first page load (no history)\n      Browser.pushState(\"replace\", {\n        type: \"patch\",\n        id: this.id,\n        position: this.liveSocket.currentHistoryPosition\n      })\n    }\n\n    if(liveview_version !== this.liveSocket.version()){\n      console.error(`LiveView asset version mismatch. JavaScript version ${this.liveSocket.version()} vs. server ${liveview_version}. To avoid issues, please ensure that your assets use the same version as the server.`)\n    }\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let [html, streams] = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      this.joinCount++\n      this.joinAttempts = 0\n\n      this.maybeRecoverForms(html, () => {\n        this.onJoinComplete(resp, html, streams, events)\n      })\n    })\n  }\n\n  dropPendingRefs(){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`, el => {\n      el.removeAttribute(PHX_REF_LOADING)\n      el.removeAttribute(PHX_REF_SRC)\n      el.removeAttribute(PHX_REF_LOCK)\n    })\n  }\n\n  onJoinComplete({live_patch}, html, streams, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, streams, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      // set PHX_ROOT_ID to prevent events from being dispatched to the root view\n      // while the child join is still pending\n      if(fromEl){ fromEl.setAttribute(PHX_ROOT_ID, this.root.id) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, streams, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  // this is invoked for dead and live views, so we must filter by\n  // by owner to ensure we aren't duplicating hooks across disconnect\n  // and connected states. This also handles cases where hooks exist\n  // in a root layout with a LV in the body\n  execNewMounted(parent = this.el){\n    let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n    DOM.all(parent, `[${phxViewportTop}], [${phxViewportBottom}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        DOM.maintainPrivateHooks(hookEl, hookEl, phxViewportTop, phxViewportBottom)\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(parent, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(parent, `[${this.binding(PHX_MOUNTED)}]`, el => {\n      if(this.ownsElement(el)){\n        this.maybeMounted(el)\n      }\n    })\n  }\n\n  applyJoinPatch(live_patch, html, streams, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false, true)\n    this.joinNewChildren()\n    this.execNewMounted()\n\n    this.joinPending = false\n    this.liveSocket.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  maybeMounted(el){\n    let phxMounted = el.getAttribute(this.binding(PHX_MOUNTED))\n    let hasBeenInvoked = phxMounted && DOM.private(el, \"mounted\")\n    if(phxMounted && !hasBeenInvoked){\n      this.liveSocket.execJS(el, phxMounted)\n      DOM.putPrivate(el, \"mounted\", true)\n    }\n  }\n\n  maybeAddNewHook(el){\n    let newHook = this.addHook(el)\n    if(newHook){ newHook.__mounted() }\n  }\n\n  performPatch(patch, pruneCids, isJoinPatch = false){\n    let removedEls = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    this.liveSocket.triggerDOM(\"onPatchStart\", [patch.targetContainer])\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n      let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n      let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n      DOM.maintainPrivateHooks(el, el, phxViewportTop, phxViewportBottom)\n      this.maybeAddNewHook(el)\n      if(el.getAttribute){ this.maybeMounted(el) }\n    })\n\n    patch.after(\"phxChildAdded\", el => {\n      if(DOM.isPhxSticky(el)){\n        this.liveSocket.joinRootViews()\n      } else {\n        phxChildrenAdded = true\n      }\n    })\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      if(el.nodeType === Node.ELEMENT_NODE){ removedEls.push(el) }\n    })\n\n    patch.after(\"transitionsDiscarded\", els => this.afterElementsRemoved(els, pruneCids))\n    patch.perform(isJoinPatch)\n    this.afterElementsRemoved(removedEls, pruneCids)\n\n    this.liveSocket.triggerDOM(\"onPatchEnd\", [patch.targetContainer])\n    return phxChildrenAdded\n  }\n\n  afterElementsRemoved(elements, pruneCids){\n    let destroyedCIDs = []\n    elements.forEach(parent => {\n      let components = DOM.all(parent, `[${PHX_COMPONENT}]`)\n      let hooks = DOM.all(parent, `[${this.binding(PHX_HOOK)}], [data-phx-hook]`)\n      components.concat(parent).forEach(el => {\n        let cid = this.componentID(el)\n        if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      })\n      hooks.concat(parent).forEach(hookEl => {\n        let hook = this.getHook(hookEl)\n        hook && this.destroyHook(hook)\n      })\n    })\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  maybeRecoverForms(html, callback){\n    const phxChange = this.binding(\"change\")\n    const oldForms = this.root.formsForRecovery\n    // So why do we create a template element here?\n    // One way to recover forms would be to immediately apply the mount\n    // patch and then afterwards recover the forms. However, this would\n    // cause a flicker, because the mount patch would remove the form content\n    // until it is restored. Therefore LV decided to do form recovery with the\n    // raw HTML before it is applied and delay the mount patch until the form\n    // recovery events are done.\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    // because we work with a template element, we must manually copy the attributes\n    // otherwise the owner / target helpers don't work properly\n    const rootEl = template.content.firstElementChild\n    rootEl.id = this.id\n    rootEl.setAttribute(PHX_ROOT_ID, this.root.id)\n    rootEl.setAttribute(PHX_SESSION, this.getSession())\n    rootEl.setAttribute(PHX_STATIC, this.getStatic())\n    rootEl.setAttribute(PHX_PARENT_ID, this.parent ? this.parent.id : null)\n\n    // we go over all form elements in the new HTML for the LV\n    // and look for old forms in the `formsForRecovery` object;\n    // the formsForRecovery can also contain forms from child views\n    const formsToRecover =\n      // we go over all forms in the new DOM; because this is only the HTML for the current\n      // view, we can be sure that all forms are owned by this view:\n      DOM.all(template.content, \"form\")\n        // only recover forms that have an id and are in the old DOM\n        .filter(newForm => newForm.id && oldForms[newForm.id])\n        // abandon forms we already tried to recover to prevent looping a failed state\n        .filter(newForm => !this.pendingForms.has(newForm.id))\n        // only recover if the form has the same phx-change value\n        .filter(newForm => oldForms[newForm.id].getAttribute(phxChange) === newForm.getAttribute(phxChange))\n        .map(newForm => {\n          return [oldForms[newForm.id], newForm]\n        })\n\n    if(formsToRecover.length === 0){\n      return callback()\n    }\n\n    formsToRecover.forEach(([oldForm, newForm], i) => {\n      this.pendingForms.add(newForm.id)\n      // it is important to use the firstElementChild of the template content\n      // because when traversing a documentFragment using parentNode, we won't ever arrive at\n      // the fragment; as the template is always a LiveView, we can be sure that there is only\n      // one child on the root level\n      this.pushFormRecovery(oldForm, newForm, template.content.firstElementChild, () => {\n        this.pendingForms.delete(newForm.id)\n        // we only call the callback once all forms have been recovered\n        if(i === formsToRecover.length - 1){\n          callback()\n        }\n      })\n    })\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)]?.[el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    // we can clear pending form recoveries now that we've joined.\n    // They either all resolved or were abandoned\n    this.pendingForms.clear()\n    // we can also clear the formsForRecovery object to not keep old form elements around\n    this.formsForRecovery = {}\n    this.joinCallback(() => {\n      this.pendingJoinOps.forEach(([view, op]) => {\n        if(!view.isDestroyed()){ op() }\n      })\n      this.pendingJoinOps = []\n    })\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || (this.liveSocket.hasPendingLink() && this.root.isMain())){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findExistingParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let [html, streams] = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.liveSocket.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff) : null\n      let [html, streams] = this.rendered.toString(cids)\n      return [`<${tag}>${html}</${tag}>`, streams]\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let [html, streams] = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    let hookElId = ViewHook.elementID(el)\n\n    // only ever try to add hooks to elements owned by this view\n    if(el.getAttribute && !this.ownsElement(el)){ return }\n\n    if(hookElId && !this.viewHooks[hookElId]){\n      // hook created, but not attached (createHook for web component)\n      let hook = DOM.getCustomElHook(el) || logError(`no hook found for custom element: ${el.id}`)\n      this.viewHooks[hookElId] = hook\n      hook.__attachView(this)\n      return hook\n    }\n    else if(hookElId || !el.getAttribute){\n      // no hook found\n      return\n    } else {\n      // new hook found with phx-hook attribute\n      let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n      let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n      if(callbacks){\n        if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n        let hook = new ViewHook(this, el, callbacks)\n        this.viewHooks[ViewHook.elementID(hook.el)] = hook\n        return hook\n      } else if(hookName !== null){\n        logError(`unknown hook found for \"${hookName}\"`, el)\n      }\n    }\n  }\n\n  destroyHook(hook){\n    // __destroyed clears the elementID from the hook, therefore\n    // we need to get it before calling __destroyed\n    const hookId = ViewHook.elementID(hook.el)\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[hookId]\n  }\n\n  applyPendingUpdates(){\n    // prevent race conditions where we might still be pending a new\n    // navigation after applying the current one;\n    // if we call update and a pendingDiff is not applied, it would\n    // be silently dropped otherwise, as update would push it back to\n    // pendingDiffs, but we clear it immediately after\n    if(this.liveSocket.hasPendingLink() && this.root.isMain()){ return }\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n    this.eachChild(child => child.applyPendingUpdates())\n  }\n\n  eachChild(callback){\n    let children = this.root.children[this.id] || {}\n    for(let id in children){ callback(this.getChildById(id)) }\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        this.liveSocket.requestDOMUpdate(() => cb(resp))\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.liveSocket.requestDOMUpdate(() => {\n        this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n      })\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){ this.eachChild(child => child.destroy()) }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    let e = new CustomEvent(\"phx:server-navigate\", {detail: {to, kind, flash}})\n    this.liveSocket.historyRedirect(e, url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash, reloadToken}){ this.liveSocket.redirect(to, flash, reloadToken) }\n\n  isDestroyed(){ return this.destroyed }\n\n  joinDead(){ this.isDead = true }\n\n  joinPush(){\n    this.joinPush = this.joinPush || this.channel.join()\n    return this.joinPush\n  }\n\n  join(callback){\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n    if(this.isMain()){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = (onDone) => {\n      onDone = onDone || function(){}\n      callback ? callback(this.joinCount, onDone) : onDone()\n    }\n\n    this.wrapPush(() => this.channel.join(), {\n      ok: (resp) => this.liveSocket.requestDOMUpdate(() => this.onJoin(resp)),\n      error: (error) => this.onJoinError(error),\n      timeout: () => this.onJoinError({reason: \"timeout\"})\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"reload\"){\n      this.log(\"error\", () => [`failed mount with ${resp.status}. Falling back to page reload`, resp])\n      this.onRedirect({to: this.root.href, reloadToken: resp.token})\n      return\n    } else if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      this.onRedirect({to: this.root.href, flash: this.flash})\n      return\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    if(this.isMain()){\n      this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n      if(this.liveSocket.isConnected()){ this.liveSocket.reloadWithJitter(this) }\n    } else {\n      if(this.joinAttempts >= MAX_CHILD_JOIN_ATTEMPTS){\n        // put the root review into permanent error state, but don't destroy it as it can remain active\n        this.root.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n        this.log(\"error\", () => [`giving up trying to mount after ${MAX_CHILD_JOIN_ATTEMPTS} tries`, resp])\n        this.destroy()\n      }\n      let trueChildEl = DOM.byId(this.el.id)\n      if(trueChildEl){\n        DOM.mergeAttrs(trueChildEl, this.el)\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n        this.el = trueChildEl\n      } else {\n        this.destroy()\n      }\n    }\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if(this.isMain() && this.liveSocket.hasPendingLink() && reason !== \"leave\"){\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    if(this.liveSocket.isConnected()){ this.log(\"error\", () => [\"view crashed\", reason]) }\n    if(!this.liveSocket.isUnloaded()){\n      if(this.liveSocket.isConnected()){\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n      } else {\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_CLIENT_ERROR_CLASS])\n      }\n    }\n  }\n\n  displayError(classes){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: {to: this.href, kind: \"error\"}}) }\n    this.showLoader()\n    this.setContainerClasses(...classes)\n    this.delayedDisconnected()\n  }\n\n  delayedDisconnected(){\n    this.disconnectedTimer = setTimeout(() => {\n      this.execAll(this.binding(\"disconnected\"))\n    }, this.liveSocket.disconnectedTimeout)\n  }\n\n  wrapPush(callerPush, receives){\n    let latency = this.liveSocket.getLatencySim()\n    let withLatency = latency ?\n      (cb) => setTimeout(() => !this.isDestroyed() && cb(), latency) :\n      (cb) => !this.isDestroyed() && cb()\n\n    withLatency(() => {\n      callerPush()\n        .receive(\"ok\", resp => withLatency(() => receives.ok && receives.ok(resp)))\n        .receive(\"error\", reason => withLatency(() => receives.error && receives.error(reason)))\n        .receive(\"timeout\", () => withLatency(() => receives.timeout && receives.timeout()))\n    })\n  }\n\n  pushWithReply(refGenerator, event, payload){\n    if(!this.isConnected()){ return Promise.reject({error: \"noconnection\"}) }\n\n    let [ref, [el], opts] = refGenerator ? refGenerator() : [null, [], {}]\n    let oldJoinCount = this.joinCount\n    let onLoadingDone = function(){}\n    if(opts.page_loading){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n\n    return new Promise((resolve, reject) => {\n      this.wrapPush(() => this.channel.push(event, payload, PUSH_TIMEOUT), {\n        ok: (resp) => {\n          if(ref !== null){ this.lastAckRef = ref }\n          let finish = (hookReply) => {\n            if(resp.redirect){ this.onRedirect(resp.redirect) }\n            if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n            if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n            onLoadingDone()\n            resolve({resp: resp, reply: hookReply})\n          }\n          if(resp.diff){\n            this.liveSocket.requestDOMUpdate(() => {\n              this.applyDiff(\"update\", resp.diff, ({diff, reply, events}) => {\n                if(ref !== null){\n                  this.undoRefs(ref, payload.event)\n                }\n                this.update(diff, events)\n                finish(reply)\n              })\n            })\n          } else {\n            if(ref !== null){ this.undoRefs(ref, payload.event) }\n            finish(null)\n          }\n        },\n        error: (reason) => reject({error: reason}),\n        timeout: () => {\n          reject({timeout: true})\n          if(this.joinCount === oldJoinCount){\n            this.liveSocket.reloadWithJitter(this, () => {\n              this.log(\"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        }\n      })\n    })\n  }\n\n  undoRefs(ref, phxEvent, onlyEls){\n    if(!this.isConnected()){ return } // exit if external form triggered\n    let selector = `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`\n\n    if(onlyEls){\n      onlyEls = new Set(onlyEls)\n      DOM.all(document, selector, parent => {\n        if(onlyEls && !onlyEls.has(parent)){ return }\n        // undo any child refs within parent first\n        DOM.all(parent, selector, child => this.undoElRef(child, ref, phxEvent))\n        this.undoElRef(parent, ref, phxEvent)\n      })\n    } else {\n      DOM.all(document, selector, el => this.undoElRef(el, ref, phxEvent))\n    }\n  }\n\n  undoElRef(el, ref, phxEvent){\n    let elRef = new ElementRef(el)\n\n    elRef.maybeUndo(ref, phxEvent, clonedTree => {\n      // we need to perform a full patch on unlocked elements\n      // to perform all the necessary logic (like calling updated for hooks, etc.)\n      let patch = new DOMPatch(this, el, this.id, clonedTree, [], null, {undoRef: ref})\n      const phxChildrenAdded = this.performPatch(patch, true)\n      DOM.all(el, `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`, child => this.undoElRef(child, ref, phxEvent))\n      if(phxChildrenAdded){ this.joinNewChildren() }\n    })\n  }\n\n  refSrc(){ return this.el.id }\n\n  putRef(elements, phxEvent, eventType, opts = {}){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n    if(opts.loading){\n      let loadingEls = DOM.all(document, opts.loading).map(el => {\n        return {el, lock: true, loading: true}\n      })\n      elements = elements.concat(loadingEls)\n    }\n\n    for(let {el, lock, loading} of elements){\n      if(!lock && !loading){ throw new Error(\"putRef requires lock or loading\") }\n      el.setAttribute(PHX_REF_SRC, this.refSrc())\n      if(loading){ el.setAttribute(PHX_REF_LOADING, newRef) }\n      if(lock){ el.setAttribute(PHX_REF_LOCK, newRef) }\n\n      if(!loading || (opts.submitter && !(el === opts.submitter || el === opts.form))){ continue }\n\n      let lockCompletePromise = new Promise(resolve => {\n        el.addEventListener(`phx:undo-lock:${newRef}`, () => resolve(detail), {once: true})\n      })\n\n      let loadingCompletePromise = new Promise(resolve => {\n        el.addEventListener(`phx:undo-loading:${newRef}`, () => resolve(detail), {once: true})\n      })\n\n      el.classList.add(`phx-${eventType}-loading`)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        if(disableText !== \"\"){ el.innerText = disableText }\n        // PHX_DISABLED could have already been set in disableForm\n        el.setAttribute(PHX_DISABLED, el.getAttribute(PHX_DISABLED) || el.disabled)\n        el.setAttribute(\"disabled\", \"\")\n      }\n\n      let detail = {\n        event: phxEvent,\n        eventType: eventType,\n        ref: newRef,\n        isLoading: loading,\n        isLocked: lock,\n        lockElements: elements.filter(({lock}) => lock).map(({el}) => el),\n        loadingElements: elements.filter(({loading}) => loading).map(({el}) => el),\n        unlock: (els) => {\n          els = Array.isArray(els) ? els : [els]\n          this.undoRefs(newRef, phxEvent, els)\n        },\n        lockComplete: lockCompletePromise,\n        loadingComplete: loadingCompletePromise,\n        lock: (lockEl) => {\n          return new Promise(resolve => {\n            if(this.isAcked(newRef)){ return resolve(detail) }\n            lockEl.setAttribute(PHX_REF_LOCK, newRef)\n            lockEl.setAttribute(PHX_REF_SRC, this.refSrc())\n            lockEl.addEventListener(`phx:lock-stop:${newRef}`, () => resolve(detail), {once: true})\n          })\n        }\n      }\n      el.dispatchEvent(new CustomEvent(\"phx:push\", {\n        detail: detail,\n        bubbles: true,\n        cancelable: false\n      }))\n      if(phxEvent){\n        el.dispatchEvent(new CustomEvent(`phx:push:${phxEvent}`, {\n          detail: detail,\n          bubbles: true,\n          cancelable: false\n        }))\n      }\n    }\n    return [newRef, elements.map(({el}) => el), opts]\n  }\n\n  isAcked(ref){ return this.lastAckRef !== null && this.lastAckRef >= ref }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx, opts = {}){\n    if(isCid(targetCtx)){ return targetCtx }\n\n    let cidOrSelector = opts.target || target.getAttribute(this.binding(\"target\"))\n    if(isCid(cidOrSelector)){\n      return parseInt(cidOrSelector)\n    } else if(targetCtx && (cidOrSelector !== null || opts.target)){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(isCid(targetCtx)){\n      return targetCtx\n    } else if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(el, targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els, opts] = this.putRef([{el, loading: true, lock: true}], event, \"hook\")\n    this.pushWithReply(() => [ref, els, opts], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }).then(({resp: _resp, reply: hookReply}) => onReply(hookReply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta, value){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      if(!meta){ meta = {} }\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined && !(el instanceof HTMLFormElement)){\n      if(!meta){ meta = {} }\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    if(value){\n      if(!meta){ meta = {} }\n      for(let key in value){ meta[key] = value[key] }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta, opts = {}, onReply){\n    this.pushWithReply(() => this.putRef([{el, loading: true, lock: true}], phxEvent, type, opts), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta, opts.value),\n      cid: this.targetComponentID(el, targetCtx, opts)\n    })\n      .then(({reply}) => onReply && onReply(reply))\n      .catch((error) => logError(\"Failed to push event\", error))\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      })\n        .then(({resp}) => onReply(resp))\n        .catch((error) => logError(\"Failed to push file progress\", error))\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, opts, callback){\n    if(!inputEl.form){\n      throw new Error(\"form events require the input to be inside a form\")\n    }\n\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx, opts)\n    let refGenerator = () => {\n      return this.putRef([\n        {el: inputEl, loading: true, lock: true},\n        {el: inputEl.form, loading: true, lock: true}\n      ], phxEvent, \"change\", opts)\n    }\n    let formData\n    let meta = this.extractMeta(inputEl.form, {}, opts.value)\n    let serializeOpts = {}\n    if(inputEl instanceof HTMLButtonElement){ serializeOpts.submitter = inputEl }\n    if(inputEl.getAttribute(this.binding(\"change\"))){\n      formData = serializeForm(inputEl.form, serializeOpts, [inputEl.name])\n    } else {\n      formData = serializeForm(inputEl.form, serializeOpts)\n    }\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      meta: {\n        // no target was implicitly sent as \"undefined\" in LV <= 1.0.5, therefore\n        // we have to keep it. In 1.0.6 we switched from passing meta as URL encoded data\n        // to passing it directly in the event, but the JSON encode would drop keys with\n        // undefined values.\n        _target: opts._target || \"undefined\",\n        ...meta\n      },\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event).then(({resp}) => {\n      if(DOM.isUploadInput(inputEl) && DOM.isAutoUpload(inputEl)){\n        // the element could be inside a locked parent for other unrelated changes;\n        // we can only start uploads when the tree is unlocked and the\n        // necessary data attributes are set in the real DOM\n        ElementRef.onUnlock(inputEl, () => {\n          if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n            let [ref, _els] = refGenerator()\n            this.undoRefs(ref, phxEvent, [inputEl.form])\n            this.uploadFiles(inputEl.form, phxEvent, targetCtx, ref, cid, (_uploads) => {\n              callback && callback(resp)\n              this.triggerAwaitingSubmit(inputEl.form, phxEvent)\n              this.undoRefs(ref, phxEvent)\n            })\n          }\n        })\n      } else {\n        callback && callback(resp)\n      }\n    }).catch((error) => logError(\"Failed to push input event\", error))\n  }\n\n  triggerAwaitingSubmit(formEl, phxEvent){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, _opts, callback] = awaitingSubmit\n      this.cancelSubmit(formEl, phxEvent)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _ref, _opts, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, opts, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, opts, callback])\n  }\n\n  cancelSubmit(formEl, phxEvent){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _opts, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref, phxEvent)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  disableForm(formEl, phxEvent, opts = {}){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let formElements = Array.from(formEl.elements)\n    let disables = formElements.filter(filterDisables)\n    let buttons = formElements.filter(filterButton).filter(filterIgnored)\n    let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n    buttons.forEach(button => {\n      button.setAttribute(PHX_DISABLED, button.disabled)\n      button.disabled = true\n    })\n    inputs.forEach(input => {\n      input.setAttribute(PHX_READONLY, input.readOnly)\n      input.readOnly = true\n      if(input.files){\n        input.setAttribute(PHX_DISABLED, input.disabled)\n        input.disabled = true\n      }\n    })\n    let formEls = disables.concat(buttons).concat(inputs).map(el => {\n      return {el, loading: true, lock: true}\n    })\n\n    // we reverse the order so form children are already locked by the time\n    // the form is locked\n    let els = [{el: formEl, loading: true, lock: false}].concat(formEls).reverse()\n    return this.putRef(els, phxEvent, \"submit\", opts)\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply){\n    let refGenerator = () => this.disableForm(formEl, phxEvent, {\n      ...opts,\n      form: formEl,\n      submitter: submitter\n    })\n    // store the submitter in the form element in order to trigger it\n    // for phx-trigger-action\n    DOM.putPrivate(formEl, \"submitter\", submitter)\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      let push = () => this.pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply)\n      return this.scheduleSubmit(formEl, ref, opts, push)\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els, opts]\n      this.uploadFiles(formEl, phxEvent, targetCtx, ref, cid, (_uploads) => {\n        // if we still having pending preflights it means we have invalid entries\n        // and the phx-submit cannot be completed\n        if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n          return this.undoRefs(ref, phxEvent)\n        }\n        let meta = this.extractMeta(formEl, {}, opts.value)\n        let formData = serializeForm(formEl, {submitter})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          meta: meta,\n          cid: cid\n        })\n          .then(({resp}) => onReply(resp))\n          .catch((error) => logError(\"Failed to push form submit\", error))\n      })\n    } else if(!(formEl.hasAttribute(PHX_REF_SRC) && formEl.classList.contains(\"phx-submit-loading\"))){\n      let meta = this.extractMeta(formEl, {}, opts.value)\n      let formData = serializeForm(formEl, {submitter})\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        meta: meta,\n        cid: cid\n      })\n        .then(({resp}) => onReply(resp))\n        .catch((error) => logError(\"Failed to push form submit\", error))\n    }\n  }\n\n  uploadFiles(formEl, phxEvent, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      })\n\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      if(entries.length === 0){\n        numFileInputsInProgress--\n        return\n      }\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload).then(({resp}) => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        // the preflight will reject entries beyond the max entries\n        // so we error and cancel entries on the client that are missing from the response\n        uploader.entries().forEach(entry => {\n          if(resp.entries && !resp.entries[entry.ref]){\n            this.handleFailedEntryPreflight(entry.ref, \"failed preflight\", uploader)\n          }\n        })\n        // for auto uploads, we may have an empty entries response from the server\n        // for form submits that contain invalid entries\n        if(resp.error || Object.keys(resp.entries).length === 0){\n          this.undoRefs(ref, phxEvent)\n          let errors = resp.error || []\n          errors.map(([entry_ref, reason]) => {\n            this.handleFailedEntryPreflight(entry_ref, reason, uploader)\n          })\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      }).catch((error) => logError(\"Failed to push upload\", error))\n    })\n  }\n\n  handleFailedEntryPreflight(uploadRef, reason, uploader){\n    if(uploader.isAutoUpload()){\n      // uploadRef may be top level upload config ref or entry ref\n      let entry = uploader.entries().find(entry => entry.ref === uploadRef.toString())\n      if(entry){ entry.cancel() }\n    } else {\n      uploader.entries().map(entry => entry.cancel())\n    }\n    this.log(\"upload\", () => [`error for entry ${uploadRef}`, reason])\n  }\n\n  dispatchUploads(targetCtx, name, filesOrBlobs){\n    let targetElement = this.targetCtxElement(targetCtx) || this.el\n    let inputs = DOM.findUploadInputs(targetElement).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {detail: {files: filesOrBlobs}}) }\n  }\n\n  targetCtxElement(targetCtx){\n    if(isCid(targetCtx)){\n      let [target] = DOM.findComponentNodeList(this.el, targetCtx)\n      return target\n    } else if(targetCtx){\n      return targetCtx\n    } else {\n      return null\n    }\n  }\n\n  pushFormRecovery(oldForm, newForm, templateDom, callback){\n    // we are only recovering forms inside the current view, therefore it is safe to\n    // skip withinOwners here and always use this when referring to the view\n    const phxChange = this.binding(\"change\")\n    const phxTarget = newForm.getAttribute(this.binding(\"target\")) || newForm\n    const phxEvent = newForm.getAttribute(this.binding(PHX_AUTO_RECOVER)) || newForm.getAttribute(this.binding(\"change\"))\n    const inputs = Array.from(oldForm.elements).filter(el => DOM.isFormInput(el) && el.name && !el.hasAttribute(phxChange))\n    if(inputs.length === 0){\n      callback()\n      return\n    }\n\n    // we must clear tracked uploads before recovery as they no longer have valid refs\n    inputs.forEach(input => input.hasAttribute(PHX_UPLOAD_REF) && LiveUploader.clearFiles(input))\n    // pushInput assumes that there is a source element that initiated the change;\n    // because this is not the case when we recover forms, we provide the first input we find\n    let input = inputs.find(el => el.type !== \"hidden\") || inputs[0]\n\n    // in the case that there are multiple targets, we count the number of pending recovery events\n    // and only call the callback once all events have been processed\n    let pending = 0\n    // withinTargets(phxTarget, callback, dom, viewEl)\n    this.withinTargets(phxTarget, (targetView, targetCtx) => {\n      const cid = this.targetComponentID(newForm, targetCtx)\n      pending++\n      let e = new CustomEvent(\"phx:form-recovery\", {detail: {sourceElement: oldForm}})\n      JS.exec(e, \"change\", phxEvent, this, input, [\"push\", {\n        _target: input.name,\n        targetView,\n        targetCtx,\n        newCid: cid,\n        callback: () => {\n          pending--\n          if(pending === 0){ callback() }\n        }\n      }])\n    }, templateDom, templateDom)\n  }\n\n  pushLinkPatch(e, href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    // only add loading states if event is trusted (it was triggered by user, such as click) and\n    // it's not a forward/back navigation from popstate\n    let loading = e.isTrusted && e.type !== \"popstate\"\n    let refGen = targetEl ? () => this.putRef([{el: targetEl, loading: loading, lock: true}], null, \"click\") : null\n    let fallback = () => this.liveSocket.redirect(window.location.href)\n    let url = href.startsWith(\"/\") ? `${location.protocol}//${location.host}${href}` : href\n\n    this.pushWithReply(refGen, \"live_patch\", {url}).then(\n      ({resp}) => {\n        this.liveSocket.requestDOMUpdate(() => {\n          if(resp.link_redirect){\n            this.liveSocket.replaceMain(href, null, callback, linkRef)\n          } else {\n            if(this.liveSocket.commitPendingLink(linkRef)){\n              this.href = href\n            }\n            this.applyPendingUpdates()\n            callback && callback(linkRef)\n          }\n        })\n      },\n      ({error: _error, timeout: _timeout}) => fallback()\n    )\n  }\n\n  getFormsForRecovery(){\n    if(this.joinCount === 0){ return {} }\n\n    let phxChange = this.binding(\"change\")\n\n    return DOM.all(this.el, `form[${phxChange}]`)\n      .filter(form => form.id)\n      .filter(form => form.elements.length > 0)\n      .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n      .map(form => {\n        // we perform a shallow clone and manually copy all elements\n        const clonedForm = form.cloneNode(false)\n        // we need to copy the private data as it contains\n        // the information about touched fields\n        DOM.copyPrivates(clonedForm, form)\n        Array.from(form.elements).forEach((el) => {\n          // we need to clone all child nodes as well,\n          // because those could also be selects\n          const clonedEl = el.cloneNode(true)\n          // we call morphdom to copy any special state\n          // like the selected option of a <select> element;\n          // this should be plenty fast as we call it on a small subset of the DOM,\n          // single inputs or a select with children\n          morphdom(clonedEl, el)\n          DOM.copyPrivates(clonedEl, el)\n          clonedForm.appendChild(clonedEl)\n        })\n        return clonedForm\n      })\n      .reduce((acc, form) => {\n        acc[form.id] = form\n        return acc\n      }, {})\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n\n    if(willDestroyCIDs.length > 0){\n      // we must reset the render change tracking for cids that\n      // could be added back from the server so we don't skip them\n      willDestroyCIDs.forEach(cid => this.rendered.resetRender(cid))\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}).then(() => {\n        // we must wait for pending transitions to complete before determining\n        // if the cids were added back to the DOM in the meantime (#3139)\n        this.liveSocket.requestDOMUpdate(() => {\n          // See if any of the cids we wanted to destroy were added back,\n          // if they were added back, we don't actually destroy them.\n          let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n            return DOM.findComponentNodeList(this.el, cid).length === 0\n          })\n\n          if(completelyDestroyCIDs.length > 0){\n            this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}).then(({resp}) => {\n              this.rendered.pruneCIDs(resp.cids)\n            }).catch((error) => logError(\"Failed to push components destroyed\", error))\n          }\n        })\n      }).catch((error) => logError(\"Failed to push components destroyed\", error))\n    }\n  }\n\n  ownsElement(el){\n    let parentViewEl = el.closest(PHX_VIEW_SELECTOR)\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      (parentViewEl && parentViewEl.id === this.id) ||\n      (!parentViewEl && this.isDead)\n  }\n\n  submitForm(form, targetCtx, phxEvent, submitter, opts = {}){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    const inputs = Array.from(form.elements)\n    inputs.forEach(input => DOM.putPrivate(input, PHX_HAS_SUBMITTED, true))\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, submitter, opts, () => {\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {integer} [opts.disconnectedTimeout] - The delay in milliseconds to wait before\n * executing phx-disconnected commands. Defaults to 500.\n * @param {integer} [opts.maxReloads] - The maximum reloads before entering failsafe mode.\n * @param {integer} [opts.reloadJitterMin] - The minimum time between normal reload attempts.\n * @param {integer} [opts.reloadJitterMax] - The maximum time between normal reload attempts.\n * @param {integer} [opts.failsafeJitter] - The time between reload attempts in failsafe mode.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  DISCONNECTED_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_LV_HISTORY_POSITION,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  RELOAD_JITTER_MIN,\n  RELOAD_JITTER_MAX,\n  PHX_REF_SRC,\n  PHX_RELOAD_STATUS\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport let isUsedInput = (el) => DOM.isUsedInput(el)\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import {LiveSocket} from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.outgoingMainEl = null\n    this.clickStartedAtTarget = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.disconnectedTimeout = opts.disconnectedTimeout || DISCONNECTED_TIMEOUT\n    this.reloadWithJitterTimer = null\n    this.maxReloads = opts.maxReloads || MAX_RELOADS\n    this.reloadJitterMin = opts.reloadJitterMin || RELOAD_JITTER_MIN\n    this.reloadJitterMax = opts.reloadJitterMax || RELOAD_JITTER_MAX\n    this.failsafeJitter = opts.failsafeJitter || FAILSAFE_JITTER\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.boundEventNames = new Set()\n    this.serverCloseRef = null\n    this.domCallbacks = Object.assign({\n      jsQuerySelectorAll: null,\n      onPatchStart: closure(),\n      onPatchEnd: closure(),\n      onNodeAdded: closure(),\n      onBeforeElUpdated: closure()},\n    opts.dom || {})\n    this.transitions = new TransitionSet()\n    this.currentHistoryPosition = parseInt(this.sessionStorage.getItem(PHX_LV_HISTORY_POSITION)) || 0\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  version(){ return LV_VSN }\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  isDebugDisabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"false\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"false\") }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    // enable debug by default if on localhost and not explicitly disabled\n    if(window.location.hostname === \"localhost\" && !this.isDebugDisabled()){ this.enableDebug() }\n    let doConnect = () => {\n      this.resetReloadStatus()\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      } else if(this.main){\n        this.socket.connect()\n      } else {\n        this.bindTopLevelEvents({dead: true})\n      }\n      this.joinDeadView()\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){\n    clearTimeout(this.reloadWithJitterTimer)\n    // remove the socket close listener to avoid trying to handle\n    // a server close event when it is actually caused by us disconnecting\n    if(this.serverCloseRef){\n      this.socket.off(this.serverCloseRef)\n      this.serverCloseRef = null\n    }\n    this.socket.disconnect(callback)\n  }\n\n  replaceTransport(transport){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.socket.replaceTransport(transport)\n    this.connect()\n  }\n\n  execJS(el, encodedJS, eventType = null){\n    let e = new CustomEvent(\"phx:exec\", {detail: {sourceElement: el}})\n    this.owner(el, view => JS.exec(e, eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  execJSHookPush(el, phxEvent, data, callback){\n    this.withinOwners(el, view => {\n      let e = new CustomEvent(\"phx:exec\", {detail: {sourceElement: el}})\n      JS.exec(e, \"hook\", phxEvent, view, el, [\"push\", {data, callback}])\n    })\n  }\n\n  unload(){\n    if(this.unloaded){ return }\n    if(this.main && this.isConnected()){ this.log(this.main, \"socket\", () => [\"disconnect for page nav\"]) }\n    this.unloaded = true\n    this.destroyAllViews()\n    this.disconnect()\n  }\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.transitions.addTransition(time, onStart, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  reloadWithJitter(view, log){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.disconnect()\n    let minMs = this.reloadJitterMin\n    let maxMs = this.reloadJitterMax\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    if(tries >= this.maxReloads){\n      afterMs = this.failsafeJitter\n    }\n    this.reloadWithJitterTimer = setTimeout(() => {\n      // if view has recovered, such as transport replaced, then cancel\n      if(view.isDestroyed() || view.isConnected()){ return }\n      view.destroy()\n      log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n      if(tries >= this.maxReloads){\n        this.log(view, \"join\", () => [`exceeded ${this.maxReloads} consecutive reloads. Entering failsafe mode`])\n      }\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinDeadView(){\n    let body = document.body\n    if(body && !this.isPhxView(body) && !this.isPhxView(document.firstElementChild)){\n      let view = this.newRootView(body)\n      view.setHref(this.getHref())\n      view.joinDead()\n      if(!this.main){ this.main = view }\n      window.requestAnimationFrame(() => {\n        view.execNewMounted()\n        // restore scroll position when navigating from an external / non-live page\n        this.maybeScroll(history.state?.scroll)\n      })\n    }\n  }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        // stickies cannot be mounted at the router and therefore should not\n        // get a href set on them\n        if(!DOM.isPhxSticky(rootEl)){ view.setHref(this.getHref()) }\n        view.join()\n        if(rootEl.hasAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash, reloadToken){\n    if(reloadToken){ Browser.setCookie(PHX_RELOAD_STATUS, reloadToken, 60) }\n    this.unload()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    const liveReferer = this.currentLocation.href\n    this.outgoingMainEl = this.outgoingMainEl || this.main.el\n\n    const stickies = DOM.findPhxSticky(document) || []\n    const removeEls = DOM.all(this.outgoingMainEl, `[${this.binding(\"remove\")}]`)\n      .filter(el => !DOM.isChildOfAny(el, stickies))\n\n    const newMainEl = DOM.cloneNode(this.outgoingMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash, liveReferer)\n    this.main.setRedirect(href)\n    this.transitionRemoves(removeEls)\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          // remove phx-remove els right before we replace the main element\n          removeEls.forEach(el => el.remove())\n          stickies.forEach(el => newMainEl.appendChild(el))\n          this.outgoingMainEl.replaceWith(newMainEl)\n          this.outgoingMainEl = null\n          callback && callback(linkRef)\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements, callback){\n    let removeAttr = this.binding(\"remove\")\n    let silenceEvents = (e) => {\n      e.preventDefault()\n      e.stopImmediatePropagation()\n    }\n    elements.forEach(el => {\n      // prevent all listeners we care about from bubbling to window\n      // since we are removing the element\n      for(let event of this.boundEventNames){\n        el.addEventListener(event, silenceEvents, true)\n      }\n      this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n    })\n    // remove the silenced listeners when transitions are done incase the element is re-used\n    // and call caller's callback as soon as we are done with transitions\n    this.requestDOMUpdate(() => {\n      elements.forEach(el => {\n        for(let event of this.boundEventNames){\n          el.removeEventListener(event, silenceEvents, true)\n        }\n      })\n      callback && callback()\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash, liveReferer){\n    let view = new View(el, this, null, flash, liveReferer)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view\n    const closestViewEl = childEl.closest(PHX_VIEW_SELECTOR)\n    if(closestViewEl){\n      // it can happen that we find a view that is already destroyed;\n      // in that case we DO NOT want to fallback to the main element\n      view = this.getViewByEl(closestViewEl)\n    } else {\n      view = this.main\n    }\n    return view && callback ? callback(view) : view\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n    this.main = null\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root && root.id === el.id){\n      root.destroy()\n      delete this.roots[root.id]\n    } else if(root){\n      root.destroyDescendent(el.id)\n    }\n  }\n\n  getActiveElement(){\n    return document.activeElement\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents({dead} = {}){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    // enter failsafe reload if server has gone away intentionally, such as \"disconnect\" broadcast\n    this.serverCloseRef = this.socket.onClose(event => {\n      // failsafe reload if normal closure and we still have a main LV\n      if(event && event.code === 1000 && this.main){ return this.reloadWithJitter(this.main) }\n    })\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    if(!dead){ this.bindNav() }\n    this.bindClicks()\n    if(!dead){ this.bindForms() }\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, _phxTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      if(!phxTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.on(\"dragover\", e => e.preventDefault())\n    this.on(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files, e.dataTransfer)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    this.resetReloadStatus()\n    return this.linkRef\n  }\n\n  // anytime we are navigating or connecting, drop reload cookie in case\n  // we issue the cookie but the next request was interrupted and the server never dropped it\n  resetReloadStatus(){ Browser.deleteCookie(PHX_RELOAD_STATUS) }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, browserEventName, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, browserEventName, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.on(\"mousedown\", e => this.clickStartedAtTarget = e.target)\n    this.bindClick(\"click\", \"click\")\n  }\n\n  bindClick(eventName, bindingName){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      let target = null\n      // a synthetic click event (detail 0) will not have caused a mousedown event,\n      // therefore the clickStartedAtTarget is stale\n      if(e.detail === 0) this.clickStartedAtTarget = e.target\n      let clickStartedAtTarget = this.clickStartedAtTarget || e.target\n      // when searching the target for the click event, we always want to\n      // use the actual event target, see #3372\n      target = closestPhxBinding(e.target, click)\n      this.dispatchClickAway(e, clickStartedAtTarget)\n      this.clickStartedAtTarget = null\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){\n        if(DOM.isNewPageClick(e, window.location)){ this.unload() }\n        return\n      }\n\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      // noop if we are in the middle of awaiting an ack for this el already\n      if(target.hasAttribute(PHX_REF_SRC)){ return }\n\n      this.debounce(target, e, \"click\", () => {\n        this.withinOwners(target, view => {\n          JS.exec(e, \"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, false)\n  }\n\n  dispatchClickAway(e, clickStartedAt){\n    let phxClickAway = this.binding(\"click-away\")\n    DOM.all(document, `[${phxClickAway}]`, el => {\n      if(!(el.isSameNode(clickStartedAt) || el.contains(clickStartedAt))){\n        this.withinOwners(el, view => {\n          let phxEvent = el.getAttribute(phxClickAway)\n          if(JS.isVisible(el) && JS.isInViewport(el)){\n            JS.exec(e, \"click\", phxEvent, view, el, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n          }\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, backType, id, scroll, position} = event.state || {}\n      let href = window.location.href\n\n      // Compare positions to determine direction\n      let isForward = position > this.currentHistoryPosition\n\n      type = isForward ? type : (backType || type)\n\n      // Update current position\n      this.currentHistoryPosition = position || 0\n      this.sessionStorage.setItem(PHX_LV_HISTORY_POSITION, this.currentHistoryPosition.toString())\n\n      DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: type === \"patch\", pop: true, direction: isForward ? \"forward\" : \"backward\"}})\n      this.requestDOMUpdate(() => {\n        const callback = () => { this.maybeScroll(scroll) }\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(event, href, null, callback)\n        } else {\n          this.replaceMain(href, null, callback)\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      if(!type || !this.isConnected() || !this.main || DOM.wantsNewTab(e)){ return }\n\n      // When wrapping an SVG element in an anchor tag, the href can be an SVGAnimatedString\n      let href = target.href instanceof SVGAnimatedString ? target.href.baseVal : target.href\n\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      e.stopImmediatePropagation() // do not bubble click to regular phx-click bindings\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(e, href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(e, href, linkState, null, target)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n        let phxClick = target.getAttribute(this.binding(\"click\"))\n        if(phxClick){\n          this.requestDOMUpdate(() => this.execJS(target, phxClick, \"click\"))\n        }\n      })\n    }, false)\n  }\n\n  maybeScroll(scroll){\n    if(typeof(scroll) === \"number\"){\n      requestAnimationFrame(() => {\n        window.scrollTo(0, scroll)\n      }) // the body needs to render before we scroll.\n    }\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, {detail: payload})\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: info})\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", {detail: info})\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(e, href, linkState, targetEl){\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href) }\n\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(e, href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    // Increment position for new state\n    this.currentHistoryPosition++\n    this.sessionStorage.setItem(PHX_LV_HISTORY_POSITION, this.currentHistoryPosition.toString())\n\n    // store the type for back navigation\n    Browser.updateCurrentState((state) => ({...state, backType: \"patch\"}))\n\n    Browser.pushState(linkState, {\n      type: \"patch\",\n      id: this.main.id,\n      position: this.currentHistoryPosition\n    }, href)\n\n    DOM.dispatchEvent(window, \"phx:navigate\", {detail: {patch: true, href, pop: false, direction: \"forward\"}})\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(e, href, linkState, flash, targetEl){\n    const clickLoading = targetEl && e.isTrusted && e.type !== \"popstate\"\n    if(clickLoading){ targetEl.classList.add(\"phx-click-loading\") }\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href, flash) }\n\n    // convert to full href if only path prefix\n    if(/^\\/$|^\\/[^\\/]+.*$/.test(href)){\n      let {protocol, host} = window.location\n      href = `${protocol}//${host}${href}`\n    }\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, (linkRef) => {\n        if(linkRef === this.linkRef){\n          // Increment position for new state\n          this.currentHistoryPosition++\n          this.sessionStorage.setItem(PHX_LV_HISTORY_POSITION, this.currentHistoryPosition.toString())\n\n          // store the type for back navigation\n          Browser.updateCurrentState((state) => ({...state, backType: \"redirect\"}))\n\n          Browser.pushState(linkState, {\n            type: \"redirect\",\n            id: this.main.id,\n            scroll: scroll,\n            position: this.currentHistoryPosition\n          }, href)\n\n          DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: false, pop: false, direction: \"forward\"}})\n          this.registerNewLocation(window.location)\n        }\n        // explicitly undo click-loading class\n        // (in case it originated in a sticky live view, otherwise it would be removed anyway)\n        if(clickLoading){ targetEl.classList.remove(\"phx-click-loading\") }\n        done()\n      })\n    })\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    let externalFormSubmitted = false\n\n    // disable forms on submit that track phx-change but perform external submit\n    this.on(\"submit\", e => {\n      let phxSubmit = e.target.getAttribute(this.binding(\"submit\"))\n      let phxChange = e.target.getAttribute(this.binding(\"change\"))\n      if(!externalFormSubmitted && phxChange && !phxSubmit){\n        externalFormSubmitted = true\n        e.preventDefault()\n        this.withinOwners(e.target, view => {\n          view.disableForm(e.target)\n          // safari needs next tick\n          window.requestAnimationFrame(() => {\n            if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n            e.target.submit()\n          })\n        })\n      }\n    })\n\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){\n        if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n        return\n      }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(e, \"submit\", phxEvent, view, e.target, [\"push\", {submitter: e.submitter}])\n      })\n    })\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        if(e instanceof CustomEvent && e.target.form === undefined){\n          // throw on invalid JS.dispatch target and noop if CustomEvent triggered outside JS.dispatch\n          if(e.detail && e.detail.dispatcher){\n            throw new Error(`dispatching a custom ${type} event is only supported on input elements inside a form`)\n          }\n          return\n        }\n        let phxChange = this.binding(\"change\")\n        let input = e.target\n        // do not fire phx-change if we are in the middle of a composition session\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n        // Safari has issues if the input is updated while composing\n        // see https://github.com/phoenixframework/phoenix_live_view/issues/3322\n        if(e.isComposing){\n          const key = `composition-listener-${type}`\n          if(!DOM.private(input, key)){\n            DOM.putPrivate(input, key, true)\n            input.addEventListener(\"compositionend\", () => {\n              // trigger a new input/change event\n              input.dispatchEvent(new Event(type, {bubbles: true}))\n              DOM.deletePrivate(input, key)\n            }, {once: true})\n          }\n          return\n        }\n        let inputEvent = input.getAttribute(phxChange)\n        let formEvent = input.form && input.form.getAttribute(phxChange)\n        let phxEvent = inputEvent || formEvent\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n\n        let dispatcher = inputEvent ? input : input.form\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // Browsers should always fire at least one \"input\" event before every \"change\"\n        // Ignore \"change\" events, unless there was no prior \"input\" event.\n        // This could happen if user code triggers a \"change\" event, or if the browser is non-conforming.\n        if(at === currentIterations - 1 && type === \"change\" && lastType === \"input\"){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, type, () => {\n          this.withinOwners(dispatcher, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            JS.exec(e, \"change\", phxEvent, view, input, [\"push\", {_target: e.target.name, dispatcher: dispatcher}])\n          })\n        })\n      })\n    }\n    this.on(\"reset\", (e) => {\n      let form = e.target\n      DOM.resetForm(form)\n      let input = Array.from(form.elements).find(el => el.type === \"reset\")\n      if(input){\n        // wait until next tick to get updated input value\n        window.requestAnimationFrame(() => {\n          input.dispatchEvent(new Event(\"input\", {bubbles: true, cancelable: false}))\n        })\n      }\n    })\n  }\n\n  debounce(el, event, eventType, callback){\n    if(eventType === \"blur\" || eventType === \"focusout\"){ return callback() }\n\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n\n    this.withinOwners(el, view => {\n      let asyncFilter = () => !view.isDestroyed() && document.body.contains(el)\n      DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, () => {\n        callback()\n      })\n    })\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    this.boundEventNames.add(event)\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n\n  jsQuerySelectorAll(sourceEl, query, defaultQuery){\n    let all = this.domCallbacks.jsQuerySelectorAll\n    return all ? all(sourceEl, query, defaultQuery) : defaultQuery()\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      clearTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onStart, onDone){\n    onStart()\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      this.flushPendingOps()\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    if(this.size() > 0){ return }\n    let op = this.pendingOps.shift()\n    if(op){\n      op()\n      this.flushPendingOps()\n    }\n  }\n}\n", "/*\n================================================================================\nPhoenix LiveView JavaScript Client\n================================================================================\n\nSee the hexdocs at `https://hexdocs.pm/phoenix_live_view` for documentation.\n\n*/\n\nimport LiveSocket, {isUsedInput} from \"./live_socket\"\nimport DOM from \"./dom\"\nimport ViewHook from \"./view_hook\"\nimport View from \"./view\"\n\n/** Creates a ViewHook instance for the given element and callbacks.\n *\n * @param {HTMLElement} el - The element to associate with the hook.\n * @param {Object} [callbacks] - The list of hook callbacks, such as mounted,\n *   updated, destroyed, etc.\n *\n * @example\n *\n * class MyComponent extends HTMLElement {\n *   connectedCallback(){\n *     let onLiveViewMounted = () => this.hook.pushEvent(...))\n *     this.hook = createHook(this, {mounted: onLiveViewMounted})\n *   }\n * }\n *\n * *Note*: `createHook` must be called from the `connectedCallback` lifecycle\n * which is triggered after the element has been added to the DOM. If you try\n * to call `createHook` from the constructor, an error will be logged.\n *\n * @returns {ViewHook} Returns the ViewHook instance for the custom element.\n */\nlet createHook = (el, callbacks = {}) => {\n  let existingHook = DOM.getCustomElHook(el)\n  if(existingHook){ return existingHook }\n\n  let hook = new ViewHook(View.closestView(el), el, callbacks)\n  DOM.putCustomElHook(el, hook)\n  return hook\n}\n\nexport {\n  LiveSocket,\n  isUsedInput,\n  createHook\n}\n"],
  "mappings": "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",
  "names": ["loadComponents", "closure", "liveSocket", "closure", "e", "isEmpty", "file", "morphAttrs", "morphdom", "childrenOnly", "targetContainer", "clone", "el", "inputsUnused", "onlyHiddenInputs", "_a", "lock", "loading", "entry", "input", "closure", "_a"]
}
