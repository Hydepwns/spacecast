# This file is responsible for configuring your application
# and its dependencies with the aid of the Config module.
#
# This configuration file is loaded before any dependency and
# is restricted to this project.

# General application configuration
import Config

config :spacecast,
  ecto_repos: [Spacecast.Repo],
  generators: [timestamp_type: :utc_datetime]

# Configures the endpoint
config :spacecast, SpacecastWeb.Endpoint,
  url: [host: "localhost"],
  adapter: Bandit.PhoenixAdapter,
  render_errors: [
    formats: [html: SpacecastWeb.ErrorHTML, json: SpacecastWeb.ErrorJSON],
    layout: false
  ],
  pubsub_server: Spacecast.PubSub,
  live_view: [signing_salt: "xsXgnIZl"],
  static_url: [path: "/"],
  static_paths: ~w(assets fonts images favicon.ico robots.txt)

# Configures the mailer
#
# By default it uses the "Local" adapter which stores the emails
# locally. You can see the emails in your browser, at "/dev/mailbox".
#
# For production it's recommended to configure a different adapter
# at the `config/runtime.exs`.
config :spacecast, Spacecast.Mailer, adapter: Swoosh.Adapters.Local

# Configure esbuild (the version is required)
config :esbuild,
  version: "0.17.11",
  spacecast: [
    args:
      ~w(js/app.js --bundle --target=es2017 --outdir=../priv/static/assets --external:/fonts/* --external:/images/*),
    cd: Path.expand("../assets", __DIR__),
    env: %{"NODE_PATH" => Path.expand("../deps", __DIR__)}
  ]

# Configures Elixir's Logger
config :logger, :console,
  format: "$time $metadata[$level] $message\n",
  metadata: [:request_id]

# Use Jason for JSON parsing in Phoenix
config :phoenix, :json_library, Jason

# Configure your database
config :spacecast, Spacecast.Repo,
  adapter: Ecto.Adapters.Postgres,
  url: System.get_env("DATABASE_URL"),
  pool_size: String.to_integer(System.get_env("POOL_SIZE") || "10")

# Configure MessageBird
# config :spacecast, :messagebird,
#   api_key: System.get_env("MESSAGEBIRD_API_KEY"),
#   api_version: "v1"

# Configure Twilio
config :spacecast, :twilio,
  account_sid: System.get_env("TWILIO_ACCOUNT_SID"),
  auth_token: System.get_env("TWILIO_AUTH_TOKEN"),
  phone_number: System.get_env("TWILIO_PHONE_NUMBER")

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :spacecast, SpacecastWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "your_secret_key_base_here",
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "$time $metadata[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Configure reminder worker
config :spacecast, :reminder_worker, check_interval: :timer.minutes(1)

# Configure PromEx for Prometheus metrics
config :spacecast, Spacecast.PromEx,
  manual_metrics_start_delay: :no_delay,
  grafana: [
    host: "http://localhost:3000",
    username: "admin",
    password: "admin",
    upload_dashboards_on_start: true
  ],
  metrics_server: [
    port: 9568,
    path: "/metrics",
    protocol: :http
  ]

# Configure external monitoring
config :spacecast,
  enable_external_monitoring: true,
  metrics_http_endpoint: "http://localhost:9090/api/v1/write",
  external_monitoring_config: %{
    prometheus_enabled: true,
    http_endpoint: "http://localhost:9090/api/v1/write"
  }

# Import environment specific config. This must remain at the bottom
# of this file so it overrides the configuration defined above.
import_config "#{config_env()}.exs"
