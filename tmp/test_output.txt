===> Analyzing applications...
===> Compiling libsignal_protocol_nif
Copying NIF files from /home/droo/spacecast/lib/libsignal-protocol-nif/priv/ to build directories...
WARNING: priv directory does not exist. NIFs may not be built yet.
Compiling 13 files (.ex)
    warning: this clause for mount/3 cannot match because a previous clause at line 2 always matches
    │
  8 │   def mount(_params, _session, socket) do
    │       ~
    │
    └─ lib/spacecast_web/live/theme_live.ex:8:7

    warning: the following clause will never match:

        {:error, _}

    because it attempts to match on the result of:

        Spacecast.ThemeSystem.get_current_theme()

    which has type:

        dynamic({:ok, term()})

    typing violation found at:
    │
 78 │       {:error, _} ->
    │       ~~~~~~~~~~~~~~
    │
    └─ lib/spacecast_web/live/base_live.ex:78: SpacecastWeb.BaseLive.on_mount/4

    warning: variable "cutoff" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 90 │       cutoff = DateTime.add(DateTime.utc_now(), -time_window, :second)
    │       ~
    │
    └─ lib/spacecast/resources/utils/performance_analyzer.ex:90:7: Spacecast.Resources.PerformanceAnalyzer.gather_event_metrics/2

     warning: the following clause will never match:

         {:error, reason, socket}

     because it attempts to match on the result of:

         Spacecast.Utils.LiveViewAPI.create_from_resource(
           socket,
           :user,
           Spacecast.Resources.UserResource,
           user_data
         )

     which has type:

         dynamic({:ok, term()})

     typing violation found at:
     │
 211 │       {:error, reason, socket} ->
     │       ~
     │
     └─ lib/spacecast_web/live/examples/user_resource_example_live.ex:211:7: SpacecastWeb.Examples.UserResourceExampleLive.load_user_from_resource/1

     warning: variable "resource_type" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 121 │     resource_type = resource_module.resource_type()
     │     ~~~~~~~~~~~~~
     │
     └─ lib/spacecast/resources/utils/test_event_generator.ex:121:5: Spacecast.Resources.TestEventGenerator.generate_random_events/4

     warning: default values for the optional arguments in cache_resources/3 are never used
     │
 151 │   defp cache_resources(resource_type, resources, opts \\ []) do
     │        ~
     │
     └─ lib/spacecast/resources/utils/resource_cache.ex:151:8: Spacecast.Resources.ResourceCache (module)

     warning: variable "new_sandbox_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 210 │       {:ok, new_sandbox_id} = create_sandbox([], sandbox.options)
     │             ~
     │
     └─ lib/spacecast/resources/utils/resource_sandbox.ex:210:13: Spacecast.Resources.ResourceSandbox.reset_sandbox/1

     warning: comparison between distinct types found:

         DateTime.compare(event.timestamp, timestamp) == :lte

     given types:

         dynamic(:eq or :gt or :lt) == :lte

     where "event" was given the type:

         # type: dynamic()
         # from: test/support/mock_event_store.ex:309:36
         event

     where "timestamp" was given the type:

         # type: dynamic()
         # from: test/support/mock_event_store.ex:304:9
         {:get_events_for_resource_at, resource_type, resource_id, timestamp}

     While Elixir can compare across all types, you are comparing across types which are always disjoint, and the result is either always true or always false

     typing violation found at:
     │
 336 │           DateTime.compare(event.timestamp, timestamp) == :lte
     │                                                        ~
     │
     └─ test/support/mock_event_store.ex:336:56: Spacecast.TestSupport.MockEventStore.handle_call/3

     warning: variable "opts" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 282 │   def export_visualization(visualization, format, opts \\ []) do
     │                                                   ~~~~
     │
     └─ lib/spacecast/resources/utils/event_visualizer.ex:282:51: Spacecast.Resources.EventVisualizer.export_visualization/3

Generated spacecast app
23:38:17.941 [info] PromEx is starting a standalone metrics server on port 9568 over http
23:38:17.993 [warning] PromEx.DashboardUploader failed to upload /home/droo/spacecast/_build/test/lib/prom_ex/priv/application.json.eex to Grafana: "connection refused"
23:38:17.996 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:17.996 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:18.010 [warning] PromEx.DashboardUploader failed to upload /home/droo/spacecast/_build/test/lib/prom_ex/priv/beam.json.eex to Grafana: "connection refused"
23:38:18.023 [warning] PromEx.DashboardUploader failed to upload /home/droo/spacecast/_build/test/lib/prom_ex/priv/phoenix.json.eex to Grafana: "connection refused"
23:38:18.027 [info] Running SpacecastWeb.Endpoint with Bandit 1.7.0 at 127.0.0.1:4002 (http)
23:38:18.027 [info] Access SpacecastWeb.Endpoint at http://localhost:4002
23:38:18.030 [warning] PromEx.DashboardUploader failed to upload /home/droo/spacecast/_build/test/lib/prom_ex/priv/ecto.json.eex to Grafana: "connection refused"
23:38:18.038 [warning] PromEx.DashboardUploader failed to upload /home/droo/spacecast/_build/test/lib/prom_ex/priv/phoenix_live_view.json.eex to Grafana: "connection refused"
23:38:18.039 [info] The dashboard definition for nil is invalid due to the following error: {:file_read_error, :file_not_found}
    warning: redefining module SignalNifStub (current version loaded from _build/test/lib/spacecast/ebin/Elixir.SignalNifStub.beam)
    │
  1 │ defmodule SignalNifStub do
    │ ~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/support/signal_nif_stub.ex:1: SignalNifStub (module)

⚠️  Chromedriver not found - skipping Wallaby startup
   Browser tests will be skipped. Run 'nix-shell' and './scripts/test_browser.sh' for browser tests.
23:38:18.060 [info] The function passed as a handler with ID "spacecast-liveview-events-monitor" is a local function.
This means that it is either an anonymous function or a capture of a function without a module specified. That may cause a performance penalty when calling that handler. For more details see the note in `telemetry:attach/4` documentation.

https://hexdocs.pm/telemetry/telemetry.html#attach/4
23:38:18.062 [info] EventMonitor: Telemetry handlers registered successfully
Running ExUnit with seed: 75935, max_cases: 48

    warning: variable "context" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 14 │   setup context do
    │         ~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:14:9: SpacecastWeb.DebugJSErrorTest.__ex_unit_setup_2/1

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 150 │       session = assert_has(session, css("th", text: "Data"))
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:150:7: SpacecastWeb.ResourceEventSystemWorkflowTest."test event generation and processing resource creation generates events"/1

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 104 │       session = assert_has(session, css("select[name='resource[parent_id]']", value: parent.id))
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:104:7: SpacecastWeb.Features.ResourceRelationshipWorkflowTest."test resource relationship management user can create a parent-child relationship"/1

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 266 │       session = assert_has(session, css("a", text: "Third Child"))
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:266:7: SpacecastWeb.Features.ResourceRelationshipWorkflowTest."test resource relationship management user can manage multiple relationships"/1

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 430 │       session = assert_has(session, css("select[name='resource[parent_id]']", value: parent.id))
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:430:7: SpacecastWeb.Features.ResourceRelationshipWorkflowTest."test resource relationship management relationship changes trigger UI updates"/1

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/minimal_wallaby_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/minimal_wallaby_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/minimal_wallaby_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/minimal_wallaby_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/minimal_wallaby_test.exs:2

    warning: unused import Phoenix.LiveViewTest
    │
  3 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/components/ui/metrics_summary_tab_test.exs:3:3

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 226 │       session = wait_for_flash_message(session, "info", "Resource deleted successfully")
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:226:7: SpacecastWeb.ResourceEventSystemWorkflowTest."test event generation and processing resource deletion generates events"/1

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 406 │       session = wait_for_flash_message(session, "info", "Resource created successfully")
     │       ~~~~~~~
     │
     └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:406:7: SpacecastWeb.ResourceEventSystemWorkflowTest."test event error handling handles event processing errors gracefully"/1

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:2

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:2

    warning: unused alias ResourceFixtures
    │
 18 │   alias Spacecast.TestSupport.ResourceFixtures
    │   ~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:18:3

    warning: unused alias TestMockHelper
    │
 19 │   alias SpacecastWeb.TestMockHelper
    │   ~
    │
    └─ test/spacecast_web/features/resource_event_workflow_test.exs:19:3

    warning: unused alias TestMockHelper
    │
 12 │   alias SpacecastWeb.TestMockHelper
    │   ~
    │
    └─ test/spacecast_web/features/debug_js_error_test.exs:12:3

    warning: unused import Phoenix.LiveViewTest
    │
  3 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/components/ui/timeline_view_test.exs:3:3

.....................    warning: unused import SpacecastWeb.TestHelpers.WallabyUIHelper
    │
  6 │   import SpacecastWeb.TestHelpers.WallabyUIHelper
    │   ~
    │
    └─ test/spacecast_web/live/user/user_registration_live_test.exs:6:3

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_event_system_workflow_test.exs:2

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_relationship_workflow_test.exs:2

     warning: variable "session" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 298 │     session = visit(session, "/")
     │     ~~~~~~~
     │
     └─ test/spacecast_web/features/relationship_management_workflow_test.exs:298:5: SpacecastWeb.Features.RelationshipManagementWorkflowTest."test placeholder test for relationship management workflow"/1

....................    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/theme_system_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/theme_system_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/theme_system_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/theme_system_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/theme_system_workflow_test.exs:2

    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/relationship_management_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/relationship_management_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/relationship_management_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/relationship_management_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase, async: false
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/relationship_management_workflow_test.exs:2

     warning: variable "conn" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 367 │     test "handles multiple event types", %{conn: conn, user: user, resource: resource} do
     │                                                  ~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:367:50: SpacecastWeb.Integration.RealtimeIntegrationTest."test Event Bus Integration handles multiple event types"/1

     warning: variable "resource" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 367 │     test "handles multiple event types", %{conn: conn, user: user, resource: resource} do
     │                                                                              ~~~~~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:367:78: SpacecastWeb.Integration.RealtimeIntegrationTest."test Event Bus Integration handles multiple event types"/1

     warning: variable "user" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 367 │     test "handles multiple event types", %{conn: conn, user: user, resource: resource} do
     │                                                              ~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:367:62: SpacecastWeb.Integration.RealtimeIntegrationTest."test Event Bus Integration handles multiple event types"/1

     warning: variable "conn" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 423 │     test "unsubscribes from event bus", %{conn: conn} do
     │                                                 ~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:423:49: SpacecastWeb.Integration.RealtimeIntegrationTest."test Event Bus Integration unsubscribes from event bus"/1

     warning: variable "conn" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 577 │     test "prevents unauthorized event subscriptions", %{conn: conn, user: user, resource: resource} do
     │                                                               ~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:577:63: SpacecastWeb.Integration.RealtimeIntegrationTest."test Real-time Security prevents unauthorized event subscriptions"/1

     warning: variable "resource" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 577 │     test "prevents unauthorized event subscriptions", %{conn: conn, user: user, resource: resource} do
     │                                                                                           ~~~~~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:577:91: SpacecastWeb.Integration.RealtimeIntegrationTest."test Real-time Security prevents unauthorized event subscriptions"/1

     warning: variable "user" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 577 │     test "prevents unauthorized event subscriptions", %{conn: conn, user: user, resource: resource} do
     │                                                                           ~~~~
     │
     └─ test/spacecast_web/integration/realtime_integration_test.exs:577:75: SpacecastWeb.Integration.RealtimeIntegrationTest."test Real-time Security prevents unauthorized event subscriptions"/1

    warning: unused import SpacecastWeb.TestHelpers.WallabyUIHelper
    │
  6 │   import SpacecastWeb.TestHelpers.WallabyUIHelper
    │   ~
    │
    └─ test/spacecast_web/live/user/user_session_live_test.exs:6:3

    warning: unused import SpacecastWeb.TestHelpers.WallabyUIHelper
    │
  6 │   import SpacecastWeb.TestHelpers.WallabyUIHelper
    │   ~
    │
    └─ test/spacecast_web/live/user/user_auth_test.exs:6:3

    warning: unused import Phoenix.LiveViewTest
    │
  3 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/components/ui/metrics_table_tab_test.exs:3:3

    warning: variable "encrypted" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 97 │       assert {:ok, encrypted} = CryptoService.encrypt_with_session(session, "Message 1")
    │                    ~~~~~~~~~
    │
    └─ test/spacecast/events/crypto_service_test.exs:97:20: Spacecast.Events.CryptoServiceTest."test message encryption and decryption handles multiple messages in same session"/1

     warning: variable "encrypted2" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 104 │       assert {:ok, encrypted2} = CryptoService.encrypt_with_session(updated_session, "Message 2")
     │                    ~~~~~~~~~~
     │
     └─ test/spacecast/events/crypto_service_test.exs:104:20: Spacecast.Events.CryptoServiceTest."test message encryption and decryption handles multiple messages in same session"/1

    warning: unused import Phoenix.LiveViewTest
    │
  3 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/components/ui/list_view_test.exs:3:3

.    warning: unused alias Accounts
    │
 88 │   alias Spacecast.Accounts
    │   ~
    │
    └─ test/spacecast_web/integration/event_driven_integration_test.exs:88:3

    warning: unused alias ResourceSystem
    │
 89 │   alias Spacecast.Resources.ResourceSystem
    │   ~
    │
    └─ test/spacecast_web/integration/event_driven_integration_test.exs:89:3

    warning: unused import Phoenix.LiveViewTest
    │
  3 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:3:3

     warning: variable "view" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 135 │       {:ok, view, _html} = live(conn, "/resources")
     │             ~~~~
     │
     └─ test/spacecast_web/live/resource_relationship_live_test.exs:135:13: SpacecastWeb.ResourceRelationshipLiveTest."test resource relationship management resource update with parent relationship"/1

     warning: variable "view" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 212 │       {:ok, view, _html} = live(conn, "/resources")
     │             ~~~~
     │
     └─ test/spacecast_web/live/resource_relationship_live_test.exs:212:13: SpacecastWeb.ResourceRelationshipLiveTest."test resource relationship management relationship removal works correctly"/1

.................    warning: unused alias Events
    │
 28 │   alias Spacecast.Events
    │   ~
    │
    └─ test/spacecast_web/integration/realtime_integration_test.exs:28:3

     warning: variable "conn" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 531 │       conn = get(conn, "/health")
     │       ~~~~
     │
     └─ test/spacecast_web/integration/performance_integration_test.exs:531:7: SpacecastWeb.Integration.PerformanceIntegrationTest."test Performance Monitoring tracks performance metrics"/1

    warning: unused import Phoenix.ConnTest
    │
  4 │   import Phoenix.ConnTest
    │   ~
    │
    └─ test/spacecast_web/components/diagram_editor_test.exs:4:3

    warning: unused alias EventQuery
    │
  6 │   alias Spacecast.Events.QueryBuilders.EventQuery
    │   ~
    │
    └─ test/spacecast/events/event_operations_test.exs:6:3

    warning: unused import Ecto.Query
    │
  8 │   import Ecto.Query
    │   ~
    │
    └─ test/spacecast/events/event_operations_test.exs:8:3

DEBUG: nav component called with assigns: [:__changed__]
DEBUG: nav slot content: ""
    warning: unused alias ReplaySession
    │
  6 │   alias Spacecast.Events.Schemas.{ReplaySession, Snapshot, VersionedState}
    │   ~
    │
    └─ test/spacecast/events/event_store_test.exs:6:3

    warning: unused alias Snapshot
    │
  6 │   alias Spacecast.Events.Schemas.{ReplaySession, Snapshot, VersionedState}
    │   ~
    │
    └─ test/spacecast/events/event_store_test.exs:6:3

    warning: unused alias VersionedState
    │
  6 │   alias Spacecast.Events.Schemas.{ReplaySession, Snapshot, VersionedState}
    │   ~
    │
    └─ test/spacecast/events/event_store_test.exs:6:3

    warning: unused alias Events
    │
 51 │   alias Spacecast.Events
    │   ~
    │
    └─ test/spacecast_web/integration/performance_integration_test.exs:51:3



  1) test ExampleRoutes module example routes includes expected route types (SpacecastWeb.Router.ExampleRoutesTest)
     test/spacecast_web/router/example_routes_test.exs:27
     ** (UndefinedFunctionError) function SpacecastWeb.Router.ExampleRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.ExampleRoutes if you intend to invoke this macro
     code: quoted = ExampleRoutes.__using__([])
     stacktrace:
       (spacecast 0.1.0) SpacecastWeb.Router.ExampleRoutes.__using__([])
       test/spacecast_web/router/example_routes_test.exs:29: (test)



  2) test ExampleRoutes module example routes macro structure (SpacecastWeb.Router.ExampleRoutesTest)
     test/spacecast_web/router/example_routes_test.exs:20
     ** (UndefinedFunctionError) function SpacecastWeb.Router.ExampleRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.ExampleRoutes if you intend to invoke this macro
     code: quoted = ExampleRoutes.__using__([])
     stacktrace:
       (spacecast 0.1.0) SpacecastWeb.Router.ExampleRoutes.__using__([])
       test/spacecast_web/router/example_routes_test.exs:22: (test)



  3) test ExampleRoutes module defines example routes (SpacecastWeb.Router.ExampleRoutesTest)
     test/spacecast_web/router/example_routes_test.exs:6
     Expected truthy, got false
     code: assert function_exported?(ExampleRoutes, :__using__, 1)
     stacktrace:
       test/spacecast_web/router/example_routes_test.exs:11: (test)



  4) test ExampleRoutes module example routes module documentation (SpacecastWeb.Router.ExampleRoutesTest)
     test/spacecast_web/router/example_routes_test.exs:14
     Assertion with != failed, both sides are exactly equal
     code: assert Keyword.get(module_info, :moduledoc) != nil
     left: nil
     stacktrace:
       test/spacecast_web/router/example_routes_test.exs:17: (test)

...................................................................

  5) test MainRoutes module main routes includes expected route types (SpacecastWeb.Router.MainRoutesTest)
     test/spacecast_web/router/main_routes_test.exs:27
     ** (UndefinedFunctionError) function SpacecastWeb.Router.MainRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.MainRoutes if you intend to invoke this macro
     code: quoted = MainRoutes.__using__([])
     stacktrace:
       (spacecast 0.1.0) SpacecastWeb.Router.MainRoutes.__using__([])
       test/spacecast_web/router/main_routes_test.exs:29: (test)



  6) test MainRoutes module main routes macro structure (SpacecastWeb.Router.MainRoutesTest)
     test/spacecast_web/router/main_routes_test.exs:20
     ** (UndefinedFunctionError) function SpacecastWeb.Router.MainRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.MainRoutes if you intend to invoke this macro
     code: quoted = MainRoutes.__using__([])
     stacktrace:
       (spacecast 0.1.0) SpacecastWeb.Router.MainRoutes.__using__([])
       test/spacecast_web/router/main_routes_test.exs:22: (test)



  7) test MainRoutes module defines core page routes (SpacecastWeb.Router.MainRoutesTest)
     test/spacecast_web/router/main_routes_test.exs:6
     Expected truthy, got false
     code: assert function_exported?(MainRoutes, :__using__, 1)
     stacktrace:
       test/spacecast_web/router/main_routes_test.exs:11: (test)



  8) test MainRoutes module main routes module documentation (SpacecastWeb.Router.MainRoutesTest)
     test/spacecast_web/router/main_routes_test.exs:14
     Assertion with != failed, both sides are exactly equal
     code: assert Keyword.get(module_info, :moduledoc) != nil
     left: nil
     stacktrace:
       test/spacecast_web/router/main_routes_test.exs:17: (test)

...................********........    warning: this clause for button/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:2

    warning: this clause for css/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:2

    warning: this clause for css/2 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:2

    warning: this clause for link/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:2

    warning: this clause for text_field/1 cannot match because a previous clause at line 2 always matches
    │
  2 │   use SpacecastWeb.WallabyCase
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:2

.........    warning: unused alias TestMockHelper
    │
 18 │   alias SpacecastWeb.TestMockHelper
    │   ~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:18:3

    warning: unused import Spacecast.TestSupport.ResourceFixtures
    │
 14 │   import Spacecast.TestSupport.ResourceFixtures,
    │   ~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:14:3

    warning: unused import Spacecast.TestSupport.ResourceSystemHelper
    │
 17 │   import Spacecast.TestSupport.ResourceSystemHelper
    │   ~
    │
    └─ test/spacecast_web/features/resource_creation_workflow_test.exs:17:3

.....    warning: unused alias HandlerProcess
    │
  4 │   alias Spacecast.Events.Handlers.HandlerProcess
    │   ~
    │
    └─ test/spacecast/events/handlers/handler_supervisor_test.exs:4:3

    warning: unused alias Events
    │
 28 │   alias Spacecast.Events
    │   ~
    │
    └─ test/spacecast_web/integration/external_service_integration_test.exs:28:3

    warning: unused import Phoenix.LiveViewTest
    │
  8 │   import Phoenix.LiveViewTest
    │   ~
    │
    └─ test/spacecast_web/integration/external_service_integration_test.exs:8:3

......................................................................................................    warning: SpacecastWeb.Components.ChangeHistoryViewer.render/1 is undefined or private. Did you mean:

          * render_audit_row/1

    │
 24 │         ChangeHistoryViewer.render(%{
    │                             ~
    │
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:24:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration renders with timeline view mode"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:57:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration renders with list view mode"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:75:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration handles resource without change history"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:89:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration handles empty change history"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:113:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration switches between view modes"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:126:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration switches between view modes"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:149:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration passes correct props to child components"/1
    └─ test/spacecast_web/components/change_history_viewer_integration_test.exs:174:29: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest."test ChangeHistoryViewer integration handles missing event handlers gracefully"/1

    warning: SpacecastWeb.Router.MainRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.MainRoutes if you intend to invoke this macro
    │
 22 │       quoted = MainRoutes.__using__([])
    │                           ~
    │
    └─ test/spacecast_web/router/main_routes_test.exs:22:27: SpacecastWeb.Router.MainRoutesTest."test MainRoutes module main routes macro structure"/1
    └─ test/spacecast_web/router/main_routes_test.exs:29:27: SpacecastWeb.Router.MainRoutesTest."test MainRoutes module main routes includes expected route types"/1

    warning: SpacecastWeb.Router.ExampleRoutes.__using__/1 is undefined or private. However, there is a macro with the same name and arity. Be sure to require SpacecastWeb.Router.ExampleRoutes if you intend to invoke this macro
    │
 22 │       quoted = ExampleRoutes.__using__([])
    │                              ~
    │
    └─ test/spacecast_web/router/example_routes_test.exs:22:30: SpacecastWeb.Router.ExampleRoutesTest."test ExampleRoutes module example routes macro structure"/1
    └─ test/spacecast_web/router/example_routes_test.exs:29:30: SpacecastWeb.Router.ExampleRoutesTest."test ExampleRoutes module example routes includes expected route types"/1

     warning: String.indexOf/2 is undefined or private
     │
 199 │       alpha_index = String.indexOf(html, "alpha")
     │                            ~
     │
     └─ test/spacecast_web/components/ui/metrics_table_tab_test.exs:199:28: SpacecastWeb.Components.UI.MetricsTableTabTest."test MetricsTableTab component handles sorting function"/1
     └─ test/spacecast_web/components/ui/metrics_table_tab_test.exs:200:27: SpacecastWeb.Components.UI.MetricsTableTabTest."test MetricsTableTab component handles sorting function"/1
     └─ test/spacecast_web/components/ui/metrics_table_tab_test.exs:201:28: SpacecastWeb.Components.UI.MetricsTableTabTest."test MetricsTableTab component handles sorting function"/1

     warning: incompatible types given to Spacecast.Events.Core.EventMonitor.record_processing_metric/2:

         Spacecast.Events.Core.EventMonitor.record_processing_metric(invalid_event, %{
           duration_ms: 100,
           handler: "test_handler",
           status: :success
         })

     given types:

         (
           -%{id: binary(), type: binary()}-,
           %{duration_ms: integer(), handler: binary(), status: :success}
         )

     but expected one of:

         #1
         (
           dynamic(%Spacecast.Events.Core.Event{
             __meta__: term(),
             causation_id: term(),
             correlation_id: term(),
             data: term(),
             id: term(),
             inserted_at: term(),
             metadata: term(),
             resource_id: term(),
             resource_type: term(),
             timestamp: term(),
             type: term(),
             updated_at: term()
           }),
           dynamic()
         )

         #2
         (
           dynamic(%Spacecast.Events.Core.Event{
             __meta__: term(),
             causation_id: term(),
             correlation_id: term(),
             data: term(),
             id: term(),
             inserted_at: term(),
             metadata: term(),
             resource_id: term(),
             resource_type: term(),
             timestamp: term(),
             type: term(),
             updated_at: term()
           }),
           dynamic(nil)
         )

     where "invalid_event" was given the type:

         # type: %{id: binary(), type: binary()}
         # from: test/spacecast/events/core/event_monitor_test.exs:906:21
         invalid_event = %{id: "invalid", type: "invalid_event"}

     typing violation found at:
     │
 913 │         EventMonitor.record_processing_metric(invalid_event, %{
     │                      ~
     │
     └─ test/spacecast/events/core/event_monitor_test.exs:913:22: Spacecast.Events.Core.EventMonitorTest."test error handling handles malformed event data"/1

     warning: incompatible types given to Spacecast.Events.Core.EventMonitor.record_processing_metric/2:

         Spacecast.Events.Core.EventMonitor.record_processing_metric(nil, %{
           duration_ms: 100,
           handler: "test_handler",
           status: :success
         })

     given types:

         -nil-, %{duration_ms: integer(), handler: binary(), status: :success}

     but expected one of:

         #1
         (
           dynamic(%Spacecast.Events.Core.Event{
             __meta__: term(),
             causation_id: term(),
             correlation_id: term(),
             data: term(),
             id: term(),
             inserted_at: term(),
             metadata: term(),
             resource_id: term(),
             resource_type: term(),
             timestamp: term(),
             type: term(),
             updated_at: term()
           }),
           dynamic()
         )

         #2
         (
           dynamic(%Spacecast.Events.Core.Event{
             __meta__: term(),
             causation_id: term(),
             correlation_id: term(),
             data: term(),
             id: term(),
             inserted_at: term(),
             metadata: term(),
             resource_id: term(),
             resource_type: term(),
             timestamp: term(),
             type: term(),
             updated_at: term()
           }),
           dynamic(nil)
         )

     typing violation found at:
     │
 924 │         EventMonitor.record_processing_metric(nil, %{
     │                      ~
     │
     └─ test/spacecast/events/core/event_monitor_test.exs:924:22: Spacecast.Events.Core.EventMonitorTest."test error handling handles nil event"/1

............

  9) test ListView component renders list without view version handler (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:97
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2550ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



 10) test Font Optimizations JavaScript Font Optimizations JavaScript preload links are present (SpacecastWeb.FontOptimizationsJsTest)
     test/spacecast_web/js/font_optimizations_js_test.exs:39
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2471ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/font_optimizations_js_test.exs:1: SpacecastWeb.FontOptimizationsJsTest.__ex_unit__/2



 11) test enhanced union type validation provides detailed error messages for union type failures (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:192
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2504ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



 12) test navigation to style guide works (SpacecastWeb.HomeLiveTest)
     test/spacecast_web/live/home_live_test.exs:31
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2483ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/home_live_test.exs:1: SpacecastWeb.HomeLiveTest.__ex_unit__/2



 13) test utility functions ensure_resource_module/1 checks module existence (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:148
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2598ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



 14) test ResourceLive with assigns_resource validates resource updates (SpacecastWeb.ResourceLiveTest)
     test/spacecast_web/live/resource_live_test.exs:50
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2326ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_live_test.exs:1: SpacecastWeb.ResourceLiveTest.__ex_unit__/2



 15) test style_guide component includes grid system examples (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:37
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2369ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



 16) test Debug Grid integration SocketValidationDebugGrid module functions without errors (Spacecast.EnhancedErrorReportingTest)
     test/enhanced_error_reporting_test.exs:163
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2280ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/enhanced_error_reporting_test.exs:1: Spacecast.EnhancedErrorReportingTest.__ex_unit__/2



 17) test renders 404 (SpacecastWeb.ErrorJSONTest)
     test/spacecast_web/controllers/error_json_test.exs:4
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2491ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/error_json_test.exs:1: SpacecastWeb.ErrorJSONTest.__ex_unit__/2



 18) test theme_toggle/1 renders theme toggle buttons (SpacecastWeb.Components.Common.ThemeToggleTest)
     test/spacecast_web/components/theme_toggle_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2506ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_toggle_test.exs:1: SpacecastWeb.Components.Common.ThemeToggleTest.__ex_unit__/2



 19) test change_history_viewer/1 renders audit log view with history (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:75
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2475ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



 20) test TimelineView component renders timeline without view version handler (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:87
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2709ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



 21) test theme_preview_card/1 renders a dark theme preview card (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:44
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2696ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



 22) test Accessibility features reduced motion media query is used in CSS (SpacecastWeb.AccessibilityTest)
     test/spacecast_web/accessibility_test.exs:50
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2264ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/accessibility_test.exs:1: SpacecastWeb.AccessibilityTest.__ex_unit__/2



 23) test Style Guide JavaScript high contrast toggle works (SpacecastWeb.StyleGuideJsTest)
     test/spacecast_web/js/style_guide_js_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2398ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/style_guide_js_test.exs:1: SpacecastWeb.StyleGuideJsTest.__ex_unit__/2



 24) test Font optimizations root layout includes font optimization tags (SpacecastWeb.FontOptimizationsTest)
     test/spacecast_web/font_optimizations_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2702ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/font_optimizations_test.exs:1: SpacecastWeb.FontOptimizationsTest.__ex_unit__/2



 25) test renders 404.html (SpacecastWeb.ErrorHTMLTest)
     test/spacecast_web/controllers/error_html_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2649ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/error_html_test.exs:1: SpacecastWeb.ErrorHTMLTest.__ex_unit__/2



 26) test MetricsSummaryTab component renders summary with high error rate (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:90
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2709ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 27) test start_replay_for_debugging/4 handles invalid resource parameters (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:387
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2125ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



 28) test MetricsTableTab component handles zero execution count (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:111
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2576ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



 29) test ChangeHistoryViewer integration handles empty change history (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:87
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2523ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



 30) test type_validation/3 function validates union types correctly (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:137
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2624ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:18.571 [info] Signal Protocol session storage initialized
     23:38:18.571 [info] Signal Protocol session storage initialized
     23:38:18.571 [info] Signal Protocol session storage initialized
     23:38:18.571 [info] Created simple crypto session: 3ded21b600e44f8b5b493b7600f9df13
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 060089cdb213d90d6556b2e9371feceb
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 6fdd81d99f329fcd4cc528e02ae824c7
     23:38:18.615 [info] Deleted Signal Protocol session: 6fdd81d99f329fcd4cc528e02ae824c7
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 59a4f06a522cc65ecc158375073fbb6d
     23:38:18.615 [info] Created simple crypto session: 0bb028a6c9284a8a159479ba905da90f
     23:38:18.615 [info] Created simple crypto session: 2c54b0675b204612ef6282d870e6a8b3
     23:38:18.615 [info] Created simple crypto session: 87ed004325d015acf3667277213e9be5
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: fe90aba83a59a48ce9c1e19905098622
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 993e68156a5a42ddf174f225a1576de7
     23:38:18.615 [info] Created simple crypto session: 67973716099fdf5f44c9cafb07761dde
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: ac46875b676e442c2c34e7455f902315
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: d29a74d3406dcf7559ded993b3964f6f
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 3f191b96d1170a2bfa430d1f8937a0f9
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage already exists
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Signal Protocol session storage initialized
     23:38:18.615 [info] Created simple crypto session: 6d9d8a9769299cef87828acfeac9b914
     23:38:18.821 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor", "initial_content" => "Custom diagram content"}
     23:38:18.821 [debug] Replied in 189µs
     23:38:18.825 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor"}
     23:38:18.825 [debug] Replied in 84µs
     23:38:18.827 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor", "show_export" => false}
     23:38:18.827 [debug] Replied in 48µs
     23:38:18.828 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor", "template" => "flowchart"}
     23:38:18.828 [debug] Replied in 42µs
     23:38:18.830 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor", "show_template_selector" => false}
     23:38:18.830 [debug] Replied in 55µs
     23:38:18.831 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor"}
     23:38:18.831 [debug] Replied in 39µs
     23:38:18.832 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"id" => "test-diagram-editor"}
     23:38:18.832 [debug] Replied in 37µs
     23:38:18.834 [debug] MOUNT SpacecastWeb.TestLive.DiagramEditorTestLive
       Parameters: :not_mounted_at_router
       Session: %{"height" => 20, "id" => "test-diagram-editor", "width" => 60}
     23:38:18.834 [debug] Replied in 47µs
     23:38:19.013 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.019 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.103 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.120 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.171 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.178 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.188 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.337 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.401 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.408 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.508 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.536 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.565 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.601 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.612 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.648 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.670 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.680 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.690 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.709 [error] Custom provider error: "Custom provider error"
     23:38:19.715 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.716 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.724 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.849 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.853 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.853 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.861 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.871 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.968 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:19.997 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.020 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.168 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.217 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.271 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.301 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.334 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.360 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.415 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.483 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.635 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.651 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.677 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.678 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.710 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.712 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.724 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.733 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.767 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.797 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.810 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.889 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.893 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.931 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:20.969 [error] SMTP error: %KeyError{key: :adapter, term: [relay: "smtp.example.com", port: 587, username: "user", password: "pass", ssl: false, tls: :always, auth: :always], message: nil}
     
.....

 31) test get_event_system_metrics/1 gets metrics with custom time period (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:444
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



 32) test Enhanced type_validation/3 for union types validates complex union types with nested schemas (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:628
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



 33) test style_guide component includes accessibility examples (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:55
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



 34) test change_history_viewer/1 renders correct phx-click and phx-value for view and compare buttons in audit view (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:150
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



 35) test ListView component handles unknown timestamp type gracefully (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:265
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



 36) test ChangeHistoryViewer integration handles missing event handlers gracefully (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:163
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



 37) test MetricsTableTab component handles very large numbers (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:207
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



 38) test TimelineView component handles missing description gracefully (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:158
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



 39) test error handling functions get_error_id/1 extracts ID from different error formats (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:22
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



 40) test Accessibility features proper ARIA attributes in style guide (SpacecastWeb.AccessibilityTest)
     test/spacecast_web/accessibility_test.exs:37
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/accessibility_test.exs:1: SpacecastWeb.AccessibilityTest.__ex_unit__/2



 41) test Debug Grid integration BaseLive integrates with SocketValidationDebugGrid in development (Spacecast.EnhancedErrorReportingTest)
     test/enhanced_error_reporting_test.exs:193
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/enhanced_error_reporting_test.exs:1: Spacecast.EnhancedErrorReportingTest.__ex_unit__/2



 42) test Font optimizations style guide page includes font examples (SpacecastWeb.FontOptimizationsTest)
     test/spacecast_web/font_optimizations_test.exs:31
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/font_optimizations_test.exs:1: SpacecastWeb.FontOptimizationsTest.__ex_unit__/2



 43) test renders 500.html (SpacecastWeb.ErrorHTMLTest)
     test/spacecast_web/controllers/error_html_test.exs:11
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/error_html_test.exs:1: SpacecastWeb.ErrorHTMLTest.__ex_unit__/2



 44) test ResourceLive with assigns_resource updates resource via API (SpacecastWeb.ResourceLiveTest)
     test/spacecast_web/live/resource_live_test.exs:35
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_live_test.exs:1: SpacecastWeb.ResourceLiveTest.__ex_unit__/2



 45) test renders 500 (SpacecastWeb.ErrorJSONTest)
     test/spacecast_web/controllers/error_json_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/error_json_test.exs:1: SpacecastWeb.ErrorJSONTest.__ex_unit__/2



 46) test MetricsSummaryTab component handles edge case with single execution (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:171
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 47) test Style Guide JavaScript code examples have proper formatting (SpacecastWeb.StyleGuideJsTest)
     test/spacecast_web/js/style_guide_js_test.exs:25
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/style_guide_js_test.exs:1: SpacecastWeb.StyleGuideJsTest.__ex_unit__/2



 48) test theme_preview_card/1 contains all expected UI elements (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:68
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



 49) test Font Optimizations JavaScript Font Optimizations JavaScript font caching mechanism is set up (SpacecastWeb.FontOptimizationsJsTest)
     test/spacecast_web/js/font_optimizations_js_test.exs:30
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/font_optimizations_js_test.exs:1: SpacecastWeb.FontOptimizationsJsTest.__ex_unit__/2



 50) test disconnected and connected render (SpacecastWeb.HomeLiveTest)
     test/spacecast_web/live/home_live_test.exs:18
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/home_live_test.exs:1: SpacecastWeb.HomeLiveTest.__ex_unit__/2



 51) test BaseLive integration with type validation validates types during mount lifecycle (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:394
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:21.000 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.026 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.325 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.431 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.619 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.764 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:21.898 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.179 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.199 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.261 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.401 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.495 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.528 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.542 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.698 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.854 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:22.917 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


 52) test change_history_viewer/1 renders correct phx-click and phx-value for view and diff buttons in list view (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



 53) test get_replay_status/1 handles invalid session ID (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:424
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



 54) test Accessibility features keyboard navigation is supported (SpacecastWeb.AccessibilityTest)
     test/spacecast_web/accessibility_test.exs:60
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/accessibility_test.exs:1: SpacecastWeb.AccessibilityTest.__ex_unit__/2



 55) test Font Optimizations JavaScript font examples are displayed correctly (SpacecastWeb.FontOptimizationsJsTest)
     test/spacecast_web/js/font_optimizations_js_test.exs:47
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/font_optimizations_js_test.exs:1: SpacecastWeb.FontOptimizationsJsTest.__ex_unit__/2



 56) test ChangeHistoryViewer integration passes correct props to child components (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:138
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



 57) test theme_preview_card/1 renders a light theme preview card (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:29
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



 58) test ListView component formats different timestamp types (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:152
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



 59) test MetricsTableTab component handles sorting function (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:175
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



 60) test style_guide component includes color palette examples (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:27
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



 61) test TimelineView component formats different timestamp types (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:118
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



 62) test utility functions relationship_name_from_def/1 extracts name from different formats (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:159
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



 63) test MetricsSummaryTab component handles custom formatting functions (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:145
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 64) test ResourceLive with assigns_resource adds items to list (SpacecastWeb.ResourceLiveTest)
     test/spacecast_web/live/resource_live_test.exs:65
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_live_test.exs:1: SpacecastWeb.ResourceLiveTest.__ex_unit__/2



 65) test Enhanced type_validation/3 for nested structures validates deeply nested maps correctly (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:367
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



 66) test theme toggle is present (SpacecastWeb.HomeLiveTest)
     test/spacecast_web/live/home_live_test.exs:25
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/home_live_test.exs:1: SpacecastWeb.HomeLiveTest.__ex_unit__/2



 67) test type_validation/3 function context_aware_error generates helpful error messages (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:205
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:23.080 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.181 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.254 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.514 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.555 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.555 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.603 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.686 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.710 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.807 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.924 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:23.958 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.122 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.177 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.226 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.282 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.287 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.319 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.339 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.386 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.415 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.483 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.575 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.594 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:24.971 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


 68) test Enhanced type_validation/3 for union types validates union types with detailed error messages (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:596
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



 69) test ChangeHistoryViewer integration handles resource without change history (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:73
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



 70) test UI rendering functions render_validation_status/3 renders validation status (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



 71) test ListView component handles invalid timestamp gracefully (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:244
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



 72) test style_guide component includes component examples (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:47
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



 73) test Font Optimizations JavaScript Font Optimizations JavaScript font loading classes are applied (SpacecastWeb.FontOptimizationsJsTest)
     test/spacecast_web/js/font_optimizations_js_test.exs:11
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/font_optimizations_js_test.exs:1: SpacecastWeb.FontOptimizationsJsTest.__ex_unit__/2



 74) test MetricsTableTab component renders table with single item (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:77
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



 75) test change_history_viewer/1 renders list view with history (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:56
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



 76) test analyze_event_sequence/1 handles invalid event structure (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:512
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



 77) test TimelineView component renders timeline with selected version highlighted (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:62
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



 78) test ResourceLive with assigns_resource mounts with default values (SpacecastWeb.ResourceLiveTest)
     test/spacecast_web/live/resource_live_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_live_test.exs:1: SpacecastWeb.ResourceLiveTest.__ex_unit__/2



 79) test Accessibility features skip to content link is present (SpacecastWeb.AccessibilityTest)
     test/spacecast_web/accessibility_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/accessibility_test.exs:1: SpacecastWeb.AccessibilityTest.__ex_unit__/2



 80) test theme_preview_card/1 renders a dim theme preview card (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:56
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



 81) test MetricsSummaryTab component renders summary with high success rate (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:62
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 82) test type_validation/3 function validates complex nested structures (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:314
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:25.042 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.106 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.426 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.446 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.712 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.797 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:25.934 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.120 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.147 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.576 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.611 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.767 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.781 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.851 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:26.878 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


 83) test error handling functions most_affected_view/1 finds view with most errors (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:44
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



 84) test TimelineView component handles empty change history (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:106
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



 85) test Font Optimizations JavaScript Font Optimizations JavaScript font fallback is defined (SpacecastWeb.FontOptimizationsJsTest)
     test/spacecast_web/js/font_optimizations_js_test.exs:22
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/js/font_optimizations_js_test.exs:1: SpacecastWeb.FontOptimizationsJsTest.__ex_unit__/2



 86) test get_event_metadata/1 handles event with different struct (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:618
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



 87) test change_history_viewer/1 renders correct phx-click and phx-value for view mode buttons (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:100
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



 88) test ListView component handles empty change history (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:139
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



 89) test theme_previews/1 renders the theme previews container (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



 90) test Accessibility features proper heading hierarchy in style guide (SpacecastWeb.AccessibilityTest)
     test/spacecast_web/accessibility_test.exs:15
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/accessibility_test.exs:1: SpacecastWeb.AccessibilityTest.__ex_unit__/2



 91) test MetricsTableTab component handles custom formatting functions (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:143
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



 92) test MetricsSummaryTab component renders pie chart with success rate (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:118
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 93) test enhanced union type validation handles unions with optional types (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:282
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



 94) test ChangeHistoryViewer integration switches between view modes (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:101
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



 95) test ResourceLive with assigns_resource updates resource values via event (SpacecastWeb.ResourceLiveTest)
     test/spacecast_web/live/resource_live_test.exs:19
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_live_test.exs:1: SpacecastWeb.ResourceLiveTest.__ex_unit__/2



 96) test style_guide component renders the style guide with all sections (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



 97) test BaseLive integration with type validation logs validation errors with context information (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:448
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:27.582 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:27.589 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:27.613 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:27.616 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:27.689 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.317 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.363 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.403 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.426 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.669 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.723 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.845 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.858 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:28.925 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


 98) test MetricsSummaryTab component handles very large numbers (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:197
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



 99) test UI rendering functions render_errors/4 renders error component (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:76
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



100) test integration: event propagation clicking view and diff buttons emits events to parent LiveView (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:239
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



101) test ChangeHistoryViewer integration renders with timeline view mode (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



102) test TimelineView component handles invalid timestamp gracefully (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:177
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



103) test inspect_event/1 handles events with nil correlation_id (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:93
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



104) test ListView component renders list with selected version highlighted (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:69
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



105) test MetricsTableTab component handles edge case with 100% error rate (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:271
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



106) test theme_previews/1 renders all theme preview cards (SpacecastWeb.Components.Interactive.ThemePreviewTest)
     test/spacecast_web/components/theme_preview_test.exs:15
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/theme_preview_test.exs:1: SpacecastWeb.Components.Interactive.ThemePreviewTest.__ex_unit__/2



107) test style_guide component includes typography examples (SpacecastWeb.Components.Documentation.StyleGuideTest)
     test/spacecast_web/components/style_guide_test.exs:18
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/style_guide_test.exs:1: SpacecastWeb.Components.Documentation.StyleGuideTest.__ex_unit__/2



108) test nested validation features validates deeply nested structures (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:101
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



109) test type_validation/3 function emits telemetry events for validation failures (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:188
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:29.430 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:29.466 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.101 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.225 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.263 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.337 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.623 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.755 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.863 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:30.954 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


110) test get_event_system_metrics/1 handles negative time period (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:475
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



111) test ChangeHistoryViewer integration renders with list view mode (SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest)
     test/spacecast_web/components/change_history_viewer_integration_test.exs:40
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_integration_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerIntegrationTest.__ex_unit__/2



112) test enhanced union type validation handles complex unions with schemas (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:222
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



113) test MetricsSummaryTab component renders summary with metrics data (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



114) test ListView component renders list without diff versions handler (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:118
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



115) test data formatting functions truncate_message/2 truncates long messages (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:119
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



116) test TimelineView component renders timeline with change history (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



117) test change_history_viewer/1 renders empty state when no history (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:24
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



118) test MetricsTableTab component handles edge case with 100% success rate (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:239
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



119) test type_validation/3 function validates lists with type specs correctly (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:115
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:31.042 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:31.129 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:31.424 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:31.544 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:31.681 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:31.870 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:32.585 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:32.777 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


120) test analyze_event_sequence/1 handles empty event sequence (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:502
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



121) test Enhanced type_validation/3 for nested structures validates nested lists with complex schemas (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:508
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



122) test TimelineView component renders timeline without selected version (SpacecastWeb.Components.UI.TimelineViewTest)
     test/spacecast_web/components/ui/timeline_view_test.exs:42
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/timeline_view_test.exs:1: SpacecastWeb.Components.UI.TimelineViewTest.__ex_unit__/2



123) test ListView component formats changes correctly (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:217
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



124) test error handling functions get_error_module/1 extracts module from different error formats (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



125) test MetricsSummaryTab component renders summary with zero executions (SpacecastWeb.Components.UI.MetricsSummaryTabTest)
     test/spacecast_web/components/ui/metrics_summary_tab_test.exs:37
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_summary_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsSummaryTabTest.__ex_unit__/2



126) test change_history_viewer/1 renders timeline view with history (SpacecastWeb.Components.ChangeHistoryViewerTest)
     test/spacecast_web/components/change_history_viewer_test.exs:31
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/change_history_viewer_test.exs:1: SpacecastWeb.Components.ChangeHistoryViewerTest.__ex_unit__/2



127) test MetricsTableTab component renders table with metrics data (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



128) test BaseLive integration with type validation tests boundary conditions with mutations (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:471
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:32.998 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:33.042 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:33.063 [info] Backpressure status: normal (value: 0)
     23:38:33.291 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:33.762 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:34.177 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:34.551 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:34.792 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:34.878 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:34.966 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


129) test get_replay_status/1 successfully gets replay session status (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:408
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



130) test utility functions unset_other_defaults/2 updates default status (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:165
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



131) test MetricsTableTab component renders table with empty data (SpacecastWeb.Components.UI.MetricsTableTabTest)
     test/spacecast_web/components/ui/metrics_table_tab_test.exs:52
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/metrics_table_tab_test.exs:1: SpacecastWeb.Components.UI.MetricsTableTabTest.__ex_unit__/2



132) test ListView component handles missing description gracefully (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:196
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



133) test Enhanced type_validation/3 for union types validates optional fields correctly (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:665
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



134) test type_validation/3 function handles custom validation functions (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:164
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:35.549 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:35.595 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:35.693 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:35.906 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.043 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.051 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.508 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.666 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.798 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:36.966 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


135) test compare_events/2 handles events with complex nested data structures (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:182
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



136) test ListView component renders list with change history (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



137) test data formatting functions status_icon/1 returns appropriate icon (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:133
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



138) test Enhanced type_validation/3 for nested structures validates deeply nested maps with detailed error message format (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:453
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



139) test type_validation/3 function validates list_of_maps correctly (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:277
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:37.078 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:37.345 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:37.583 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:37.786 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:37.798 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:38.068 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:38.076 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:38.225 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:38.355 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


140) test compare_events/2 compares identical events and returns nil differences (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:153
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



141) test nested validation features validates nested_list type with deep structures (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



142) test ListView component renders list without selected version (SpacecastWeb.Components.UI.ListViewTest)
     test/spacecast_web/components/ui/list_view_test.exs:47
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/list_view_test.exs:1: SpacecastWeb.Components.UI.ListViewTest.__ex_unit__/2



143) test error handling functions error_icon/1 returns appropriate icon (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



144) test BaseLive integration with type validation property-based testing of type validation (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:434
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1997ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:39.706 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:39.966 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:40.044 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:40.239 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:40.375 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


145) test performance and stress testing handles large number of events in metrics calculation (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:636
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



146) test nested validation features validates map_with_lists structure (Spacecast.EnhancedTypeValidationTest)
     test/socket_validator/enhanced_type_validation_test.exs:44
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/enhanced_type_validation_test.exs:1: Spacecast.EnhancedTypeValidationTest.__ex_unit__/2



147) test data formatting functions short_view_name/1 shortens view names (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:126
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



148) test type_validation/3 function validates maps with optional fields (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:236
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:41.147 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:41.497 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:41.599 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:41.937 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:42.015 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:42.401 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:42.859 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


149) test analyze_event_sequence/1 handles events with different timestamps (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:544
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



150) test error handling functions get_error_message/1 extracts message from different error formats (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:28
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



151) test type_validation/3 function validates basic types correctly (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1997ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:44.178 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     


152) test get_event_system_metrics/1 successfully gets event system metrics (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:434
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



153) test error handling functions unique_error_types/1 returns unique error types (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:64
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2



154) test type_validation/3 function validates nested schemas correctly (Spacecast.TypeValidationTest)
     test/socket_validator/type_validation_test.exs:58
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/socket_validator/type_validation_test.exs:1: Spacecast.TypeValidationTest.__ex_unit__/2

     The following output was logged:
     23:38:45.284 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:46.399 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     23:38:46.450 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
     
23:38:47.667 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:47.780 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:47.927 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:38:48.065 [info] Backpressure status: normal (value: 0)
23:38:48.452 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:48.706 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


155) test get_event_system_metrics/1 handles empty events list for short time periods (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:454
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



156) test utility functions build_filter/3 creates filter map (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:143
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:49.054 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:49.784 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:49.803 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:50.053 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


157) test get_event_metadata/1 successfully extracts event metadata (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:588
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



158) test data formatting functions display_field_value/2 formats different field types (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:108
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:51.176 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:51.764 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:51.859 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:51.880 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:51.952 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:52.077 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:52.278 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:52.798 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:52.824 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


159) test compare_events/2 compares maps with different structures (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:173
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



160) test error handling functions most_common_error_type/1 finds most frequent error type (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:54
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:53.031 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:53.141 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:54.780 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


161) test compare_events/2 compares events with only_in_first differences (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:278
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



162) test error handling functions error_count/1 with list of errors (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:55.131 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:55.420 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:55.450 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:56.170 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:56.238 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:56.311 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


163) test edge cases and error handling handles events with complex nested data structures (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:760
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



164) test utility functions get_transformation_name/1 extracts name from different formats (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:153
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:57.837 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:58.098 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:58.276 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:58.942 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


165) test compare_events/2 successfully compares two different events (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:138
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2



166) test error handling functions error_count/1 with non-list input (SpacecastWeb.Components.UI.GeneralHelpersTest)
     test/spacecast_web/components/ui/general_helpers_test.exs:11
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/ui/general_helpers_test.exs:1: SpacecastWeb.Components.UI.GeneralHelpersTest.__ex_unit__/2

23:38:59.647 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:38:59.954 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:00.186 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


167) test get_replay_status/1 handles session not found (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:419
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:01.222 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:01.360 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:01.537 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:02.392 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:02.452 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


168) test start_replay_for_debugging/4 successfully starts a replay session for debugging (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:348
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:03.067 [info] Backpressure status: normal (value: 0)
23:39:03.183 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:03.295 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:03.352 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:03.368 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:03.582 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:04.069 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:04.286 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:04.298 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:04.717 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


169) test inspect_event/1 handles events with correlation and causation relationships (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:74
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:05.700 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:06.356 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:06.881 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


170) test performance and stress testing handles large event sequence analysis (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:668
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:08.305 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:08.666 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


171) test analyze_event_sequence/1 handles events with different sources (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:560
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:09.276 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:09.667 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:10.244 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:10.795 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


172) test compare_events/2 compares events with only_in_second differences (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:312
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:11.525 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:11.814 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:11.865 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:12.281 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:12.351 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:12.572 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


173) test edge cases and error handling handles events with empty data and metadata (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:739
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:14.602 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


174) test analyze_event_sequence/1 handles events without metadata (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:573
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:16.102 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:16.286 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:16.608 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


175) test edge cases and error handling handles unicode characters in event data (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:821
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:17.087 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:17.149 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:17.246 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:17.414 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:17.931 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:39:17.931 [warning] 🟡 ALERT: Slow Response Time: Current value 1667 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1667
Threshold: 1000
Time: 2025-08-02 21:39:17.931435Z

23:39:17.931 [debug] Alert channel email is disabled or not configured
23:39:18.015 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:18.071 [info] Backpressure status: normal (value: 0)
23:39:18.078 [debug] QUERY ERROR source="event_reminders" queue=3.0ms
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:39:18Z]]
23:39:18.081 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.906.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:39:18.267 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:18.318 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:18.645 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:18.834 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


176) test analyze_event_sequence/1 handles single event sequence (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:534
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:19.534 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:19.538 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:20.347 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:20.641 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:20.667 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:20.929 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


177) test inspect_event/1 handles events with empty data and metadata (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:114
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:21.541 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:21.542 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:22.506 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:22.958 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


178) test get_event_metadata/1 handles event without correlation_id (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:598
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:23.072 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:23.210 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:23.511 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:23.729 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:23.986 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:24.394 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:24.424 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


179) test analyze_event_sequence/1 successfully analyzes a valid event sequence (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:487
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:25.349 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:26.149 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:26.377 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:26.412 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:26.565 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


180) test compare_events/2 handles second event not found (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:168
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:27.146 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:28.279 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:28.686 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


181) test start_replay_for_debugging/4 starts replay session with custom options (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:366
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:29.212 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:30.060 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


182) test get_event_system_metrics/1 handles zero time period (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:465
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:31.054 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:31.415 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:31.523 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:31.640 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:31.809 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:32.570 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:32.742 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


183) test compare_events/2 handles unicode characters in event data (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:243
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:33.073 [info] Backpressure status: normal (value: 0)
23:39:33.369 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:34.181 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:34.507 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


184) test compare_events/2 handles first event not found (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:163
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:36.674 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:36.957 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


185) test inspect_event/1 successfully inspects an event with all details (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:58
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:37.413 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:37.463 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:38.212 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:38.221 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:38.417 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:38.668 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


186) test start_replay_for_debugging/4 handles non-string resource parameters (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:398
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:39.254 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:39.504 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:40.385 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:40.431 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:40.583 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


187) test performance and stress testing handles events with missing timestamp (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:694
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:42.206 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:42.234 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:42.521 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


188) test inspect_event/1 handles event not found error (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:69
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:43.923 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:44.129 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:44.498 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:44.553 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:44.797 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


189) test edge cases and error handling handles events with nil correlation_id (Spacecast.Events.Core.EventInspectorTest)
     test/spacecast/events/core/event_inspector_test.exs:718
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_inspector_test.exs:1: Spacecast.Events.Core.EventInspectorTest.__ex_unit__/2

23:39:45.154 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:45.793 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:45.868 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:46.570 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:46.633 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:46.692 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


190) test bridge module consistency bridge modules delegate to corresponding core functions (Spacecast.Events.BridgeConsistencyTest)
     test/spacecast/events/bridge_consistency_test.exs:14
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/bridge_consistency_test.exs:1: Spacecast.Events.BridgeConsistencyTest.__ex_unit__/2

23:39:47.940 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:39:47.950 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:48.076 [info] Backpressure status: normal (value: 0)
23:39:48.093 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:48.649 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


191) test user resource event sourcing rebuilds user state from events (Spacecast.Resources.UserResourceTest)
     test/spacecast/resources/models/user_resource_test.exs:83
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/user_resource_test.exs:1: Spacecast.Resources.UserResourceTest.__ex_unit__/2

23:39:49.133 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:49.607 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:49.926 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:49.974 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:50.007 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:50.032 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


192) test user resource event sourcing deletes user and generates deleted event (Spacecast.Resources.UserResourceTest)
     test/spacecast/resources/models/user_resource_test.exs:61
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/user_resource_test.exs:1: Spacecast.Resources.UserResourceTest.__ex_unit__/2

23:39:51.192 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.369 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.536 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.557 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.708 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.800 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:51.975 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:52.006 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:52.310 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:52.648 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


193) test user resource event sourcing creates user and generates created event (Spacecast.Resources.UserResourceTest)
     test/spacecast/resources/models/user_resource_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/user_resource_test.exs:1: Spacecast.Resources.UserResourceTest.__ex_unit__/2

23:39:53.523 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:53.584 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:53.638 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:53.926 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:54.189 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:54.715 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


194) test user resource event sourcing updates user and generates updated event (Spacecast.Resources.UserResourceTest)
     test/spacecast/resources/models/user_resource_test.exs:38
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/user_resource_test.exs:1: Spacecast.Resources.UserResourceTest.__ex_unit__/2

23:39:55.231 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:56.057 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:56.159 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


195) test processes due reminders (Spacecast.Events.ReminderWorkerTest)
     test/spacecast/events/reminder_worker_test.exs:68
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/reminder_worker_test.exs:1: Spacecast.Events.ReminderWorkerTest.__ex_unit__/2

23:39:57.166 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:57.236 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:58.007 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:58.844 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


196) test does not process future reminders (Spacecast.Events.ReminderWorkerTest)
     test/spacecast/events/reminder_worker_test.exs:81
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/reminder_worker_test.exs:1: Spacecast.Events.ReminderWorkerTest.__ex_unit__/2

23:39:59.206 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:59.269 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:39:59.586 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:00.442 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:00.759 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:00.829 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


197) test team resource event sourcing rebuilds team state from events (Spacecast.Resources.TeamResourceTest)
     test/spacecast/resources/models/team_resource_test.exs:71
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/team_resource_test.exs:1: Spacecast.Resources.TeamResourceTest.__ex_unit__/2

23:40:01.377 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:01.389 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:02.573 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:02.622 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:02.963 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


198) test team resource event sourcing deletes team and generates deleted event (Spacecast.Resources.TeamResourceTest)
     test/spacecast/resources/models/team_resource_test.exs:53
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/team_resource_test.exs:1: Spacecast.Resources.TeamResourceTest.__ex_unit__/2

23:40:03.079 [info] Backpressure status: normal (value: 0)
23:40:03.133 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:04.462 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:04.619 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


199) test team resource event sourcing creates team and generates created event (Spacecast.Resources.TeamResourceTest)
     test/spacecast/resources/models/team_resource_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/team_resource_test.exs:1: Spacecast.Resources.TeamResourceTest.__ex_unit__/2

23:40:05.088 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:05.608 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:05.879 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:06.097 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:06.213 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


200) test team resource event sourcing updates team and generates updated event (Spacecast.Resources.TeamResourceTest)
     test/spacecast/resources/models/team_resource_test.exs:34
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/team_resource_test.exs:1: Spacecast.Resources.TeamResourceTest.__ex_unit__/2

23:40:07.051 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:07.370 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:07.558 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:07.575 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:08.534 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:08.743 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


201) test order resource event sourcing rebuilds order state from events (Spacecast.Resources.OrderResourceTest)
     test/spacecast/resources/models/order_resource_test.exs:109
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/order_resource_test.exs:1: Spacecast.Resources.OrderResourceTest.__ex_unit__/2

23:40:09.217 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:09.355 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:09.788 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:10.453 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:10.903 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


202) test order resource event sourcing deletes order and generates deleted event (Spacecast.Resources.OrderResourceTest)
     test/spacecast/resources/models/order_resource_test.exs:81
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/order_resource_test.exs:1: Spacecast.Resources.OrderResourceTest.__ex_unit__/2

23:40:10.992 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:11.060 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:11.894 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:12.370 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


203) test order resource event sourcing creates order and generates created event (Spacecast.Resources.OrderResourceTest)
     test/spacecast/resources/models/order_resource_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/order_resource_test.exs:1: Spacecast.Resources.OrderResourceTest.__ex_unit__/2

23:40:13.034 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:13.153 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:13.338 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:14.116 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:14.179 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:14.720 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


204) test order resource event sourcing updates order and generates updated event (Spacecast.Resources.OrderResourceTest)
     test/spacecast/resources/models/order_resource_test.exs:45
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/order_resource_test.exs:1: Spacecast.Resources.OrderResourceTest.__ex_unit__/2

.23:40:15.448 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:15.605 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:16.665 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


205) test ResourceSystem core logic deletes a resource successfully (Spacecast.Resources.ResourceSystemTest)
     test/spacecast/resources/resource_system_test.exs:54
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/resource_system_test.exs:1: Spacecast.Resources.ResourceSystemTest.__ex_unit__/2

23:40:17.060 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:17.192 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:17.719 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:17.942 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:40:18.080 [info] Backpressure status: normal (value: 0)
23:40:18.082 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:40:18Z]]
23:40:18.082 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.2530.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:40:18.113 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:18.319 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:18.402 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


206) test ResourceSystem core logic updates a resource successfully (Spacecast.Resources.ResourceSystemTest)
     test/spacecast/resources/resource_system_test.exs:38
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/resource_system_test.exs:1: Spacecast.Resources.ResourceSystemTest.__ex_unit__/2

23:40:19.367 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:19.451 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:19.849 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:19.988 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:20.213 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:20.858 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


207) test ResourceSystem core logic generates events on resource creation (Spacecast.Resources.ResourceSystemTest)
     test/spacecast/resources/resource_system_test.exs:71
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/resource_system_test.exs:1: Spacecast.Resources.ResourceSystemTest.__ex_unit__/2

23:40:21.044 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:22.196 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:22.372 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:22.428 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:22.672 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:22.689 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


208) test ResourceSystem core logic creates a resource successfully (Spacecast.Resources.ResourceSystemTest)
     test/spacecast/resources/resource_system_test.exs:18
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/resource_system_test.exs:1: Spacecast.Resources.ResourceSystemTest.__ex_unit__/2

23:40:23.254 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:23.545 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:23.553 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:23.980 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


209) test ResourceSystem core logic fails to create resource with missing required fields (Spacecast.Resources.ResourceSystemTest)
     test/spacecast/resources/resource_system_test.exs:32
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/resource_system_test.exs:1: Spacecast.Resources.ResourceSystemTest.__ex_unit__/2

.........23:40:25.093 [warning] StandardHandlers does not export register_handlers/0
...23:40:25.094 [warning] StandardHandlers does not export register_handlers/0
...23:40:25.095 [info] Registering standard projections
23:40:25.261 [info] Started projection Spacecast.Events.UserMetricsProjection with PID #PID<0.2655.0>
...23:40:25.262 [info] Registering standard projections
23:40:25.262 [info] Started projection Spacecast.Events.UserMetricsProjection with PID #PID<0.2659.0>
.****.[DEBUG] Form values before submission:
  Name: mock-value
  Description: mock-value
  Content: mock-value
  Type: mock-value
  Status: mock-value
[DEBUG] Form attributes:
  phx-target: mock-attr-value
  phx-submit: mock-attr-value
=== FORM SETUP VERIFICATION COMPLETE ===
✅ Form setup verification passed - LiveView form is properly configured
.
=== MINIMAL RESOURCE NEW PAGE SOURCE ===
<html>
  <body>
    <div data-test-id="color-preview-primary">Primary Color</div>
    <div data-test-id="color-preview-secondary">Secondary Color</div>
    <div data-test-id="color-preview-accent">Accent Color</div>
    <div data-test-id="color-preview-background">Background Color</div>
    <div data-test-id="color-preview-text">Text Color</div>
    <div>Mock page content</div>

    <!-- Accessibility Section -->
    <h2>Accessibility</h2>
    <form phx-submit="save_accessibility">
      <input name="reduced_motion" type="checkbox" />
      <button type="submit">Apply</button>
    </form>

    <!-- Theme Customization Form -->
    <form phx-submit="save_colors">
      <input name="theme[primary_color_text]" value="#000000" />
      <input name="theme[secondary_color_text]" value="#FFFFFF" />
      <input name="theme[background_color_text]" value="#000000" />
      <input name="theme[text_color_text]" value="#FFFFFF" />
      <button type="submit">Save Colors</button>
    </form>
  </body>
</html>

=== END MINIMAL RESOURCE NEW PAGE SOURCE ===

.23:40:25.567 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:25.872 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:26.034 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:26.114 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:26.678 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


210) test Filtering & Sorting supports sorting by name (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:497
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1723ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:27.321 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:27.928 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


211) test Health Check API GET /health/live returns liveness status (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:115
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:29.177 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:29.844 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:30.534 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:30.603 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:30.688 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:30.954 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:30.964 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


212) test Authentication & Authorization admin endpoints require admin role (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:341
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:31.178 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:31.524 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:31.625 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:31.938 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


213) test Resource API POST /api/resources creates new resource (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:236
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:33.082 [info] Backpressure status: normal (value: 0)
23:40:33.804 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:34.378 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:34.498 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:34.678 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:34.941 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


214) test Authentication & Authorization protected endpoints require authentication (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:332
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:35.107 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:35.226 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:35.443 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:35.621 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:35.983 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:36.350 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:36.695 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


215) test Error Handling returns 404 for non-existent resources (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:366
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:37.181 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:37.442 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:37.874 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:38.661 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


216) test Resource API GET /api/resources/:id returns single resource (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:223
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:39.039 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:39.283 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:39.428 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:39.943 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:40.971 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


217) test Response Format error responses follow consistent format (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:441
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:41.983 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:42.202 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


218) test Health Check API GET /health/ready returns readiness status (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:105
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:43.320 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:43.479 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:43.526 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:43.809 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:44.034 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:44.525 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:44.794 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


219) test Error Handling returns 422 for validation errors (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:374
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:45.486 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:45.819 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:45.894 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:46.275 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


220) test Resource API GET /api/resources returns list of resources (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:208
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:47.131 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:47.272 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:47.949 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:40:48.086 [info] Backpressure status: normal (value: 0)


221) test Resource API DELETE /api/resources/:id deletes resource (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:297
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:49.351 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:49.627 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:49.779 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:49.910 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:50.170 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:50.405 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


222) test Filtering & Sorting supports filtering by resource type (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:486
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:51.098 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:51.127 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


223) test Authentication & Authorization valid token allows access to protected endpoints (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:354
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:52.991 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:53.552 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:53.683 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:53.803 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:54.118 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:54.151 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:54.672 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:54.809 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


224) test Resource API PUT /api/resources/:id updates existing resource (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:266
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:55.223 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:55.775 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:55.956 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:56.509 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:56.832 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:56.852 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:56.905 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:56.978 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


225) test Health Check API GET /health returns basic health status (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:81
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:57.463 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:57.802 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:58.074 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:58.871 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


226) test Health Check API GET /health/detailed returns comprehensive health status (SpacecastWeb.Integration.APIIntegrationTest)
     test/spacecast_web/integration/api_integration_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/api_integration_test.exs:1: SpacecastWeb.Integration.APIIntegrationTest.__ex_unit__/2

23:40:58.993 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:59.084 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:40:59.206 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:00.013 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:00.707 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


227) test form validation validates required fields (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:51
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:01.314 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:02.580 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


228) test user creation creates user with correct attributes (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:189
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:03.080 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:03.088 [info] Backpressure status: normal (value: 0)
23:41:03.395 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:03.811 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:03.862 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:04.169 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:04.401 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:04.506 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:04.618 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


229) test form validation real-time validation on input (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:108
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:05.373 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:05.397 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:05.432 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:05.721 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:05.872 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:06.787 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


230) test registration process registration with existing email shows error (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:160
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:07.792 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:08.218 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:08.421 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:08.495 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:08.888 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


231) test security password fields are properly masked (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:245
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:09.715 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:09.842 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


232) test form validation validates password confirmation (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:89
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:11.257 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:11.279 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:11.689 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:11.908 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


233) test accessibility form has proper labels (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:262
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:13.372 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:14.284 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:14.538 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


234) test form validation validates email format (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:32
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:15.362 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:15.729 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:15.732 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:16.190 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:16.204 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:16.832 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


235) test security form has CSRF protection (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:253
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:17.953 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:41:17.953 [warning] 🟡 ALERT: Slow Response Time: Current value 1359 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1359
Threshold: 1000
Time: 2025-08-02 21:41:17.953177Z

23:41:17.953 [debug] Alert channel email is disabled or not configured
23:41:17.956 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:18.047 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:18.083 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:41:18Z]]
23:41:18.083 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.2630.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:41:18.090 [info] Backpressure status: normal (value: 0)
23:41:18.523 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:18.949 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


236) test form validation validates password length (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:70
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:19.661 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:20.214 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


237) test registration process successful registration shows success message (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:141
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:21.195 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:21.631 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:22.156 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:22.221 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:22.672 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


238) test accessibility form has proper ARIA attributes (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:272
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:22.995 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:24.052 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:24.134 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:24.218 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:24.696 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


239) test user creation password is properly hashed (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:218
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:25.499 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:25.589 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:25.743 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.126 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.165 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.178 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.210 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.425 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:26.771 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


240) test registration process successful registration redirects to login (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:122
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:27.172 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:27.518 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:27.525 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:28.506 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


241) test registration page renders registration form (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:11
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:29.409 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


242) test registration page shows login link (SpacecastWeb.UserRegistrationLiveTest)
     test/spacecast_web/live/user/user_registration_live_test.exs:23
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_registration_live_test.exs:1: SpacecastWeb.UserRegistrationLiveTest.__ex_unit__/2

23:41:31.439 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:32.102 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:32.265 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:32.811 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


243) test themes get_default_theme/0 returns the default theme (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:71
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:33.091 [info] Backpressure status: normal (value: 0)
23:41:33.298 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:33.685 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:33.794 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:33.799 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:33.820 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:33.845 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:34.069 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:34.904 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:34.969 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


244) test themes change_theme/1 returns a theme changeset (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:224
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:35.705 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:35.766 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:35.777 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:36.134 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


245) test themes create_theme/1 with invalid mode returns error changeset (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:166
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:37.083 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:37.223 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:37.285 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


246) test themes delete_theme/1 deletes the theme (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:218
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:39.220 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:39.399 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:39.652 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:39.841 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:39.851 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:39.915 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


247) test themes validate_theme/1 validates theme parameters (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:290
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:41.153 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:41.410 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:41.778 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:41.861 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:42.042 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:42.094 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:42.126 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:42.241 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


248) test themes create_theme/1 with invalid data returns error changeset (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:162
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:43.446 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:43.586 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:44.454 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:44.538 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


249) test themes get_theme_by_name/1 returns the theme with given name (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:57
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:45.271 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:45.343 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:46.057 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:46.304 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


250) test themes create_theme/1 with valid data creates a theme (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:128
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:47.219 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:47.960 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:41:47.960 [warning] 🟡 ALERT: Slow Database Queries: Current value 870 exceeds threshold 500
Metric: spacecast.repo.query.total_time
Value: 870
Threshold: 500
Time: 2025-08-02 21:41:47.960700Z

23:41:47.960 [debug] Alert channel email is disabled or not configured
23:41:48.093 [info] Backpressure status: normal (value: 0)


251) test themes update_theme/2 with invalid data returns error changeset (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:202
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:49.071 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:49.427 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:49.659 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:49.738 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:50.304 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:50.842 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


252) test themes set_default_theme/1 sets a theme as default and unsets others (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:229
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:51.165 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:51.221 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:51.417 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:51.490 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:51.528 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:51.549 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:52.535 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:52.714 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:52.715 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


253) test themes update_theme/2 with valid data updates the theme (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:181
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:53.419 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:53.574 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:54.019 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:54.364 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:54.693 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


254) test themes list_themes/0 returns all themes (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:37
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2

23:41:55.838 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:56.032 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:56.139 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:56.405 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:56.617 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


255) test themes get_theme!/1 returns the theme with given id (Spacecast.ThemeSystemTest)
     test/spacecast/theme_system_test.exs:45
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system_test.exs:1: Spacecast.ThemeSystemTest.__ex_unit__/2



256) test event visualization and monitoring user can view event timeline (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:268
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1974ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:41:59.574 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:41:59.870 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:00.085 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:00.574 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:00.900 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


257) test event-driven UI updates UI updates in real-time when events occur (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:353
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:01.270 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:01.434 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.030 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.349 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.371 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.399 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.635 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.813 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.927 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:02.942 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


258) test event subscription and notifications user can subscribe to event notifications (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:329
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:03.097 [info] Backpressure status: normal (value: 0)
23:42:03.477 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:03.605 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:03.659 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:03.984 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:04.251 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:04.539 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


259) test event generation and processing resource deletion generates events (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:215
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:05.111 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:05.174 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:05.699 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:05.847 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:06.339 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:06.656 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:06.861 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


260) test event visualization and monitoring user can filter events (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:291
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:07.400 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:07.698 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:08.877 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


261) test event error handling handles event processing errors gracefully (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:380
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:09.047 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:09.191 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:10.309 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:10.470 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:10.581 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:10.856 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


262) test event generation and processing resource creation generates events (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:91
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:11.291 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:11.603 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:12.869 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


263) test event generation and processing resource update generates events (SpacecastWeb.ResourceEventSystemWorkflowTest)
     test/spacecast_web/features/resource_event_system_workflow_test.exs:153
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_event_system_workflow_test.exs:67: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_event_system_workflow_test.exs:1: SpacecastWeb.ResourceEventSystemWorkflowTest.__ex_unit__/2

23:42:13.029 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:13.131 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:13.190 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:13.325 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:13.945 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:14.351 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:14.428 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:14.521 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


264) test Data Protection Security implements proper data sanitization (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:431
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:15.342 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:15.509 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:16.170 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:16.723 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


265) test Infrastructure Security implements secure headers (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:528
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:17.177 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:17.968 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:42:18.084 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:42:18Z]]
23:42:18.084 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.2773.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:42:18.098 [info] Backpressure status: normal (value: 0)
23:42:18.294 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


266) test API Security implements proper error handling (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:504
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:19.313 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:19.650 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:20.332 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:20.678 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


267) test Authentication Security implements proper logout functionality (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:137
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:21.359 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:21.673 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:22.263 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:22.405 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:22.568 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


268) test Security Monitoring logs security events (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:564
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:23.131 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:23.177 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:23.375 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:23.416 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:23.610 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.050 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.141 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.197 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.357 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.459 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:24.866 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


269) test Security Monitoring implements security alerts (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:622
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:25.209 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:25.372 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:25.921 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:26.213 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:26.332 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


270) test API Security implements rate limiting (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:480
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:27.680 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:27.919 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:28.391 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:28.448 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:28.874 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


271) test Input Validation Security prevents XSS attacks (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:281
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:29.641 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:29.849 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:30.044 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:30.138 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:30.428 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:30.638 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:30.659 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


272) test Authorization Security prevents privilege escalation (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:195
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:32.560 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:32.645 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:32.984 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


273) test API Security validates request headers (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:516
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:33.100 [info] Backpressure status: normal (value: 0)
23:42:34.524 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:34.739 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


274) test Infrastructure Security implements HTTPS enforcement (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:538
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:35.315 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:35.492 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:35.833 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:35.937 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:35.944 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:36.551 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:36.680 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


275) test Input Validation Security prevents SQL injection attacks (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:254
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:37.217 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:37.852 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:38.490 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


276) test Input Validation Security validates file uploads (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:334
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:39.229 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:39.739 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:40.146 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:40.637 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:40.918 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


277) test Authorization Security enforces role-based access control (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:180
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:41.455 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:41.517 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:41.688 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:42.160 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:42.209 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:42.652 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


278) test API Security validates API versioning (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:493
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:44.668 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:44.706 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


279) test Data Protection Security encrypts sensitive data (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:394
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:45.207 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:45.254 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:45.269 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:45.726 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:45.886 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:46.317 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:46.717 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:46.811 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


280) test Authentication Security prevents session hijacking (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:106
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:47.371 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:47.571 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:47.656 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:47.977 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:42:48.103 [info] Backpressure status: normal (value: 0)
23:42:48.339 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:48.481 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:48.493 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:48.503 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


281) test Input Validation Security prevents command injection (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:358
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:49.783 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:49.957 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:49.975 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:50.021 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:50.583 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:50.954 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


282) test Authentication Security prevents brute force attacks (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:156
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2



283) test Security Monitoring detects suspicious activity (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:592
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:53.079 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:53.082 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:53.193 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:53.851 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:54.212 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


284) test Authorization Security validates API permissions (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:233
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:55.008 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:55.598 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:55.818 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:56.370 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


285) test Data Protection Security prevents data leakage (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:414
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:42:57.238 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.033 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.348 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.473 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.739 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.890 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:42:58.958 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


286) test Infrastructure Security implements secure cookie settings (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:546
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:00.212 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:00.296 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:00.476 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


287) test Input Validation Security prevents CSRF attacks (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:316
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:01.312 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:01.525 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:01.795 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:01.796 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.031 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.202 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.694 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.697 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.784 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:02.919 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


288) test Authorization Security enforces resource ownership (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:213
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:03.105 [info] Backpressure status: normal (value: 0)


289) test Authentication Security prevents access to protected endpoints without authentication (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:73
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:05.732 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:05.974 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:05.981 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:06.099 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:06.115 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


290) test Data Protection Security implements secure session management (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:464
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:07.123 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:07.538 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:07.936 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:08.624 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:08.929 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


291) test Authentication Security validates session tokens properly (SpacecastWeb.Integration.SecurityIntegrationTest)
     test/spacecast_web/integration/security_integration_test.exs:88
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/security_integration_test.exs:1: SpacecastWeb.Integration.SecurityIntegrationTest.__ex_unit__/2

23:43:09.120 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:09.858 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:10.417 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


292) test theme fixtures dark_theme_fixture/1 creates a dark theme with correct defaults (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:51
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:11.147 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:11.315 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:11.390 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:11.494 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:12.143 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


293) test theme fixtures theme names are unique (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:142
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:13.059 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:13.374 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:13.631 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:13.924 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:14.263 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:14.971 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


294) test theme fixtures high_contrast_theme_fixture/1 creates an accessible theme (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:82
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:15.060 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:15.299 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:15.352 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:16.466 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:16.572 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


295) test theme fixtures custom_theme_fixture/1 allows overriding custom theme values (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:118
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:17.251 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:17.255 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:17.639 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:17.880 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:17.985 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:43:17.985 [warning] 🟡 ALERT: Slow Response Time: Current value 1723 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1723
Threshold: 1000
Time: 2025-08-02 21:43:17.985427Z

23:43:17.985 [debug] Alert channel email is disabled or not configured
23:43:18.086 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:43:18Z]]
23:43:18.086 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.2881.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:43:18.108 [info] Backpressure status: normal (value: 0)


296) test theme fixtures theme colors are properly structured (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:153
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:19.512 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.135 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.186 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.353 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.377 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.411 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:20.572 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


297) test theme fixtures dim_theme_fixture/1 creates a dim theme with correct defaults (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:72
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:21.019 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:21.392 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:22.224 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:22.433 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


298) test theme fixture interactions setting a theme as default unsets other defaults (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:179
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:23.248 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:23.630 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:23.759 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:24.027 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:24.177 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:24.285 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:24.860 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


299) test theme fixtures light_theme_fixture/1 creates a light theme with correct defaults (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:41
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:25.893 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:25.912 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:26.119 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:26.698 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:26.898 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:26.949 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


300) test theme fixtures theme settings are properly structured (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:168
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:27.237 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:28.195 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:28.352 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:28.754 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:28.853 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


301) test theme fixtures system_theme_fixture/1 creates a system theme with system values (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:62
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:29.158 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:29.297 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:29.436 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:30.590 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:30.905 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


302) test theme fixtures custom_theme_fixture/1 creates a theme with custom settings (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:104
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:31.585 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:31.824 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:32.037 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:32.227 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:32.381 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


303) test theme fixtures theme modes are validated (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:148
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:33.111 [info] Backpressure status: normal (value: 0)
23:43:33.975 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:34.379 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


304) test theme fixtures default_themes_fixture/0 creates all default themes (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:95
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:35.285 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:35.484 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:35.525 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:35.533 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:35.731 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:36.165 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:36.200 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:36.344 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:36.728 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


305) test theme fixtures theme_fixture/1 creates a basic theme with default values (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:37.503 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


306) test theme fixtures theme_fixture/1 allows overriding default values (Spacecast.ThemeSystem.FixturesTest)
     test/spacecast/theme_system/fixtures_test.exs:25
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/theme_system/fixtures_test.exs:1: Spacecast.ThemeSystem.FixturesTest.__ex_unit__/2

23:43:39.334 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:39.879 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


307) test resource relationship management user can remove relationships (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:309
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:41.087 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:42.748 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


308) test resource relationship management relationship changes trigger UI updates (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:394
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:43.606 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:43.740 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:44.318 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:44.408 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:44.635 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:44.895 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


309) test resource relationship management user cannot create circular relationships (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:269
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:45.548 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:46.373 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


310) test resource relationship management relationship constraints are enforced (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:348
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:47.364 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:47.439 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:47.642 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:47.712 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:47.994 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:43:48.113 [info] Backpressure status: normal (value: 0)
23:43:48.549 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.722 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.778 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.782 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.854 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.887 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:48.980 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


311) test resource relationship management user can create a parent-child relationship (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:76
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:49.165 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:50.040 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:50.059 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


312) test resource relationship management user can manage multiple relationships (SpacecastWeb.Features.ResourceRelationshipWorkflowTest)
     test/spacecast_web/features/resource_relationship_workflow_test.exs:123
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_relationship_workflow_test.exs:40: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/resource_relationship_workflow_test.exs:1: SpacecastWeb.Features.ResourceRelationshipWorkflowTest.__ex_unit__/2

23:43:51.045 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:51.176 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:51.494 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:52.810 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


313) test sets a theme as default (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:101
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:43:53.961 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:54.432 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


314) test handles theme mode changes (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:166
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:43:55.472 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:55.527 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:56.025 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:56.555 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:56.587 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:56.742 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


315) test updates an existing theme (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:149
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:43:57.427 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:58.052 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:58.216 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:58.369 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:58.838 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


316) test creates a new theme (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:84
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:43:59.094 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:59.132 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:59.165 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:59.548 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:59.670 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:43:59.738 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:00.444 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:00.447 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:00.699 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


317) test deletes a theme (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:128
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:44:01.073 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:01.777 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:02.027 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


318) test renders theme manager page (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:58
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:44:03.116 [info] Backpressure status: normal (value: 0)
23:44:03.876 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:03.892 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:03.979 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:04.378 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:04.525 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


319) test displays list of themes (SpacecastWeb.Themes.ThemeManagerLiveTest)
     test/spacecast_web/live/themes/theme_manager_live_test.exs:69
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_manager_live_test.exs:1: SpacecastWeb.Themes.ThemeManagerLiveTest.__ex_unit__/2

23:44:05.083 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
=== PAGE HTML AFTER SAVE ===
<html>
  <body>
    <div data-test-id="color-preview-primary">Primary Color</div>
    <div data-test-id="color-preview-secondary">Secondary Color</div>
    <div data-test-id="color-preview-accent">Accent Color</div>
    <div data-test-id="color-preview-background">Background Color</div>
    <div data-test-id="color-preview-text">Text Color</div>
    <div>Mock page content</div>

    <!-- Accessibility Section -->
    <h2>Accessibility</h2>
    <form phx-submit="save_accessibility">
      <input name="reduced_motion" type="checkbox" />
      <button type="submit">Apply</button>
    </form>

    <!-- Theme Customization Form -->
    <form phx-submit="save_colors">
      <input name="theme[primary_color_text]" value="#000000" />
      <input name="theme[secondary_color_text]" value="#FFFFFF" />
      <input name="theme[background_color_text]" value="#000000" />
      <input name="theme[text_color_text]" value="#FFFFFF" />
      <button type="submit">Save Colors</button>
    </form>
  </body>
</html>

=== END PAGE HTML ===
=== SOURCE CHECK ===
Expected elements in source: ["data-test-id=\"color-preview-primary\"", "data-test-id=\"color-preview-secondary\"", "data-test-id=\"color-preview-accent\"", "data-test-id=\"color-preview-background\"", "data-test-id=\"color-preview-text\""]
Found in source: ["data-test-id=\"color-preview-primary\"", "data-test-id=\"color-preview-secondary\"", "data-test-id=\"color-preview-accent\"", "data-test-id=\"color-preview-background\"", "data-test-id=\"color-preview-text\""]
=== END SOURCE CHECK ===
.........23:44:05.146 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
....23:44:05.698 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:05.732 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:06.073 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:06.717 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:06.848 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


320) test external API integration allows user to update resource data (SpacecastWeb.ExternalAPIIntegrationTest)
     test/spacecast_web/live/external_api_integration_test.exs:75
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1789ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/external_api_integration_test.exs:1: SpacecastWeb.ExternalAPIIntegrationTest.__ex_unit__/2

23:44:07.132 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:07.435 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:07.643 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


321) test external API integration displays data from external API when loaded (SpacecastWeb.ExternalAPIIntegrationTest)
     test/spacecast_web/live/external_api_integration_test.exs:29
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/external_api_integration_test.exs:1: SpacecastWeb.ExternalAPIIntegrationTest.__ex_unit__/2

23:44:09.366 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:10.411 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:10.517 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


322) test external API integration handles API errors gracefully (SpacecastWeb.ExternalAPIIntegrationTest)
     test/spacecast_web/live/external_api_integration_test.exs:53
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/external_api_integration_test.exs:1: SpacecastWeb.ExternalAPIIntegrationTest.__ex_unit__/2

23:44:11.016 [debug] QUERY ERROR source="users"
INSERT INTO "users" ("active","name","email","role","inserted_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "id" [true, "Test User", "testuser@example.com", "viewer", ~N[2025-08-02 21:44:11], ~N[2025-08-02 21:44:11]]


323) test placeholder test for relationship management workflow (SpacecastWeb.Features.RelationshipManagementWorkflowTest)
     test/spacecast_web/features/relationship_management_workflow_test.exs:295
     ** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3118.0>.

     When using ownership, you must manage connections in one
     of the four ways:

     * By explicitly checking out a connection
     * By explicitly allowing a spawned process
     * By running the pool in shared mode
     * By using :caller option with allowed process

     The first two options require every new process to explicitly
     check a connection out or be allowed by calling checkout or
     allow respectively.

     The third option requires a {:shared, pid} mode to be set.
     If using shared mode in tests, make sure your tests are not
     async.

     The fourth option requires [caller: pid] to be used when
     checking out a connection from the pool. The caller process
     should already be allowed on a connection.

     If you are reading this error, it means you have not done one
     of the steps above or that the owner process has crashed.

     See Ecto.Adapters.SQL.Sandbox docs for more information.
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
       (ecto 3.12.5) lib/ecto/repo/schema.ex:837: Ecto.Repo.Schema.apply/4
       (ecto 3.12.5) lib/ecto/repo/schema.ex:416: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
       test/spacecast_web/features/relationship_management_workflow_test.exs:35: SpacecastWeb.Features.RelationshipManagementWorkflowTest.__ex_unit_setup_2/1
       test/spacecast_web/features/relationship_management_workflow_test.exs:1: SpacecastWeb.Features.RelationshipManagementWorkflowTest.__ex_unit__/2

23:44:11.461 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:12.928 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


324) test form validation validates required fields (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:59
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1971ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:13.341 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:13.673 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:14.550 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


325) test security password field is properly masked (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:192
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:15.079 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.333 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.475 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.681 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.738 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.738 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:15.893 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:16.801 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:16.952 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


326) test authentication failed login shows error message (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:109
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:17.045 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:17.075 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:17.345 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:17.494 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:17.532 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:17.780 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:18.004 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:44:18.090 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:44:18Z]]
23:44:18.090 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.2993.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:44:18.119 [info] Backpressure status: normal (value: 0)


327) test session management logout clears session (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:164
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:19.212 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:19.216 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:19.811 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:20.613 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


328) test accessibility form has proper labels (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:208
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:21.449 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:22.226 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:22.627 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:22.888 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


329) test authentication successful login redirects to user page (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:90
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:23.494 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:23.983 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:24.233 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:24.396 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:24.546 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:24.677 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


330) test form validation validates email format (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:42
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:25.266 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:25.732 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:26.206 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:26.945 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


331) test accessibility form has proper ARIA attributes (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:216
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:27.709 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:28.069 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:28.098 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


332) test form validation real-time validation on input (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:76
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:29.505 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:29.661 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:29.798 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:29.918 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:30.534 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


333) test session management login creates session (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:145
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:31.981 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


334) test security form has CSRF protection (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:199
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:33.027 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:33.123 [info] Backpressure status: normal (value: 0)
23:44:33.691 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:33.927 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:33.987 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:34.049 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:34.347 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:34.502 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


335) test authentication login with non-existent email shows error (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:126
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:35.214 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:35.356 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:36.685 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:36.842 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


336) test login page renders login form (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:23
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:37.158 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:37.249 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:37.720 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:38.215 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:38.318 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:38.633 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


337) test login page shows register link (SpacecastWeb.UserSessionLiveTest)
     test/spacecast_web/live/user/user_session_live_test.exs:33
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_session_live_test.exs:1: SpacecastWeb.UserSessionLiveTest.__ex_unit__/2

23:44:39.169 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:39.418 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:39.934 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:39.959 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:39.961 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:40.297 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


338) test integration with LiveView authenticated user can access protected routes (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:295
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:41.656 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:42.398 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:42.563 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:42.697 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


339) test error handling handles database errors gracefully (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:360
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:43.147 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:43.210 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:43.296 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:43.368 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:44.183 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


340) test authentication guards mount_current_user handles missing session gracefully (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:97
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:45.464 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:46.030 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:46.185 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


341) test error handling handles expired session tokens (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:325
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:47.245 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:47.536 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:48.013 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:44:48.122 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:48.126 [info] Backpressure status: normal (value: 0)
23:44:48.157 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


342) test session management log_in_user with remember me sets cookie (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:215
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:49.919 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:49.978 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:50.180 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:50.301 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:50.528 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:50.819 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


343) test role-based access control require_admin_user allows admin users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:149
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:51.003 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:51.601 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.066 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.589 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.636 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.649 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.693 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:52.835 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


344) test session management log_in_user creates session and redirects (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:202
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:53.730 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:54.902 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:54.928 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


345) test password management update_user_password with valid data (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:246
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:55.006 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:55.143 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:56.822 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:56.885 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


346) test authentication guards redirect_if_user_is_authenticated allows unauthenticated users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:132
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:58.656 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


347) test error handling handles malformed session tokens gracefully (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:344
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:44:59.400 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:59.667 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:59.723 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:44:59.900 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:00.471 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:00.513 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


348) test integration with LiveView protected route requires authentication (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:274
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:01.026 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:02.210 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


349) test authentication guards mount_current_user assigns current user (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:81
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:03.020 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:03.129 [info] Backpressure status: normal (value: 0)
23:45:03.431 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:03.958 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:04.366 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:04.482 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


350) test password management update_user_password with invalid current password (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:259
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:05.142 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:05.367 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:06.047 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:06.656 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:06.780 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:06.866 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


351) test authentication guards redirect_if_user_is_authenticated redirects authenticated users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:112
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:07.351 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:07.358 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:07.503 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:07.824 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:08.117 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:08.815 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


352) test role-based access control require_admin_user redirects unauthenticated users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:184
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:09.301 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:10.071 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:10.276 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:10.414 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


353) test integration with LiveView admin route requires admin role (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:281
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:11.248 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:11.623 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:11.671 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:11.681 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:11.974 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:12.365 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:12.474 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:12.589 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:12.774 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


354) test session management log_out_user clears session (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:228
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:13.324 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


355) test role-based access control require_admin_user redirects non-admin users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:166
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:15.087 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:15.226 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:15.938 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:15.960 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:16.152 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


356) test authentication guards require_authenticated_user allows authenticated users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:44
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:17.093 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:18.023 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:45:18.023 [warning] 🟡 ALERT: Slow Response Time: Current value 1081 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1081
Threshold: 1000
Time: 2025-08-02 21:45:18.023148Z

23:45:18.023 [debug] Alert channel email is disabled or not configured
23:45:18.093 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:45:18Z]]
23:45:18.093 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3136.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:45:18.132 [info] Backpressure status: normal (value: 0)
23:45:18.316 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:18.895 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


357) test error handling handles invalid session tokens gracefully (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:309
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:19.194 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:20.405 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:20.532 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:20.982 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


358) test authentication guards require_authenticated_user redirects unauthenticated users (SpacecastWeb.UserAuthTest)
     test/spacecast_web/live/user/user_auth_test.exs:64
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/user/user_auth_test.exs:1: SpacecastWeb.UserAuthTest.__ex_unit__/2

23:45:21.796 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:21.858 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:22.410 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:22.917 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


359) test event sourcing functionality handles multiple commands in sequence (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:155
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:23.827 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:23.846 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:23.857 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:24.408 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:24.571 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:24.927 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


360) test event store integration events are properly stored and retrieved (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:212
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:26.359 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:26.521 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:26.657 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:26.721 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


361) test error handling handles unknown events gracefully (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:264
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:27.046 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:27.121 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:28.302 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:28.912 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


362) test event sourcing functionality rebuilds state correctly after reset (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:193
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:29.227 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:30.639 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:30.923 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


363) test event sourcing functionality rebuilds state from events (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:138
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:31.036 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:31.074 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:31.567 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:32.031 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:32.248 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:32.546 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:32.941 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


364) test event sourcing functionality handles reset command (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:176
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:33.135 [info] Backpressure status: normal (value: 0)
23:45:34.157 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


365) test error handling handles unknown commands gracefully (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:250
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:35.090 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:35.179 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:35.241 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:35.519 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


366) test event store integration multiple resources have isolated events (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:228
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:37.614 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:37.927 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:37.995 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:37.999 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:38.273 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:38.449 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:38.875 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


367) test event sourcing functionality creates resource and generates events (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:108
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:39.077 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:39.238 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:39.406 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:40.211 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:40.408 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:40.858 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


368) test event sourcing functionality handles commands and generates events (Spacecast.Events.ResourceIntegration.EventSourcedResourceTest)
     test/spacecast/events/resource_integration/event_sourced_resource_test.exs:122
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/resource_integration/event_sourced_resource_test.exs:1: Spacecast.Events.ResourceIntegration.EventSourcedResourceTest.__ex_unit__/2

23:45:41.090 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:41.194 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


369) test get_latest_snapshot/2 retrieves the _latest snapshot (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:73
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:43.790 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:43.801 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:43.805 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:43.901 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:44.247 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:44.365 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


370) test save_versioned_state/4 saves versioned state with minimal options (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:213
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:45.410 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:45.911 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:45.976 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:46.101 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:46.537 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:46.665 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:46.756 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:46.786 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


371) test count_events_since_last_snapshot/2 counts events since last snapshot (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:143
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:47.188 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:47.229 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:47.465 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:47.547 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:47.780 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:48.032 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:45:48.032 [warning] 🟡 ALERT: Slow Database Queries: Current value 658 exceeds threshold 500
Metric: spacecast.repo.query.total_time
Value: 658
Threshold: 500
Time: 2025-08-02 21:45:48.032391Z

23:45:48.032 [debug] Alert channel email is disabled or not configured
23:45:48.064 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:48.138 [info] Backpressure status: normal (value: 0)
23:45:48.593 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


372) test save_versioned_state/4 saves a valid versioned state (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:189
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:49.459 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:49.698 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:50.255 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:50.754 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:50.941 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


373) test get_snapshots/2 retrieves all snapshots in order (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:268
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:51.223 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:52.482 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


374) test get_latest_snapshot/2 rejects invalid parameters (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:104
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:53.627 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:54.599 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


375) test get_snapshots/2 rejects invalid parameters (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:291
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:55.142 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:55.276 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:55.416 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:55.853 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:56.674 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


376) test save_snapshot/4 rejects invalid parameters (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:35
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:57.324 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:57.434 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:57.610 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:58.303 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:58.466 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:58.660 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:58.686 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:45:58.778 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


377) test get_snapshots/2 returns empty list for non-existent resource (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:284
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:45:59.398 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:00.002 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:00.023 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:00.427 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


378) test get_latest_snapshot/2 returns not found for non-existent resource (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:99
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:46:01.019 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:01.335 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:02.171 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:02.599 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


379) test count_events_since_last_snapshot/2 rejects invalid parameters (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:179
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:46:03.073 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:03.142 [info] Backpressure status: normal (value: 0)
23:46:03.318 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:03.414 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:03.840 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:03.853 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:03.948 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:04.194 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:04.365 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:04.372 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:04.869 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


380) test save_versioned_state/4 rejects invalid parameters (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:229
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:46:05.323 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


381) test count_events_since_last_snapshot/2 counts all events when no snapshot exists (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:150
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:46:07.210 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:07.682 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:08.359 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:08.492 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:08.812 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:08.984 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


382) test save_snapshot/4 saves a valid snapshot (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:8
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

23:46:09.333 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:10.238 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:10.254 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:10.799 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:10.988 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


383) test save_snapshot/4 saves a snapshot with default metadata (Spacecast.Events.SnapshotOperationsTest)
     test/spacecast/events/snapshot_operations_test.exs:23
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/snapshot_operations_test.exs:1: Spacecast.Events.SnapshotOperationsTest.__ex_unit__/2

**23:46:11.011 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:11.029 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:11.377 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:11.452 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:11.568 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:12.956 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


384) test LiveView error handling handles memory pressure gracefully (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:212
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:13.017 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:13.042 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:14.018 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:14.424 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:14.673 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:14.720 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:14.824 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


385) test recovery mechanisms recovers from database connection issues (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:259
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:15.046 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:15.421 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:15.492 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:15.532 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:15.549 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:16.143 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:16.259 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:16.260 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:16.378 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


386) test recovery mechanisms recovers from authentication failures (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:231
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:17.569 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:18.042 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:46:18.096 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:46:18Z]]
23:46:18.096 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3252.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:46:18.144 [info] Backpressure status: normal (value: 0)
23:46:18.182 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:18.295 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:18.545 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:18.931 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


387) test LiveView error handling handles parameter validation errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:140
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:19.319 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:20.246 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


388) test LiveView error handling handles malformed session data (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:98
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:21.124 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:21.412 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:22.810 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


389) test LiveView error handling handles event processing errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:127
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:23.161 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:24.080 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:24.326 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:24.467 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:24.988 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


390) test LiveView error handling handles flash message errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:157
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:25.055 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:25.083 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:25.327 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:26.328 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:26.834 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:26.863 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


391) test LiveView error handling handles expired session tokens (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:85
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:27.224 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:27.425 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:27.905 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:27.981 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:28.546 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:28.613 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:28.907 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


392) test recovery mechanisms recovers from session corruption (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:249
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:29.231 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:29.570 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:30.969 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


393) test LiveView error handling handles resource loading errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:180
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:31.175 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:31.297 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:31.988 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:32.642 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


394) test LiveView error handling handles authentication errors gracefully (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:58
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:33.147 [info] Backpressure status: normal (value: 0)
23:46:33.323 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:34.256 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:34.702 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:34.810 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


395) test LiveView error handling handles navigation errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:168
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:35.176 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:35.227 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:35.500 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:36.015 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


396) test LiveView error handling handles session token validation errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:75
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:37.279 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:37.853 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:38.725 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


397) test LiveView error handling handles template rendering errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:117
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:39.466 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:39.791 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:40.013 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:40.439 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:40.583 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


398) test LiveView error handling handles concurrent access errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:198
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:41.031 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:41.456 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:41.803 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:42.171 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:42.325 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:42.521 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


399) test LiveView error handling handles CSRF token errors (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:147
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:43.226 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:43.524 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:43.671 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:43.817 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:44.008 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:44.609 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


400) test LiveView error handling handles database connection errors gracefully (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:108
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:45.745 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:45.877 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:46.337 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:46.620 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:46.704 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:46.817 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


401) test LiveView error handling handles LiveView crashes gracefully (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:36
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:47.494 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:47.832 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:47.865 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:48.050 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:46:48.151 [info] Backpressure status: normal (value: 0)
23:46:48.889 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


402) test LiveView error handling handles timeout errors gracefully (SpacecastWeb.ErrorBoundaryTest)
     test/spacecast_web/live/error_boundary_test.exs:221
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/error_boundary_test.exs:1: SpacecastWeb.ErrorBoundaryTest.__ex_unit__/2

23:46:49.133 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:49.215 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:49.299 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:49.990 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:50.776 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


403) test Theme Toggle Component renders theme toggle buttons (SpacecastWeb.Themes.ThemeToggleTest)
     test/spacecast_web/live/themes/theme_toggle_test.exs:48
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/themes/theme_toggle_test.exs:1: SpacecastWeb.Themes.ThemeToggleTest.__ex_unit__/2

23:46:51.478 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:51.785 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:51.798 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:52.613 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:52.672 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:52.695 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:52.816 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


404) test send_reminder/1 fails when event settings are missing (Spacecast.Events.ReminderDeliveryTest)
     test/spacecast/events/reminder_delivery_test.exs:64
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/reminder_delivery_test.exs:1: Spacecast.Events.ReminderDeliveryTest.__ex_unit__/2

23:46:53.186 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:53.601 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:53.861 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:54.343 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:54.742 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


405) test send_reminder/1 successfully sends a reminder (Spacecast.Events.ReminderDeliveryTest)
     test/spacecast/events/reminder_delivery_test.exs:49
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/reminder_delivery_test.exs:1: Spacecast.Events.ReminderDeliveryTest.__ex_unit__/2

23:46:55.297 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:55.443 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:55.906 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:56.039 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:56.100 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


406) test send_reminder/1 fails to send a non-pending reminder (Spacecast.Events.ReminderDeliveryTest)
     test/spacecast/events/reminder_delivery_test.exs:57
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/reminder_delivery_test.exs:1: Spacecast.Events.ReminderDeliveryTest.__ex_unit__/2

23:46:58.021 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:58.545 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:46:58.584 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


407) test get_events/1 filters events by resource_type (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:313
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:46:59.309 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:00.573 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


408) test get_events/1 sorts events by timestamp ascending (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:382
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:01.146 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:01.263 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:01.533 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:02.064 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:02.396 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:02.934 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


409) test get_events/1 limits number of events returned (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:372
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:03.081 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:03.154 [info] Backpressure status: normal (value: 0)
23:47:03.400 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:03.994 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


410) test get_events/1 handles invalid criteria gracefully (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:452
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:05.028 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:06.302 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:06.722 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


411) test get_event/1 retrieves event by ID (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:646
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:07.327 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:07.396 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:07.529 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:07.997 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:08.049 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:08.579 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


412) test store_event/1 stores event with minimal required fields (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:54
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:09.206 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:10.163 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:10.584 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


413) test get_events/1 filters events by causation_id (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:416
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:11.011 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:11.400 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:11.435 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:11.709 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:12.003 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:12.331 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:12.496 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:12.966 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


414) test get_events/1 returns empty list when no events match criteria (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:447
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:14.063 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


415) test get_events/1 filters events by multiple event_types (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:351
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:15.143 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:15.618 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:15.860 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:16.055 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:16.155 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:16.463 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


416) test store_events/1 stores multiple events in transaction (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:186
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:17.102 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:17.404 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:17.956 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:18.058 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:47:18.058 [warning] 🟡 ALERT: Slow Response Time: Current value 1301 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1301
Threshold: 1000
Time: 2025-08-02 21:47:18.058799Z

23:47:18.058 [debug] Alert channel email is disabled or not configured
23:47:18.061 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:18.099 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:47:18Z]]
23:47:18.099 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3349.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:47:18.157 [info] Backpressure status: normal (value: 0)
23:47:18.384 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


417) test store_event/2 stores event with type and data (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:115
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:19.314 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:19.696 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:19.934 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:20.670 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:20.901 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


418) test get_event/1 returns error for non-existent event (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:661
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:21.150 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:21.393 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.526 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.567 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.591 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.718 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.758 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.950 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:22.952 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


419) test get_events_for_resource/2 returns empty list for non-existent resource (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:495
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:23.456 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:23.808 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:23.905 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


420) test get_events/1 offsets events (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:377
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:25.165 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:25.172 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:25.237 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:25.254 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:25.455 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:25.673 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:26.053 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:26.116 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:26.292 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:26.446 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


421) test get_events/1 sorts events by timestamp descending (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:390
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:27.661 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


422) test get_events_for_resource_at/3 returns empty list when no events exist before timestamp (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:603
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:29.436 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:29.449 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:30.306 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:30.746 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:30.983 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


423) test store_event/2 returns error for invalid event data (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:168
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:31.549 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:31.786 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:31.838 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:32.045 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:32.898 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


424) test performance characteristics handles complex queries efficiently (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:874
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:33.045 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:33.160 [info] Backpressure status: normal (value: 0)
23:47:34.124 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:34.311 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:34.909 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


425) test store_events/1 returns error for empty list (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:244
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:35.225 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:36.124 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:36.982 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


426) test list_all_events/0 retrieves all events (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:714
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:37.186 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:37.368 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:37.536 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:38.432 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:38.709 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:38.976 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


427) test store_event/1 handles event with correlation and causation IDs (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:94
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:39.259 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:39.498 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:40.921 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


428) test edge cases and error handling handles complex nested data structures (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:773
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:41.329 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:41.500 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


429) test get_events/1 filters events by timestamp range (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:359
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:43.097 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:43.789 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:44.377 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


430) test get_events/1 retrieves all events with empty criteria (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:302
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:45.626 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:45.665 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:45.747 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:46.065 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:46.217 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:46.609 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:46.748 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


431) test store_event/1 stores a valid event (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:32
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:47.419 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:47.628 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:47.699 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:47.892 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:47.934 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:48.067 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:47:48.163 [info] Backpressure status: normal (value: 0)


432) test get_event/1 handles invalid ID format (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:666
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:49.036 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:49.665 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:49.828 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:50.620 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:50.797 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:50.930 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


433) test get_events_for_resource/2 handles invalid parameters (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:500
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:51.195 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:51.261 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:51.394 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:51.895 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:51.958 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:52.091 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:52.244 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:52.311 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


434) test edge cases and error handling handles very long resource IDs (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:758
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:53.294 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:53.704 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:53.805 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:54.445 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:54.953 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


435) test store_events/1 returns error for non-list input (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:259
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:55.004 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.032 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.508 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.777 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.826 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.846 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:55.953 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:56.666 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:56.962 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


436) test delete_event/1 handles invalid ID format (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:701
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:57.027 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:57.832 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:57.971 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


437) test get_events_for_resource_at/3 retrieves events up to specific timestamp (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:552
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:47:59.755 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:59.833 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:47:59.958 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:00.038 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:00.210 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


438) test list_all_events/0 returns empty list when no events exist (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:736
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:01.510 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:01.589 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:02.560 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


439) test get_events_for_resource/2 retrieves events for specific resource (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:488
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:03.167 [info] Backpressure status: normal (value: 0)
23:48:03.347 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:03.423 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:04.304 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:04.439 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:04.735 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:04.773 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:04.954 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


440) test edge cases and error handling handles unicode characters in data (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:798
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:05.228 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:05.565 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:05.952 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:06.925 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


441) test store_event/1 returns error for invalid event (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:70
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:07.116 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:07.377 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:07.442 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:07.465 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:08.201 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:08.395 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


442) test edge cases and error handling handles concurrent event storage (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:817
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:09.482 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:10.664 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


443) test get_events_for_resource_at/3 handles invalid parameters (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:619
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:11.365 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:11.485 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:11.918 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:11.979 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:12.000 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:12.674 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:12.811 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


444) test get_events/1 combines multiple filters (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:434
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:13.546 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:13.826 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:13.872 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:14.371 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:14.859 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


445) test edge cases and error handling handles database connection errors gracefully (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:841
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:15.298 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:15.391 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:15.729 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:15.914 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:16.104 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:16.105 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:16.347 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:16.888 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


446) test store_event/2 returns error for invalid event type (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:149
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:17.432 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:18.022 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:18.024 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:18.044 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:18.076 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:48:18.102 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:48:18Z]]
23:48:18.102 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3456.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:48:18.169 [info] Backpressure status: normal (value: 0)
23:48:18.228 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


447) test get_events/1 filters events by resource_id (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:307
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:19.827 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:20.228 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:20.707 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


448) test get_events/1 filters events by correlation_id (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:398
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:22.298 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:22.961 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


449) test performance characteristics handles large number of events efficiently (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:849
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:23.309 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


450) test store_events/1 rolls back transaction if any event is invalid (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:210
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:24.996 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:25.463 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:25.679 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:26.403 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


451) test store_event/2 stores event with type, data, and resource fields (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:129
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:27.429 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:28.303 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:28.390 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:28.439 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:28.580 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:28.768 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


452) test start_link/1 starts the EventStore process (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:29.105 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:29.287 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:29.761 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:29.860 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:30.968 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


453) test get_events/1 filters events by event_type (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:345
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:32.234 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:32.270 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:32.290 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


454) test delete_event/1 deletes existing event (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:679
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:33.049 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:33.172 [info] Backpressure status: normal (value: 0)
23:48:33.331 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:33.607 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:33.639 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:33.656 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:34.470 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:34.637 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:34.736 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:34.784 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


455) test start_link/1 returns child_spec for supervisor (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:21
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:35.067 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:35.236 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:35.988 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


456) test delete_event/1 returns error for non-existent event (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:696
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:37.617 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:37.698 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:38.057 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:38.269 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:38.396 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:38.957 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


457) test edge cases and error handling handles very long event types (Spacecast.Events.Core.EventStoreTest)
     test/spacecast/events/core/event_store_test.exs:743
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_store_test.exs:1: Spacecast.Events.Core.EventStoreTest.__ex_unit__/2

23:48:39.031 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:39.655 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:39.892 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:40.328 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:40.366 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


458) test Event Handlers processes events through handlers (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:250
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:41.078 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:41.775 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:41.825 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:42.966 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


459) test Event Store Integration retrieves events with filtering (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:463
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:43.271 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:43.597 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:43.601 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:43.692 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:43.788 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


460) test Event Projections updates projections when events occur (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:345
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:45.629 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:45.663 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:46.225 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:46.848 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


461) test Event Store Integration stores events persistently (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:431
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:47.145 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:47.829 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:48.085 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:48:48.175 [info] Backpressure status: normal (value: 0)
23:48:48.936 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


462) test Event Bus Performance handles high event throughput (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:530
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:49.903 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:49.978 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:50.112 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:50.343 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


463) test Event Handlers processes events in correct order (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:297
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:50.999 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:51.875 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:52.217 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:52.646 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:52.659 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


464) test Event-Driven Testing supports event replay for testing (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:630
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:53.098 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:53.126 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:54.739 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


465) test Event Sourcing handles event versioning and optimistic concurrency (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:197
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:55.783 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:55.884 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:55.989 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:56.294 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:56.353 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:56.834 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


466) test Event Bus Performance maintains event ordering under load (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:576
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:57.246 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:57.306 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:57.757 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:57.925 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:58.027 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:58.587 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:58.772 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:58.972 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


467) test Event Handlers handles event processing errors gracefully (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:275
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:48:59.091 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:59.392 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:48:59.429 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:00.228 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:00.231 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


468) test Event-Driven Notifications implements event-driven notifications (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:407
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:01.208 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:01.298 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:01.841 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:02.489 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


469) test Event-Driven Testing supports event snapshotting (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:674
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:03.146 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:03.178 [info] Backpressure status: normal (value: 0)
23:49:03.195 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:03.202 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:03.334 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:03.353 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:03.634 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:04.325 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


470) test Event Store Integration handles event store failures gracefully (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:507
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:05.068 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:05.594 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:05.989 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:06.031 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:06.301 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:06.787 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:06.938 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


471) test Event Projections rebuilds projections from event store (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:372
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:07.761 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


472) test Event Sourcing creates events for resource operations (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:108
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:09.146 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:09.395 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:09.603 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:09.709 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:09.808 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:09.919 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:10.119 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:10.216 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:10.657 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


473) test Event Sourcing rebuilds state from event stream (SpacecastWeb.Integration.EventDrivenIntegrationTest)
     test/spacecast_web/integration/event_driven_integration_test.exs:146
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/event_driven_integration_test.exs:1: SpacecastWeb.Integration.EventDrivenIntegrationTest.__ex_unit__/2

23:49:11.621 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:12.173 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:12.245 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:12.579 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:12.692 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


474) test Presence and User Tracking handles user disconnection gracefully (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:342
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:13.014 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:13.466 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:13.544 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:13.891 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:13.976 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


475) test Real-time Error Handling handles event processing errors gracefully (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:514
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:15.505 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:15.630 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:15.749 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:16.466 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:16.787 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


476) test Real-time Performance handles high-frequency updates efficiently (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:445
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:16.992 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:17.591 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:17.684 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:18.096 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:49:18.105 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:49:18Z]]
23:49:18.105 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3542.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:49:18.181 [info] Backpressure status: normal (value: 0)
23:49:18.740 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


477) test PubSub Event Broadcasting broadcasts resource creation events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:118
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:19.279 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:19.475 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:19.729 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:20.014 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


478) test Real-time Security validates user permissions for real-time updates (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:565
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:21.185 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:21.586 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:21.912 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:22.059 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:22.951 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


479) test Real-time Security validates real-time message authenticity (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:586
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:24.006 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:24.039 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:24.305 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:24.526 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


480) test Event Bus Integration handles multiple event types (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:367
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:25.121 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:25.260 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:26.826 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:26.988 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


481) test LiveView Real-time Updates handles multiple concurrent updates (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:231
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:27.177 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:28.154 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:28.281 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:28.596 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


482) test PubSub Event Broadcasting broadcasts custom events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:160
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:29.019 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:29.317 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:30.033 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:30.184 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:30.694 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


483) test Real-time Performance maintains responsiveness under load (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:475
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:31.112 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:31.861 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:31.873 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:31.939 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:32.259 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:32.360 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:32.501 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:32.613 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:32.911 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


484) test Real-time Error Handling handles WebSocket connection errors (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:531
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:32.993 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:33.185 [info] Backpressure status: normal (value: 0)
23:49:34.429 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:34.508 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:34.537 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:34.696 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:34.808 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


485) test LiveView Real-time Updates updates UI in real-time when resource is deleted (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:215
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:35.062 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:35.622 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:36.266 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:36.591 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:36.982 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


486) test Event-Driven Notifications handles notification dismissal (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:281
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:38.454 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


487) test PubSub Event Broadcasting broadcasts resource deletion events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:149
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:39.234 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:39.247 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:39.409 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:39.733 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:40.011 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:40.651 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


488) test Event Bus Integration unsubscribes from event bus (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:423
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:41.677 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:41.701 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:41.707 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:42.138 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:42.261 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:42.487 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:42.527 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


489) test Presence and User Tracking tracks user presence in real-time (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:328
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:43.654 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:43.692 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:43.882 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:44.613 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


490) test WebSocket Connection reconnects after connection loss (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:104
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:45.178 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:46.153 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:46.257 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:46.378 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:46.779 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


491) test Event-Driven Notifications displays different notification types (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:303
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:47.201 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:48.099 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:49:48.189 [info] Backpressure status: normal (value: 0)
23:49:48.350 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:48.537 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


492) test PubSub Event Broadcasting broadcasts resource update events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:135
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:49.646 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:49.989 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:50.575 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:50.833 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


493) test Real-time Security prevents unauthorized event subscriptions (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:577
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:51.680 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:52.460 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:52.591 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:52.811 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:52.840 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


494) test LiveView Real-time Updates updates UI in real-time when resource is updated (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:196
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:53.071 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:53.091 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:53.126 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:53.564 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:53.831 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:53.890 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:54.368 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:54.549 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


495) test Presence and User Tracking broadcasts presence updates to other users (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:335
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:55.350 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:55.745 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:56.060 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:56.233 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:56.867 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


496) test Real-time Error Handling recovers from temporary service failures (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:542
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:57.355 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:57.477 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:57.861 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:58.290 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:58.328 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:58.568 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


497) test Event-Driven Notifications displays real-time notifications for resource events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:262
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:49:59.106 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:59.529 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:49:59.827 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:00.215 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:00.838 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


498) test LiveView Real-time Updates updates UI in real-time when resource is created (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:174
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:50:01.349 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:01.667 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:02.950 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


499) test WebSocket Connection establishes WebSocket connection successfully (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:67
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:50:03.190 [info] Backpressure status: normal (value: 0)
23:50:03.253 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:04.399 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


500) test Event Bus Integration subscribes to event bus and receives events (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:351
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:50:05.863 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:06.245 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:06.804 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


501) test WebSocket Connection handles WebSocket disconnection gracefully (SpacecastWeb.Integration.RealtimeIntegrationTest)
     test/spacecast_web/integration/realtime_integration_test.exs:76
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/realtime_integration_test.exs:1: SpacecastWeb.Integration.RealtimeIntegrationTest.__ex_unit__/2

23:50:07.273 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:07.923 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:08.358 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:08.373 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:08.401 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


502) test logout clears session and redirects (SpacecastWeb.UserSessionControllerTest)
     test/spacecast_web/controllers/user_session_controller_test.exs:32
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/user_session_controller_test.exs:1: SpacecastWeb.UserSessionControllerTest.__ex_unit__/2

23:50:09.782 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:10.223 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


503) test successful login sets session and redirects (SpacecastWeb.UserSessionControllerTest)
     test/spacecast_web/controllers/user_session_controller_test.exs:18
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/user_session_controller_test.exs:1: SpacecastWeb.UserSessionControllerTest.__ex_unit__/2

23:50:11.060 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:11.425 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:11.672 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:12.507 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:12.980 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


504) test failed login shows error and redirects to login (SpacecastWeb.UserSessionControllerTest)
     test/spacecast_web/controllers/user_session_controller_test.exs:25
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/user_session_controller_test.exs:1: SpacecastWeb.UserSessionControllerTest.__ex_unit__/2

23:50:13.163 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:13.257 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:14.129 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:14.314 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:14.456 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:14.460 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:14.659 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


505) test post resource event sourcing rebuilds post state from events (Spacecast.Resources.PostResourceTest)
     test/spacecast/resources/models/post_resource_test.exs:83
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/post_resource_test.exs:1: Spacecast.Resources.PostResourceTest.__ex_unit__/2

23:50:16.552 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.636 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.640 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.645 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.670 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.710 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:16.961 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


506) test post resource event sourcing deletes post and generates deleted event (Spacecast.Resources.PostResourceTest)
     test/spacecast/resources/models/post_resource_test.exs:62
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/post_resource_test.exs:1: Spacecast.Resources.PostResourceTest.__ex_unit__/2

23:50:17.894 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:18.019 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:18.078 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:18.108 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:50:18Z]]
23:50:18.109 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:50:18.109 [warning] 🟡 ALERT: Slow Response Time: Current value 1700 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1700
Threshold: 1000
Time: 2025-08-02 21:50:18.109650Z

23:50:18.108 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3651.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:50:18.109 [debug] Alert channel email is disabled or not configured
23:50:18.110 [warning] 🟡 ALERT: Slow Database Queries: Current value 506 exceeds threshold 500
Metric: spacecast.repo.query.total_time
Value: 506
Threshold: 500
Time: 2025-08-02 21:50:18.110236Z

23:50:18.110 [debug] Alert channel email is disabled or not configured
23:50:18.191 [info] Backpressure status: normal (value: 0)
23:50:18.387 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


507) test post resource event sourcing creates post and generates created event (Spacecast.Resources.PostResourceTest)
     test/spacecast/resources/models/post_resource_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/post_resource_test.exs:1: Spacecast.Resources.PostResourceTest.__ex_unit__/2

23:50:19.051 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:19.513 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:19.522 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:19.798 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:20.486 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:20.599 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:20.719 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


508) test post resource event sourcing updates post and generates updated event (Spacecast.Resources.PostResourceTest)
     test/spacecast/resources/models/post_resource_test.exs:39
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/post_resource_test.exs:1: Spacecast.Resources.PostResourceTest.__ex_unit__/2

23:50:21.086 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:21.399 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:21.575 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:22.548 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


509) test publish_event/1 publishes valid event (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:242
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:23.913 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:24.433 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:24.769 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


510) test count_events/1 counts events with criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:361
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:25.200 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:26.563 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:26.672 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:26.840 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:26.916 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


511) test event_stream/1 creates event stream with criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:310
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:28.247 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:28.254 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:28.314 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:28.609 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


512) test transform_event/2 transforms event payload successfully (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:440
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:29.865 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:29.961 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:30.038 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:30.435 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:30.803 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


513) test store_event/2 returns error for invalid parameters (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:66
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:30.991 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:31.588 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:31.843 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:31.934 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:32.763 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:32.763 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


514) test purge_events/1 refuses to purge without criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:409
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:33.076 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:33.195 [info] Backpressure status: normal (value: 0)
23:50:33.530 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:33.821 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:34.662 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:34.779 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


515) test create_event/3 creates event with default metadata (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:428
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:35.135 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:35.206 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:35.425 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:36.050 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:36.361 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:36.438 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:36.619 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


516) test store_and_publish_event/1 stores and publishes event successfully (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:262
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:37.025 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:37.422 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:37.921 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:38.131 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:38.388 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:38.740 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


517) test get_event/1 returns not found for non-existent ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:166
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:39.218 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:40.047 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:40.071 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:40.594 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


518) test store_events/1 returns error for invalid events (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:103
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:41.488 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:41.488 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:42.097 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


519) test merge_events/1 merges multiple events successfully (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:468
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:44.654 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


520) test event_stream/1 creates event stream without criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:323
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:44.997 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:45.550 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:45.603 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:46.253 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:46.985 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


521) test count_events/1 counts all events without criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:367
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:47.203 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:47.617 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:47.785 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:48.113 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:50:48.196 [info] Backpressure status: normal (value: 0)
23:50:48.399 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:48.817 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


522) test get_event/1 retrieves event by valid ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:151
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:49.475 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:49.656 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:49.788 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:50.123 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


523) test list_events/0 lists all events (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:177
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:51.288 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:51.924 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:52.625 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:52.860 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


524) test store_events/1 returns error for empty event list (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:99
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:53.064 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:53.160 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:53.553 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:54.153 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:54.160 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:54.459 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


525) test store_and_publish_event/1 returns error for invalid event (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:277
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:55.037 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:55.083 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:55.360 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:55.361 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:55.705 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:56.174 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:56.731 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:56.872 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:56.887 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


526) test delete_event/1 returns not found for non-existent ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:231
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:57.522 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:58.141 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:58.431 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:58.922 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


527) test store_event/2 stores event with type and data successfully (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:53
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:50:59.371 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:50:59.979 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:00.045 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


528) test merge_events/1 returns error for empty events list (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:489
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:02.321 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:02.543 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


529) test delete_event/1 deletes event by valid ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:213
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:03.056 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:03.198 [info] Backpressure status: normal (value: 0)
23:51:03.209 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:03.915 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:04.020 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:04.064 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:04.880 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


530) test merge_events/1 returns error for invalid events (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:493
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:05.152 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:05.319 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:05.531 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.033 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.187 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.402 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.435 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.442 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:06.746 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


531) test transform_event/2 returns error for invalid event (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:457
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:07.131 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:08.625 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


532) test store_events/1 stores multiple events in transaction (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:74
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:09.056 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:09.310 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:09.318 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:09.367 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:09.746 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:10.360 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


533) test create_event/3 creates event with type, payload, and metadata (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:415
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:11.411 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:11.504 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:11.907 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:11.972 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:12.642 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:12.876 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


534) test get_events/1 returns error for invalid criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:144
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:14.060 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:14.443 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


535) test delete_event/1 returns error for invalid ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:235
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:15.104 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:15.163 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:15.290 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:15.626 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:16.075 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:16.677 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:16.724 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


536) test purge_events/1 purges events with valid criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:400
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:17.526 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:18.111 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:51:18Z]]
23:51:18.111 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3768.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:51:18.121 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:51:18.202 [info] Backpressure status: normal (value: 0)
23:51:18.579 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


537) test get_event/1 returns error for invalid ID (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:170
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:19.403 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:20.324 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:20.538 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:20.553 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


538) test get_events/1 retrieves events with valid criteria (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:136
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:21.376 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:21.705 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:22.164 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:22.207 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:22.276 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:22.750 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


539) test store_event/1 stores a valid event successfully (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:31
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:23.514 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:23.984 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:24.484 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:24.689 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:24.895 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


540) test publish_event/1 returns error for invalid event (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:255
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:25.338 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:26.253 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:26.909 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


541) test store_event/1 returns error for invalid event (Spacecast.Events.EventOperationsTest)
     test/spacecast/events/event_operations_test.exs:46
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_operations_test.exs:1: Spacecast.Events.EventOperationsTest.__ex_unit__/2

23:51:27.048 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:27.143 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:27.558 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:27.955 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:28.008 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:28.140 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:28.249 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


542) test example user resource event sourcing rebuilds example user state from events (Spacecast.Resources.ExampleUserResourceTest)
     test/spacecast/resources/models/example_user_resource_test.exs:90
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/example_user_resource_test.exs:1: Spacecast.Resources.ExampleUserResourceTest.__ex_unit__/2

23:51:29.444 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:29.473 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:30.650 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


543) test example user resource event sourcing deletes example user and generates deleted event (Spacecast.Resources.ExampleUserResourceTest)
     test/spacecast/resources/models/example_user_resource_test.exs:66
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/example_user_resource_test.exs:1: Spacecast.Resources.ExampleUserResourceTest.__ex_unit__/2

23:51:31.039 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:31.263 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


544) test example user resource event sourcing creates example user and generates created event (Spacecast.Resources.ExampleUserResourceTest)
     test/spacecast/resources/models/example_user_resource_test.exs:15
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/example_user_resource_test.exs:1: Spacecast.Resources.ExampleUserResourceTest.__ex_unit__/2

23:51:33.000 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:33.007 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:33.063 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:33.205 [info] Backpressure status: normal (value: 0)
23:51:33.638 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:33.720 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:34.862 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:34.865 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


545) test example user resource event sourcing updates example user and generates updated event (Spacecast.Resources.ExampleUserResourceTest)
     test/spacecast/resources/models/example_user_resource_test.exs:41
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/resources/models/example_user_resource_test.exs:1: Spacecast.Resources.ExampleUserResourceTest.__ex_unit__/2

23:51:35.086 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:35.283 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:35.541 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:36.508 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:36.617 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


546) test mono_grid_cell/1 renders a cell with correct positioning (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:69
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:37.276 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:37.406 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:37.535 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:37.670 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:38.445 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


547) test grid with cells renders a complete grid with cells (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:128
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:40.943 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


548) test mono_grid_cell/1 renders a cell with alignment (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:107
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:41.215 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:41.566 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:41.605 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:41.943 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:42.331 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:42.590 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:42.739 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:42.818 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:42.891 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


549) test mono_grid/1 renders a grid with debug mode (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:47
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:43.065 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:43.544 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:43.991 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:44.028 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:44.222 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


550) test mono_grid_cell/1 renders a cell with content (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:88
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:45.585 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:46.060 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:46.078 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


551) test mono_grid/1 renders a basic grid (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:7
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:47.475 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:47.886 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:47.887 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:48.132 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:51:48.208 [info] Backpressure status: normal (value: 0)
23:51:48.432 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:48.514 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:48.906 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


552) test mono_grid/1 renders a grid with borders (SpacecastWeb.Components.MonoGridTest)
     test/spacecast_web/components/mono_grid_test.exs:27
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/components/mono_grid_test.exs:1: SpacecastWeb.Components.MonoGridTest.__ex_unit__/2

23:51:49.653 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:49.834 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:50.276 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:50.901 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:50.983 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


553) test user updates fails to update with invalid role (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:199
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:51:50.991 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:51.047 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:51.395 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:51.757 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:52.058 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:52.547 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:52.570 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


554) test user queries lists all users (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:258
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:51:53.279 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:53.281 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:53.432 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:53.492 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:53.900 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:54.074 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:54.167 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


555) test user queries gets user by id returns nil for non-existent user (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:250
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:51:55.333 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:56.032 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


556) test user management fails to create user with invalid role (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:46
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:51:57.531 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:58.191 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:58.382 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:58.724 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


557) test authorization can check if user is admin (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:295
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:51:59.235 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:59.292 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:51:59.293 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:00.051 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:00.439 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


558) test user updates fails password change with wrong current password (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:215
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:01.022 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:01.327 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:01.537 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:01.958 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:02.028 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:02.420 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:02.704 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


559) test session management generates session token (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:150
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:03.190 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:03.210 [info] Backpressure status: normal (value: 0)
23:52:03.782 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:04.103 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:04.353 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:04.477 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:04.592 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


560) test user registration fails registration with mismatched passwords (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:86
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:05.552 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:06.008 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:06.711 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


561) test user queries gets user by email (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:254
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:07.330 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:08.452 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:08.733 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


562) test authorization admin user has admin role (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:287
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:09.057 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:09.562 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:09.726 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:10.336 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:10.882 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


563) test user authentication fails authentication with non-existent email (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:129
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:11.850 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:11.929 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:12.019 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:12.150 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:12.523 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:12.705 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


564) test session management returns nil for invalid session token (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:162
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:13.003 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:13.369 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:14.024 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


565) test user registration registers a user successfully (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:72
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:15.165 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:15.304 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:15.632 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:16.454 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:16.468 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:16.668 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


566) test user queries gets user by id (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:246
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:17.439 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:17.827 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:18.113 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:52:18Z]]
23:52:18.113 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3855.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:52:18.141 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:52:18.141 [warning] 🟡 ALERT: Slow Response Time: Current value 1774 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1774
Threshold: 1000
Time: 2025-08-02 21:52:18.141179Z

23:52:18.141 [debug] Alert channel email is disabled or not configured
23:52:18.213 [info] Backpressure status: normal (value: 0)
23:52:18.726 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:18.728 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:18.748 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:18.926 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


567) test user updates updates user profile (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:187
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:19.039 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:19.203 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:20.847 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:20.972 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


568) test user management fails to create user with short password (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:35
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:21.823 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:21.866 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:21.889 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:21.971 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:22.701 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:22.882 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


569) test session management deletes session token (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:166
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:23.694 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:24.070 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:24.498 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:24.669 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


570) test user management fails to create user with duplicate email (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:58
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:25.229 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:25.254 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:25.719 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:25.885 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:26.777 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


571) test user authentication fails authentication with wrong password (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:121
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:27.335 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:27.817 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:27.819 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:28.091 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


572) test user updates updates user preferences (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:193
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:29.074 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:29.254 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:29.425 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:30.141 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


573) test authorization regular user has user role (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:291
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:31.226 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:31.313 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:31.448 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:31.650 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:31.844 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:31.996 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:32.767 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


574) test session management gets user by session token (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:156
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:33.186 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:33.216 [info] Backpressure status: normal (value: 0)
23:52:33.820 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:34.783 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:34.883 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


575) test user authentication authenticates user with correct credentials (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:111
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:35.122 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:35.572 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:35.605 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:36.151 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


576) test user management creates a user successfully (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:8
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:37.741 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:38.207 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:38.605 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:38.975 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


577) test user updates changes user password (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:205
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:39.764 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:39.957 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:39.980 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:40.064 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


578) test user management fails to create user with invalid email (Spacecast.AccountsTest)
     test/spacecast/accounts/accounts_test.exs:24
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/accounts/accounts_test.exs:1: Spacecast.AccountsTest.__ex_unit__/2

23:52:41.006 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:41.282 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:41.407 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:41.710 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:42.172 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:42.278 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:42.490 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


579) test public API get_versioned_state/1 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:109
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:43.155 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:43.855 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:44.168 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:44.892 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


580) test public API update_replay_session_status/3 returns ok (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:125
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:45.354 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:45.564 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:45.811 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:46.569 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


581) test public API list_all_events/0 returns events (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:39
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:47.080 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:47.227 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:47.831 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:48.146 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:52:48.218 [info] Backpressure status: normal (value: 0)
23:52:48.640 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


582) test public API list_versioned_states/2 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:117
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:49.965 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:50.492 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:50.499 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:50.786 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:50.891 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:50.929 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


583) test public API get_snapshot/1 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:81
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:51.166 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:51.390 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:51.895 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:52.083 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:52.601 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:52.741 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


584) test public API create_replay_session/4 and get_replay_session/1 (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:61
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:52.996 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:53.380 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:53.706 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:54.035 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


585) test public API get_latest_snapshot/2 returns error for non-existent resource (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:77
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:55.169 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:55.382 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:55.721 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:56.190 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:56.250 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:56.404 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


586) test public API get_snapshots/2 returns snapshots (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:90
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:57.742 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


587) test public API get_events_for_resource_at/3 returns events up to timestamp (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:51
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:52:59.256 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:59.463 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:59.608 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:59.668 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:52:59.962 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:00.470 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:00.705 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


588) test public API delete_versioned_state/1 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:121
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:01.014 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:01.131 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:01.176 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:01.382 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:01.568 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:02.713 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


589) test public API save_snapshot/4 returns ok or error (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:99
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:03.221 [info] Backpressure status: normal (value: 0)
23:53:03.853 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:04.951 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


590) test public API delete_event/1 returns error for non-existent event (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:35
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:05.062 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:05.115 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:05.389 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:06.401 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


591) test public API delete_snapshot/1 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:95
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:07.152 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:07.226 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:07.324 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:07.902 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:08.105 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:08.187 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:08.493 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


592) test public API get_events_for_resource/2 returns events for resource (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:45
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:09.040 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:09.430 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:09.717 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:10.621 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


593) test public API complete_replay_session/2 returns error for invalid params (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:73
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:11.296 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:11.327 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:11.390 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:11.799 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:12.770 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:12.794 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


594) test public API save_versioned_state/4 returns ok or error (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:104
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:13.633 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:14.111 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:14.802 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


595) test public API list_snapshots/2 returns snapshots (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:85
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:15.284 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:15.773 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:16.206 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:16.422 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:16.588 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:16.916 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


596) test public API list_replay_sessions/0 returns sessions (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:68
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:17.316 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:17.674 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:18.028 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:18.115 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:53:18Z]]
23:53:18.116 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.3954.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:53:18.131 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:18.155 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:53:18.155 [warning] 🟡 ALERT: Slow Database Queries: Current value 566 exceeds threshold 500
Metric: spacecast.repo.query.total_time
Value: 566
Threshold: 500
Time: 2025-08-02 21:53:18.155448Z

23:53:18.155 [debug] Alert channel email is disabled or not configured
23:53:18.225 [info] Backpressure status: normal (value: 0)
23:53:18.274 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:18.425 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:18.597 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


597) test public API store_event/1 and get_event/1 roundtrip (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:9
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:19.325 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:20.145 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:20.602 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:20.866 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


598) test public API get_latest_versioned_state/2 returns not_implemented (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:113
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:21.804 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:22.196 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:22.563 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:22.768 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


599) test public API store_event/2 and get_events/1 (Spacecast.Events.EventStoreTest)
     test/spacecast/events/event_store_test.exs:28
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/event_store_test.exs:1: Spacecast.Events.EventStoreTest.__ex_unit__/2

23:53:23.724 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


600) test Performance Optimization implements caching for frequently accessed data (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:589
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:25.223 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:26.041 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:26.912 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


601) test Load Testing Scenarios handles peak load scenarios (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:691
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:27.132 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:27.259 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:27.434 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:27.556 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:28.667 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:28.880 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:28.900 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


602) test Response Time Performance event processing maintains performance under load (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:161
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:29.203 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:29.625 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:29.881 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:29.897 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:30.660 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:30.878 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:30.890 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


603) test Performance Optimization implements connection pooling (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:625
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:31.187 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:31.828 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:32.059 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:32.217 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


604) test Scalability Testing scales horizontally with multiple processes (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:404
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:33.229 [info] Backpressure status: normal (value: 0)
23:53:33.487 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:34.161 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:34.276 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:34.347 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:34.438 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:34.653 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


605) test Throughput Performance handles concurrent LiveView connections (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:278
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:35.022 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:35.619 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:35.774 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:35.816 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:36.236 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:36.959 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


606) test Load Testing Scenarios maintains performance during background tasks (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:727
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:37.235 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:37.415 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:38.155 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:38.171 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:38.423 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:38.766 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


607) test Memory Usage Performance handles large data sets efficiently (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:361
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:39.001 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:39.768 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:40.093 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


608) test Scalability Testing handles connection pool scaling (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:480
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:41.127 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.261 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.373 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.535 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.542 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.548 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.599 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:41.906 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:42.006 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:42.173 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:42.521 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


609) test Throughput Performance handles concurrent resource creation (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:245
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:43.036 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


610) test Load Testing Scenarios simulates realistic user load (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:658
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:45.377 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:46.152 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:46.478 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:46.850 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:46.936 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:46.970 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


611) test Performance Monitoring detects performance degradation (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:542
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:48.168 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:53:48.232 [info] Backpressure status: normal (value: 0)
23:53:48.970 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


612) test Response Time Performance database queries perform efficiently (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:122
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:49.257 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:49.904 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:50.066 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:50.136 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:50.893 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:50.940 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:50.969 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


613) test Performance Monitoring tracks performance metrics (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:518
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:51.426 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:51.696 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:52.497 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:52.967 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


614) test Throughput Performance handles high request throughput (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:216
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:53.030 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:54.296 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:54.460 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:54.528 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:54.694 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:54.825 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


615) test Memory Usage Performance garbage collection works efficiently (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:334
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:55.847 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:55.996 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


616) test Performance Monitoring generates performance reports (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:562
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:53:57.107 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:57.568 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:58.043 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:58.345 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:58.381 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:53:58.783 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


617) test Scalability Testing maintains performance with increasing data size (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:440
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:54:00.150 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:00.394 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:00.584 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


618) test Memory Usage Performance memory usage remains stable under load (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:312
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:54:01.035 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:01.050 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:01.182 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:01.563 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


619) test Response Time Performance API endpoints respond within acceptable time limits (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:89
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:54:03.153 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:03.174 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:03.183 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:03.235 [info] Backpressure status: normal (value: 0)
23:54:03.456 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:03.608 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


620) test Performance Optimization implements database query optimization (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:605
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

23:54:05.799 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:06.044 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:06.688 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:06.913 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


621) test Response Time Performance LiveView pages load within acceptable time limits (SpacecastWeb.Integration.PerformanceIntegrationTest)
     test/spacecast_web/integration/performance_integration_test.exs:111
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/performance_integration_test.exs:1: SpacecastWeb.Integration.PerformanceIntegrationTest.__ex_unit__/2

*****23:54:07.135 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:07.403 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:07.419 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:08.111 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:08.339 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:08.538 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


622) test resource relationship management resource list updates reflect relationships (SpacecastWeb.ResourceRelationshipLiveTest)
     test/spacecast_web/live/resource_relationship_live_test.exs:156
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_relationship_live_test.exs:22: SpacecastWeb.ResourceRelationshipLiveTest.__ex_unit__/2

23:54:09.293 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:09.342 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:09.535 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:09.720 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:10.006 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:10.009 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:10.673 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:10.714 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


623) test resource relationship management dashboard displays resources correctly (SpacecastWeb.ResourceRelationshipLiveTest)
     test/spacecast_web/live/resource_relationship_live_test.exs:96
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/resource_relationship_live_test.exs:22: SpacecastWeb.ResourceRelationshipLiveTest.__ex_unit__/2

23:54:11.330 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:11.471 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:12.069 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:12.513 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


624) test create/2 rejects invalid data (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:41
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:13.201 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:13.269 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:13.399 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:13.575 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


625) test changeset/2 rejects invalid attributes (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:119
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:15.831 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:15.985 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:16.206 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:16.429 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:16.910 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


626) test create!/2 creates a valid event (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:61
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:17.177 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:18.118 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:54:18Z]]
23:54:18.118 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.4041.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:54:18.175 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:54:18.175 [warning] 🟡 ALERT: Slow Response Time: Current value 1778 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1778
Threshold: 1000
Time: 2025-08-02 21:54:18.175542Z

23:54:18.175 [debug] Alert channel email is disabled or not configured
23:54:18.238 [info] Backpressure status: normal (value: 0)
23:54:18.494 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:18.898 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


627) test changeset/2 creates a valid changeset (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:106
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:19.774 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.190 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.312 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.444 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.485 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.914 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:20.948 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


628) test changeset/2 requires resource_id (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:137
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:21.346 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:22.450 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:22.456 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


629) test create/2 rejects invalid timestamp (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:53
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:23.080 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:23.874 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:24.297 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:24.759 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:24.817 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


630) test create/2 rejects invalid attributes (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:35
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:25.109 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:25.603 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:25.681 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:25.705 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:25.987 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:26.413 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


631) test changeset/2 requires resource_type (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:149
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:27.397 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:27.593 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:27.788 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:28.006 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:28.209 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:28.358 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:28.629 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


632) test create/2 rejects invalid metadata (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:47
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:29.047 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


633) test create!/2 raises on invalid attributes (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:94
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:31.372 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:31.759 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:31.860 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:32.782 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:32.893 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


634) test changeset/2 requires type (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:125
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:33.241 [info] Backpressure status: normal (value: 0)
23:54:33.284 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:33.499 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:33.820 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:34.779 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


635) test create!/2 raises on invalid event type (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:80
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:35.406 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:35.868 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:36.137 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:36.166 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:36.466 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:36.960 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


636) test create/2 creates a valid event (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:7
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:37.997 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:38.480 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:38.717 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:38.888 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:38.900 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


637) test create/2 rejects invalid event type (Spacecast.Events.Core.EventTest)
     test/spacecast/events/core/event_test.exs:28
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_test.exs:1: Spacecast.Events.Core.EventTest.__ex_unit__/2

23:54:39.406 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:39.522 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:39.525 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:40.153 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:40.754 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:40.942 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


638) test successful registration creates user, logs in, and redirects (SpacecastWeb.UserRegistrationControllerTest)
     test/spacecast_web/controllers/user_registration_controller_test.exs:6
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/user_registration_controller_test.exs:1: SpacecastWeb.UserRegistrationControllerTest.__ex_unit__/2

23:54:41.826 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:42.287 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:42.575 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:42.751 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


639) test failed registration redirects with error (SpacecastWeb.UserRegistrationControllerTest)
     test/spacecast_web/controllers/user_registration_controller_test.exs:24
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/controllers/user_registration_controller_test.exs:1: SpacecastWeb.UserRegistrationControllerTest.__ex_unit__/2

23:54:43.088 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:43.914 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


640) test user can delete a resource (SpacecastWeb.Features.ResourceCreationWorkflowTest)
     test/spacecast_web/features/resource_creation_workflow_test.exs:208
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_creation_workflow_test.exs:38: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit_setup_4/1
       test/spacecast_web/features/resource_creation_workflow_test.exs:1: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit__/2

23:54:45.010 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:45.419 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.046 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.262 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.325 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.439 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.567 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:46.639 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


641) test user can create a new resource (SpacecastWeb.Features.ResourceCreationWorkflowTest)
     test/spacecast_web/features/resource_creation_workflow_test.exs:121
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_creation_workflow_test.exs:38: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit_setup_4/1
       test/spacecast_web/features/resource_creation_workflow_test.exs:1: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit__/2

23:54:47.647 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:47.865 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:48.179 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:54:48.244 [info] Backpressure status: normal (value: 0)


642) test user can edit an existing resource (SpacecastWeb.Features.ResourceCreationWorkflowTest)
     test/spacecast_web/features/resource_creation_workflow_test.exs:173
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       test/spacecast_web/features/resource_creation_workflow_test.exs:38: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit_setup_4/1
       test/spacecast_web/features/resource_creation_workflow_test.exs:1: SpacecastWeb.Features.ResourceCreationWorkflowTest.__ex_unit__/2

23:54:49.388 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:49.409 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:49.724 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:49.799 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:50.048 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:50.155 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:50.689 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


643) test StyleGuideLive renders the style guide page (SpacecastWeb.StyleGuideLiveTest)
     test/spacecast_web/live/style_guide_live_test.exs:15
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/style_guide_live_test.exs:1: SpacecastWeb.StyleGuideLiveTest.__ex_unit__/2

23:54:51.558 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:51.604 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:51.996 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:52.842 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


644) test StyleGuideLive can change theme (SpacecastWeb.StyleGuideLiveTest)
     test/spacecast_web/live/style_guide_live_test.exs:33
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/live/style_guide_live_test.exs:1: SpacecastWeb.StyleGuideLiveTest.__ex_unit__/2

23:54:53.381 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:53.582 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:53.709 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:53.966 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:54.114 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


645) test setup_alerting/2 sets up alerting with custom notification function (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:229
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:54:55.432 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:56.047 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:56.120 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


646) test clear_alerting/0 clears alerting when not set up (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:321
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:54:57.045 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.096 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.108 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.365 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.435 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.570 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:57.948 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:54:58.737 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


647) test setup_alerting/2 sets up alerting with extreme threshold values (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:294
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:00.828 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:00.903 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


648) test record_processing_metric/2 handles unknown status values (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:477
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:01.158 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:01.338 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:01.523 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:01.565 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:01.626 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:01.694 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


649) test telemetry integration emits telemetry events for backpressure detection (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:995
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:03.245 [info] Backpressure status: normal (value: 0)
23:55:04.045 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:04.384 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:04.556 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:04.917 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


650) test record_queue_size/2 handles nil handler name (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:564
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:06.141 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:06.388 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:06.431 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:06.600 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


651) test get_metrics/1 handles zero lookback period (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:60
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:07.539 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:08.196 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:08.523 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


652) test record_processing_metric/2 accumulates metrics for same event type (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:383
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:09.270 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:10.268 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


653) test state management reset_state clears all metrics (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1032
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:11.092 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:11.212 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:11.214 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:11.967 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:11.992 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:12.169 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:12.423 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:12.858 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


654) test record_processing_metric/2 handles event with no metrics parameter (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:455
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:13.127 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:13.262 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:13.493 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:14.270 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:14.464 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:14.534 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:14.904 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:14.928 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


655) test setup_alerting/2 sets up alerting with nil notification function (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:282
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:15.082 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:15.085 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:16.405 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:16.778 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


656) test detect_backpressure/3 detects critical backpressure when multiple conditions are met (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:143
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:17.106 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:18.119 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:55:18Z]]
23:55:18.119 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.4157.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:55:18.182 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:55:18.247 [info] Backpressure status: normal (value: 0)
23:55:18.496 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


657) test alerting edge cases handles alerting with extreme values (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1178
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:19.208 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:19.550 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:19.708 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


658) test alerting edge cases handles alerting with custom lookback (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1166
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:21.548 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:21.899 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:22.027 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:22.192 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:22.241 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:22.735 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


659) test detect_backpressure/3 returns normal status when no backpressure detected (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:80
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:23.072 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:23.209 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:24.460 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:24.614 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


660) test check_and_alert/0 does not alert when backpressure is normal (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:572
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:25.449 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:25.500 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:26.089 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:26.257 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:26.452 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


661) test record_queue_size/2 records queue size for handler (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:527
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:27.271 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:27.456 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:28.480 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:28.579 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


662) test clear_alerting/0 clears alerting configuration (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:310
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:29.458 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:29.482 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:30.205 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:30.351 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:30.876 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


663) test record_processing_metric/2 records successful processing metric (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:329
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:31.544 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:31.924 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:32.394 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:32.707 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


664) test record_queue_size/2 handles negative queue size (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:552
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:33.249 [info] Backpressure status: normal (value: 0)
23:55:33.333 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:33.548 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:33.758 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:33.772 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:34.414 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


665) test detect_backpressure/3 detects high error rates (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:129
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:35.247 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:36.546 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:36.607 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:36.705 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:36.984 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


666) test error handling handles nil metrics (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:932
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:37.006 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:37.114 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:37.300 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:38.783 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


667) test detect_backpressure/3 handles empty maps (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:173
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:40.478 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:40.551 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:40.628 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


668) test performance and edge cases handles large number of event types (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:742
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:41.665 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:41.710 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:42.753 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


669) test get_metrics/1 handles very large lookback period (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:72
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:43.083 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:43.283 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:43.690 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:43.814 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:44.087 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:44.412 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:44.659 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:44.873 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


670) test state management reset_state preserves event_store and metric_interval (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1065
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:45.715 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:45.766 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:45.824 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:46.352 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:46.413 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:46.659 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:46.767 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


671) test performance and edge cases handles history overflow (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:859
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:47.077 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:47.456 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:48.188 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:48.191 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:55:48.204 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:48.252 [info] Backpressure status: normal (value: 0)
23:55:48.837 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


672) test telemetry integration emits telemetry events for processing metrics (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:970
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:49.040 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:49.049 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:49.159 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:50.251 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


673) test telemetry integration emits telemetry events for metrics collection (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1025
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:51.371 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:51.570 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:51.677 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:52.175 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:52.201 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


674) test setup_alerting/2 sets up alerting with minimal options (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:288
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:53.468 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:53.740 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.133 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.442 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.774 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.812 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.815 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:54.880 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


675) test detect_backpressure/3 handles just below threshold values (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:202
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:55.884 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:56.165 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


676) test get_metrics/1 includes processing metrics from recorded events (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:37
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:57.757 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:57.778 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:57.881 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


677) test telemetry integration emits telemetry events for queue sizes (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:990
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:55:59.220 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:59.410 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:59.523 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:55:59.616 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:00.539 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:00.875 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:00.945 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


678) test check_and_alert/0 triggers alert when backpressure is detected (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:583
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:01.360 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:01.524 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:01.853 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:02.858 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


679) test record_queue_size/2 updates existing queue size (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:537
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:02.993 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:03.176 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:03.255 [info] Backpressure status: normal (value: 0)
23:56:03.475 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:04.452 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:04.730 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:04.787 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


680) test performance and edge cases handles zero and negative values (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:824
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:05.781 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:06.059 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:06.224 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:06.309 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:06.954 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


681) test detect_backpressure/3 handles edge case thresholds (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:184
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:07.547 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:08.004 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:08.351 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:08.504 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:08.972 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


682) test check_and_alert/0 handles alerting with custom thresholds (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:689
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:09.139 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:09.553 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:09.685 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:10.506 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:10.537 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:10.590 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:10.908 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


683) test error handling handles non-map metrics (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:950
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:11.090 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:11.226 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:12.004 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:12.111 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:12.133 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:12.533 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


684) test record_queue_size/2 handles zero queue size (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:546
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:13.654 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:14.394 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:14.403 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


685) test performance and edge cases handles concurrent metric recording (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:767
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:15.579 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:15.608 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:16.390 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


686) test record_processing_metric/2 handles nil status (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:501
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:17.021 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:17.256 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:17.678 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:17.882 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:18.121 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:56:18Z]]
23:56:18.121 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.4256.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:56:18.201 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:56:18.201 [warning] 🟡 ALERT: Slow Response Time: Current value 1600 exceeds threshold 1000
Metric: phoenix.endpoint.stop.duration
Value: 1600
Threshold: 1000
Time: 2025-08-02 21:56:18.201543Z

23:56:18.201 [debug] Alert channel email is disabled or not configured
23:56:18.201 [warning] 🟡 ALERT: Slow Database Queries: Current value 826 exceeds threshold 500
Metric: spacecast.repo.query.total_time
Value: 826
Threshold: 500
Time: 2025-08-02 21:56:18.201844Z

23:56:18.201 [debug] Alert channel email is disabled or not configured
23:56:18.258 [info] Backpressure status: normal (value: 0)
23:56:18.368 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:18.574 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


687) test performance and edge cases handles unicode and special characters in handler names (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:882
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:19.161 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:19.993 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:20.716 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


688) test get_metrics/1 handles negative lookback period (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:66
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:21.618 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:22.196 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


689) test state management reset_state clears alerting configuration (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1090
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:23.019 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:23.601 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:24.810 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:24.874 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


690) test performance and edge cases handles very long handler names (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:894
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:25.654 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:26.276 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:26.492 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


691) test record_queue_size/2 handles very large queue size (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:558
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:27.303 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:27.310 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:27.525 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:27.591 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:27.781 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:28.043 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:28.269 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:28.944 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


692) test alerting edge cases handles alerting with custom interval (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1154
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:29.257 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:29.478 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:30.644 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:30.826 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


693) test record_processing_metric/2 handles missing optional fields with defaults (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:433
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:31.387 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:31.409 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:31.695 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:32.087 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:32.295 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:32.574 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:32.811 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


694) test error handling handles malformed event data (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:904
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:33.093 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:33.260 [info] Backpressure status: normal (value: 0)
23:56:33.459 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:34.382 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


695) test detect_backpressure/3 detects slow processing (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:111
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:35.161 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:35.608 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:35.834 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:36.100 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:36.149 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:36.359 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


696) test setup_alerting/2 sets up alerting with default options (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:222
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:37.160 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:37.623 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:37.756 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:37.906 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:38.703 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:38.896 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


697) test record_processing_metric/2 records error processing metric (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:358
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:39.282 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:39.369 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:39.486 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:40.185 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:40.297 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:40.594 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:40.691 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:40.863 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


698) test alerting edge cases handles alerting with custom notification channels (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1131
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:41.162 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:41.195 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:41.760 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:42.511 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:42.981 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


699) test error handling handles nil event (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:921
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:43.192 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:43.201 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:43.409 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:43.557 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


700) test detect_backpressure/3 identifies bottlenecks correctly (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:156
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:45.552 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:45.995 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:46.293 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:46.564 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


701) test detect_backpressure/3 detects queue pressure (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:98
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:46.991 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:47.634 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:48.206 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:56:48.262 [info] Backpressure status: normal (value: 0)
23:56:48.757 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


702) test get_metrics/1 returns current metrics with default options (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:17
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:49.393 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:49.504 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:49.806 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:50.457 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:50.582 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:50.856 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:50.928 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


703) test setup_alerting/2 sets up alerting with custom options (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:267
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1998ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:51.139 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:51.977 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:52.250 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:52.405 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:52.822 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:52.920 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


704) test check_and_alert/0 respects alert cooldown period (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:623
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:53.525 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:53.678 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


705) test get_metrics/1 returns metrics with custom lookback period (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:32
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:55.058 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:55.083 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:55.458 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:55.516 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:55.538 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:55.980 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


706) test alerting edge cases handles alerting with custom recipients (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:1143
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:57.177 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:57.346 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:58.108 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:56:58.156 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


707) test check_and_alert/0 does not alert when alerting is disabled (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:659
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

23:56:59.365 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:00.007 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:00.755 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:00.956 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


708) test performance and edge cases handles extreme values gracefully (Spacecast.Events.Core.EventMonitorTest)
     test/spacecast/events/core/event_monitor_test.exs:799
     ** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

       1. Ensuring your database is available and that you can connect to it
       2. Tracking down slow queries and making sure they are running fast enough
       3. Increasing the pool_size (although this increases resource consumption)
       4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

     See DBConnection.start_link/2 for more information

     stacktrace:
       (db_connection 2.7.0) lib/db_connection/ownership.ex:109: DBConnection.Ownership.ownership_checkout/2
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:551: Ecto.Adapters.SQL.Sandbox.checkout/2
       (spacecast 0.1.0) test/support/data_case.ex:32: Spacecast.DataCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/data_case.ex:1: Spacecast.DataCase.__ex_unit__/2
       test/spacecast/events/core/event_monitor_test.exs:1: Spacecast.Events.Core.EventMonitorTest.__ex_unit__/2

..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
.[HandlerProcess initialize_handler - handler_module]: nil
[HandlerProcess initialize_handler - handler_module]: "not_a_module"
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.InfoHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TerminateHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler
23:57:01.013 [error] Exception in Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler.init/0: %RuntimeError{message: "Intentional crash"}
23:57:01.013 [error] Failed to initialize handler Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler: %RuntimeError{message: "Intentional crash"}
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler
23:57:01.014 [error] Exception in Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler.init/0: %RuntimeError{message: "Intentional crash"}
23:57:01.014 [error] Failed to initialize handler Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler: %RuntimeError{message: "Intentional crash"}
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler
23:57:01.014 [error] Exception in Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler.init/0: %RuntimeError{message: "Intentional crash"}
23:57:01.014 [error] Failed to initialize handler Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler: %RuntimeError{message: "Intentional crash"}
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler
23:57:01.015 [error] Exception in Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler.init/0: %RuntimeError{message: "Intentional crash"}
23:57:01.015 [error] Failed to initialize handler Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler: %RuntimeError{message: "Intentional crash"}
..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
..[HandlerProcess initialize_handler - handler_module]: String
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler
23:57:01.018 [error] Exception in Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler.init/0: %RuntimeError{message: "Intentional crash"}
23:57:01.018 [error] Failed to initialize handler Spacecast.Events.Handlers.HandlerSupervisorTest.CrashingHandler: %RuntimeError{message: "Intentional crash"}
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CastHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
.[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashCallHandler
23:57:01.054 [error] GenServer #PID<0.4463.0> terminating
** (RuntimeError) Intentional crash
    test/spacecast/events/handlers/handler_supervisor_test.exs:282: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashCallHandler.handle_call/3
    (spacecast 0.1.0) lib/spacecast/events/handlers/handler_process.ex:140: Spacecast.Events.Handlers.HandlerProcess.handle_call/3
    (stdlib 6.2.2.1) gen_server.erl:2381: :gen_server.try_handle_call/4
    (stdlib 6.2.2.1) gen_server.erl:2410: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message (from #PID<0.4459.0>): {:handle_message, :test_message}
State: %{options: [], handler: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashCallHandler, handler_state: %{}, event_types: :all}
Client #PID<0.4459.0> is alive

    (stdlib 6.2.2.1) gen.erl:260: :gen.do_call/4
    (elixir 1.18.4) lib/gen_server.ex:1125: GenServer.call/3
    (spacecast 0.1.0) lib/spacecast/events/handlers/handler_supervisor.ex:147: Spacecast.Events.Handlers.HandlerSupervisor.send_to_handler/2
    test/spacecast/events/handlers/handler_supervisor_test.exs:287: Spacecast.Events.Handlers.HandlerSupervisorTest."test send_to_handler/2 handles handler crash during call"/1
    (ex_unit 1.18.4) lib/ex_unit/runner.ex:511: ExUnit.Runner.exec_test/2
    (stdlib 6.2.2.1) timer.erl:595: :timer.tc/2
    (ex_unit 1.18.4) lib/ex_unit/runner.ex:433: anonymous fn/6 in ExUnit.Runner.spawn_test_monitor/4
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CrashCallHandler
..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
..[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.TestHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CallHandler
[HandlerProcess initialize_handler - handler_module]: Spacecast.Events.Handlers.HandlerSupervisorTest.CastHandler
..23:57:01.153 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:01.601 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:01.869 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:01.872 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:01.946 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:02.179 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


709) test External Service Monitoring monitors external service health (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:391
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1932ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:03.264 [info] Backpressure status: normal (value: 0)
23:57:03.356 [error] Postgrex.Protocol (#PID<0.506.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:03.582 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:03.862 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:04.120 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:04.842 [error] Postgrex.Protocol (#PID<0.512.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:04.845 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:04.916 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


710) test External Service Performance handles high external service load (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:508
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:05.413 [error] Postgrex.Protocol (#PID<0.523.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:05.952 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:06.082 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:06.092 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:06.271 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:06.499 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:06.898 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


711) test External Service Security handles invalid credentials (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:469
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:07.532 [error] Postgrex.Protocol (#PID<0.540.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:07.833 [error] Postgrex.Protocol (#PID<0.553.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:08.449 [error] Postgrex.Protocol (#PID<0.529.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


712) test External API Integration handles API rate limiting (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:114
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:09.945 [error] Postgrex.Protocol (#PID<0.530.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:09.987 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:10.859 [error] Postgrex.Protocol (#PID<0.509.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:10.880 [error] Postgrex.Protocol (#PID<0.552.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:10.896 [error] Postgrex.Protocol (#PID<0.519.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


713) test External Service Monitoring tracks external service metrics (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:427
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:11.127 [error] Postgrex.Protocol (#PID<0.542.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:11.673 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:11.880 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:12.621 [error] Postgrex.Protocol (#PID<0.510.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:12.839 [error] Postgrex.Protocol (#PID<0.546.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:12.933 [error] Postgrex.Protocol (#PID<0.534.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


714) test Webhook Integration retries failed webhooks (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:259
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:13.108 [error] Postgrex.Protocol (#PID<0.535.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:14.222 [error] Postgrex.Protocol (#PID<0.548.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:14.549 [error] Postgrex.Protocol (#PID<0.551.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:14.934 [error] Postgrex.Protocol (#PID<0.517.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


715) test Third-Party Service Integration integrates with push notification service (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:169
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:15.491 [error] Postgrex.Protocol (#PID<0.537.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:15.833 [error] Postgrex.Protocol (#PID<0.545.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:16.233 [error] Postgrex.Protocol (#PID<0.539.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:16.335 [error] Postgrex.Protocol (#PID<0.527.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:16.667 [error] Postgrex.Protocol (#PID<0.516.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:16.947 [error] Postgrex.Protocol (#PID<0.533.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


716) test External Service Security encrypts sensitive data for external services (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:487
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:17.172 [error] Postgrex.Protocol (#PID<0.544.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:17.965 [error] Postgrex.Protocol (#PID<0.543.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:18.045 [error] Postgrex.Protocol (#PID<0.507.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:18.105 [error] Postgrex.Protocol (#PID<0.541.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:18.124 [debug] QUERY ERROR source="event_reminders"
SELECT e0."id", e0."reminder_time", e0."status", e0."recipient", e0."sent_at", e0."error_message", e0."event_id", e0."inserted_at", e0."updated_at" FROM "event_reminders" AS e0 WHERE ((e0."reminder_time" <= $1) AND (e0."status" = 'pending')) ORDER BY e0."reminder_time" [~U[2025-08-02 21:57:18Z]]
23:57:18.124 [error] GenServer Spacecast.Events.ReminderWorker terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.4342.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:1093: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.12.1) lib/ecto/adapters/sql.ex:994: Ecto.Adapters.SQL.execute/6
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:232: Ecto.Repo.Queryable.execute/4
    (ecto 3.12.5) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:36: Spacecast.Events.ReminderWorker.process_due_reminders/0
    (spacecast 0.1.0) lib/spacecast/events/reminder_worker.ex:26: Spacecast.Events.ReminderWorker.handle_info/2
    (stdlib 6.2.2.1) gen_server.erl:2345: :gen_server.try_handle_info/3
    (stdlib 6.2.2.1) gen_server.erl:2433: :gen_server.handle_msg/6
    (stdlib 6.2.2.1) proc_lib.erl:329: :proc_lib.init_p_do_apply/3
Last message: :check_reminders
State: %{}
23:57:18.214 [warning] Failed to get metric value for spacecast.socket.validation.metrics.error_rate: unknown_metric
23:57:18.265 [info] Backpressure status: normal (value: 0)
23:57:18.352 [error] Postgrex.Protocol (#PID<0.547.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


717) test External Service Performance implements circuit breaker pattern (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:544
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 1999ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:19.412 [error] Postgrex.Protocol (#PID<0.514.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:20.192 [error] Postgrex.Protocol (#PID<0.521.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:20.740 [error] Postgrex.Protocol (#PID<0.531.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:20.876 [error] Postgrex.Protocol (#PID<0.532.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


718) test Webhook Integration handles webhook delivery failures (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:242
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:21.129 [error] Postgrex.Protocol (#PID<0.522.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:21.691 [error] Postgrex.Protocol (#PID<0.550.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


719) test External Data Synchronization synchronizes data with external system (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:300
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:23.352 [error] Postgrex.Protocol (#PID<0.525.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:23.726 [error] Postgrex.Protocol (#PID<0.549.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:24.083 [error] Postgrex.Protocol (#PID<0.524.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:24.403 [error] Postgrex.Protocol (#PID<0.538.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


720) test Third-Party Service Integration integrates with SMS service (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:150
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:25.583 [error] Postgrex.Protocol (#PID<0.515.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:26.083 [error] Postgrex.Protocol (#PID<0.528.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:26.393 [error] Postgrex.Protocol (#PID<0.511.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:26.481 [error] Postgrex.Protocol (#PID<0.508.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:26.801 [error] Postgrex.Protocol (#PID<0.520.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:26.835 [error] Postgrex.Protocol (#PID<0.513.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused


721) test External Service Security validates external service credentials (SpacecastWeb.Integration.ExternalServiceIntegrationTest)
     test/spacecast_web/integration/external_service_integration_test.exs:450
     ** (MatchError) no match of right hand side value: {:error, {%DBConnection.ConnectionError{message: "connection not available and request was dropped from queue after 2000ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:\n\n  1. Ensuring your database is available and that you can connect to it\n  2. Tracking down slow queries and making sure they are running fast enough\n  3. Increasing the pool_size (although this increases resource consumption)\n  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval\n\nSee DBConnection.start_link/2 for more information\n", severity: :error, reason: :queue_timeout}, [{DBConnection.Ownership, :ownership_checkout, 2, [file: ~c"lib/db_connection/ownership.ex", line: 109, error_info: %{module: Exception}]}, {Ecto.Adapters.SQL.Sandbox, :checkout, 2, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 551]}, {Ecto.Adapters.SQL.Sandbox, :"-start_owner!/2-fun-0-", 3, [file: ~c"lib/ecto/adapters/sql/sandbox.ex", line: 446]}, {Agent.Server, :init, 1, [file: ~c"lib/agent/server.ex", line: 8]}, {:gen_server, :init_it, 2, [file: ~c"gen_server.erl", line: 2229]}, {:gen_server, :init_it, 6, [file: ~c"gen_server.erl", line: 2184]}, {:proc_lib, :init_p_do_apply, 3, [file: ~c"proc_lib.erl", line: 329]}]}}
     stacktrace:
       (ecto_sql 3.12.1) lib/ecto/adapters/sql/sandbox.ex:443: Ecto.Adapters.SQL.Sandbox.start_owner!/2
       (spacecast 0.1.0) test/support/data_case.ex:50: Spacecast.DataCase.setup_sandbox/1
       (spacecast 0.1.0) test/support/conn_case.ex:53: SpacecastWeb.ConnCase.__ex_unit_setup_0/1
       (spacecast 0.1.0) test/support/conn_case.ex:1: SpacecastWeb.ConnCase.__ex_unit__/2
       test/spacecast_web/integration/external_service_integration_test.exs:1: SpacecastWeb.Integration.ExternalServiceIntegrationTest.__ex_unit__/2

23:57:27.106 [error] Postgrex.Protocol (#PID<0.536.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:27.200 [error] Postgrex.Protocol (#PID<0.526.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused
23:57:27.210 [error] Postgrex.Protocol (#PID<0.518.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): connection refused - :econnrefused

BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
